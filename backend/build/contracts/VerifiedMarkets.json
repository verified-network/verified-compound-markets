{
  "contractName": "VerifiedMarkets",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "comet_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Borrowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bond",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "issuingDocs",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "faceValue",
          "type": "uint256"
        }
      ],
      "name": "NewRWA",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PostedCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Repaid",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "comet",
      "outputs": [
        {
          "internalType": "contract Comet",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "bond",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "issuingDocs",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "faceValue",
          "type": "uint256"
        }
      ],
      "name": "submitNewRWA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "postCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrowBase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "repayBase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"comet_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Borrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bond\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"issuingDocs\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"faceValue\",\"type\":\"uint256\"}],\"name\":\"NewRWA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PostedCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repaid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comet\",\"outputs\":[{\"internalType\":\"contract Comet\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"postCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repayBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bond\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"issuingDocs\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"faceValue\",\"type\":\"uint256\"}],\"name\":\"submitNewRWA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Kallol Borah\",\"kind\":\"dev\",\"methods\":{\"borrowBase(address,uint256)\":{\"params\":{\"amount\":\"amount of base asset borrowed*\",\"asset\":\"RWA for which base asset is borrowed\"}},\"constructor\":{\"params\":{\"comet_\":\"The Comet contract.*\"}},\"postCollateral(address,address,uint256)\":{\"params\":{\"amount\":\"amount of collateral posted*\",\"asset\":\"RWA for which collateral is posted\",\"collateral\":\"collateral used to buy bond issued by RWA issuer(must not be baseToken and must be accepted by comet)\"}},\"repayBase(address,uint256)\":{\"params\":{\"amount\":\"amount of base asset paid back*\",\"asset\":\"RWA for which base asset is paid back\"}},\"submitNewRWA(address,address,uint256,string,uint256)\":{\"params\":{\"apy\":\"interest rate paid on bond\",\"asset\":\"RWA for which bond is issued\",\"bond\":\"bond token that is issued\",\"faceValue\":\"par value of bond after discounting it with interest rate*\",\"issuingDocs\":\"ipfs reference for RWA docs\"}}},\"title\":\"Verified Markets\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrowBase(address,uint256)\":{\"notice\":\"Called by RWA issuer to to borrow base asset from Compound\"},\"comet()\":{\"notice\":\"The Comet contract\"},\"constructor\":{\"notice\":\"Construct a new operator.\"},\"postCollateral(address,address,uint256)\":{\"notice\":\"Used by RWA issuer to post collateral used to buy bonds issued by it to borrow from Compound\"},\"repayBase(address,uint256)\":{\"notice\":\"Called by RWA issuer to repay base asset to Compound and withdraw collateral posted earlier\"},\"submitNewRWA(address,address,uint256,string,uint256)\":{\"notice\":\"RWA issuer submits asset details and bond issued that can be purchased to provide collateral to the RWA issuer\"}},\"notice\":\"A Compound III operator to enable staking of collateral for real world assets to Compound.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/VerifiedMarkets.sol\":\"VerifiedMarkets\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/VerifiedMarkets.sol\":{\"keccak256\":\"0xdf68079a8446387d19f34271fc89cd03639793884da0d208a0dcf550e6b0e7e9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0851768f589f0d2ac993bddc27704a3244b3f377f9b7e522298ffddf95cbac85\",\"dweb:/ipfs/QmQdY4Fi7QUdBjyJQy3qGTAtpMPp9WY6sqfq2U8hRweWhx\"]},\"project:/contracts/interfaces/Bond.sol\":{\"keccak256\":\"0x6167b8680d8ee3280a6a2c64e4510dcdcba9aa7725c00e129c2c35a13b06f3cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f846c51351b3fb890ae59d6f8253aa4c3fca9d7d86e335e96ea88412b536015\",\"dweb:/ipfs/QmRgGGCdmoWER1rSJ9pUj8oYXTu94JpeCAARveCqPV8iKN\"]},\"project:/contracts/interfaces/CometInterface.sol\":{\"keccak256\":\"0x0e6adfd82f429d881c5c57e50bd8b2f711c29f678d8f1f87759d5e5887f7e0e5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6d30ce8d8a0d43ee80b4f2aa363c1f6191d36fadf685a5d1e51019cc84df0dea\",\"dweb:/ipfs/QmQWQyGuARUNmZNhXz1TCTUsVZDaZFWYzMhjJi77qMwTqR\"]},\"project:/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x2741fde0a32608044b0359d2f763bda7e9a477bbb379deea4cc80bb5f14a54c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12f2355edddb83ecfbafe10b2802174c7450dfaf45cae2b1b25bcc546558938f\",\"dweb:/ipfs/QmfEHxiP7nppK4mVSP431DzGPqLfqNUf5krHVgWEJXamPu\"]},\"project:/contracts/interfaces/VerifiedMarketsInterface.sol\":{\"keccak256\":\"0x99bddc19a48dbe612bbbe626063b600de72993efc523d13918d2c5c9d29923b6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ede56288c75954d9260fb1f406d96bd44670081eab0fd5e765a9db82069857a6\",\"dweb:/ipfs/QmSzVA6WxzcDDsHB9XzRE1SqrroMYoDCYtCWEUMwMutx8A\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {
    "12": [
      {
        "length": 32,
        "start": 175
      },
      {
        "length": 32,
        "start": 1110
      },
      {
        "length": 32,
        "start": 1264
      },
      {
        "length": 32,
        "start": 1479
      },
      {
        "length": 32,
        "start": 1649
      },
      {
        "length": 32,
        "start": 1898
      },
      {
        "length": 32,
        "start": 2109
      },
      {
        "length": 32,
        "start": 2263
      },
      {
        "length": 32,
        "start": 2749
      },
      {
        "length": 32,
        "start": 2976
      },
      {
        "length": 32,
        "start": 3344
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:5",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:5"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:5",
                "type": ""
              }
            ],
            "src": "14:290:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13627:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:5",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:5"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:5"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:5",
                "type": ""
              }
            ],
            "src": "14:131:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "182:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "199:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "206:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "211:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "202:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "202:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "192:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "192:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "192:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "239:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "242:4:5",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "263:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "266:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "256:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "256:15:5"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "150:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "328:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "338:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "354:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "348:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "348:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "338:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "366:34:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "388:6:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "396:3:5",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "384:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:16:5"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "370:10:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "475:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "477:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "477:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "477:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "418:10:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "430:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "415:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "415:34:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "454:10:5"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "466:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "451:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "451:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "412:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "412:62:5"
                  },
                  "nodeType": "YulIf",
                  "src": "409:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "513:2:5",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "517:10:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "506:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "506:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "506:22:5"
                }
              ]
            },
            "name": "allocate_memory_1945",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "317:6:5",
                "type": ""
              }
            ],
            "src": "282:252:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "584:230:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "594:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "610:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "604:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "604:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "594:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "622:58:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "644:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "660:4:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "666:2:5",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "656:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "656:13:5"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "675:2:5",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "671:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "671:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "652:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "652:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "640:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "640:40:5"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "626:10:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "755:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "757:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "757:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "757:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "698:10:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "710:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "695:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "695:34:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "734:10:5"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "746:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "731:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "731:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "692:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "692:62:5"
                  },
                  "nodeType": "YulIf",
                  "src": "689:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "793:2:5",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "797:10:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "786:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "786:22:5"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "564:4:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "573:6:5",
                "type": ""
              }
            ],
            "src": "539:275:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:1030:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1014:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1023:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1026:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1016:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1016:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1016:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "988:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "984:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1009:3:5",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "980:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "977:53:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1039:36:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1065:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1052:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1052:23:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1043:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1109:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1084:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1084:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1084:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1124:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1134:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1124:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1148:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1158:2:5",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1152:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1169:47:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1201:9:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1212:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1197:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1197:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1184:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1184:32:5"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1173:7:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1250:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1225:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1225:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1225:33:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1267:17:5",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1277:7:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1267:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1293:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1320:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1331:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1316:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1316:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1303:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1303:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1293:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1344:46:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1375:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1386:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1371:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1371:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1358:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1358:32:5"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1348:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1399:28:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1409:18:5",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1403:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1454:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1463:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1466:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1456:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1456:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1456:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1442:6:5"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1450:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1439:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1439:14:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1436:34:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1479:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1493:9:5"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1504:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1489:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:22:5"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1483:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1559:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1568:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1571:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1561:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1561:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1561:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1538:2:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1542:4:5",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1534:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1534:13:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1549:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1530:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1530:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1523:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1523:35:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1520:55:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1584:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1607:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1594:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1594:16:5"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1588:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1633:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1635:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1635:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1635:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1625:2:5"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1629:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1622:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1622:10:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1619:36:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1664:66:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1705:2:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1709:4:5",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1701:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1701:13:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1720:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1716:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1716:7:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1697:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1697:27:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1726:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1693:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1693:36:5"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1677:15:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1677:53:5"
                  },
                  "variables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "1668:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1746:5:5"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1753:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1739:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1739:17:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1739:17:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1802:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1811:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1814:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1804:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1804:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1804:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1779:2:5"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1783:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1775:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1775:11:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1788:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1771:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1771:20:5"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1793:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1768:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1768:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1765:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "1844:5:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1851:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1840:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1840:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1860:2:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1864:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1856:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1856:11:5"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1869:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1827:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1827:45:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1827:45:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "1896:5:5"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1903:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1892:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1892:14:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1908:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1888:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1888:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1913:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1881:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1881:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1881:34:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1924:15:5",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "1934:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1924:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1948:43:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1975:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1986:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1971:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1971:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1958:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1958:33:5"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1948:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "932:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "940:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "948:6:5",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "956:6:5",
                "type": ""
              }
            ],
            "src": "819:1178:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2089:228:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2135:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2144:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2147:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2137:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2137:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2137:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2110:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2119:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2106:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2106:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2131:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2102:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2102:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2099:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2160:36:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2186:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2173:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2173:23:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2164:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2230:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2205:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2205:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2205:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2245:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2255:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2245:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2269:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2296:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2307:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2292:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2292:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2279:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2279:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2269:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2047:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2058:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2070:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2078:6:5",
                "type": ""
              }
            ],
            "src": "2002:315:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2426:352:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2472:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2481:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2484:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2474:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2474:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2474:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2447:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2456:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2443:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2443:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2468:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2439:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2439:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2436:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2497:36:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2523:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2510:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2510:23:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2501:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2567:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2542:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2542:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2582:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2592:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2582:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2606:47:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2638:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2649:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2634:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2634:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2621:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2621:32:5"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2610:7:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2687:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2662:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2662:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2662:33:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2704:17:5",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2714:7:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2704:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2730:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2757:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2768:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2753:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2753:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2740:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2730:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2376:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2387:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2399:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2407:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2415:6:5",
                "type": ""
              }
            ],
            "src": "2322:456:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2898:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2908:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2920:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2931:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2916:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2916:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2908:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2950:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2965:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2981:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2986:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2977:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2977:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2990:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2973:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2973:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2961:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2961:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2943:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2943:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2943:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Comet_$1217__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2867:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2878:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2889:4:5",
                "type": ""
              }
            ],
            "src": "2783:217:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3179:182:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3196:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3207:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3189:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3189:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3189:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3230:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3241:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3226:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3226:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3246:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3219:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3219:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3219:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3269:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3280:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3265:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3265:18:5"
                      },
                      {
                        "hexValue": "525741207375626d697373696f6e203a20496e76616c69642072657175657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3285:34:5",
                        "type": "",
                        "value": "RWA submission : Invalid request"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3258:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3258:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3258:62:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3329:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3341:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3352:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3337:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3337:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3329:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ac2d297c7b797b46238ca2df5d2a150e9ead54471c39a8a35a5a622a4d896f94__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3156:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3170:4:5",
                "type": ""
              }
            ],
            "src": "3005:356:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3421:325:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3431:22:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3445:1:5",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3448:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3441:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3441:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3431:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3462:38:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3492:4:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3498:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3488:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3488:12:5"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3466:18:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3539:31:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3541:27:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3555:6:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3563:4:5",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3551:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3551:17:5"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3541:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3519:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3512:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3512:26:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3509:61:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3629:111:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3650:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3657:3:5",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3662:10:5",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3653:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3653:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3643:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3643:31:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3643:31:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3694:1:5",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3697:4:5",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3687:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3687:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3687:15:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3722:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3725:4:5",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3715:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3715:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3715:15:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3585:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3608:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3616:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3605:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3605:14:5"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3582:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3582:38:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3579:161:5"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3401:4:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3410:6:5",
                "type": ""
              }
            ],
            "src": "3366:380:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3807:65:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3824:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "3827:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3817:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3817:14:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3817:14:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3840:26:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3858:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3861:4:5",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "3848:9:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3848:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "3840:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "3790:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3798:4:5",
                "type": ""
              }
            ],
            "src": "3751:121:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3958:464:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3991:425:5",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4005:11:5",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4015:1:5",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "4009:2:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4036:2:5"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "4040:5:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4029:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4029:17:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4029:17:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4059:31:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4081:2:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4085:4:5",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "4071:9:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4071:19:5"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "4063:4:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4103:57:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "4126:4:5"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4136:1:5",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "4143:10:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4155:2:5",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4139:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4139:19:5"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "4132:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4132:27:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4122:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4122:38:5"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "4107:11:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4197:23:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4199:19:5",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "4214:4:5"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4199:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "4179:10:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4191:4:5",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "4176:2:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4176:20:5"
                        },
                        "nodeType": "YulIf",
                        "src": "4173:47:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4233:41:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "4247:4:5"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4257:1:5",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "4264:3:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4269:2:5",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4260:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4260:12:5"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "4253:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4253:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4243:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4243:31:5"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "4237:2:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4287:24:5",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "4300:11:5"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "4291:5:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4385:21:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "4394:5:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4401:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4387:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4387:17:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4387:17:5"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "4335:5:5"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "4342:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "4332:2:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4332:13:5"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "4346:26:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4348:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "4361:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4368:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4357:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4357:13:5"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "4348:5:5"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "4328:3:5",
                          "statements": []
                        },
                        "src": "4324:82:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "3974:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3979:2:5",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3971:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3971:11:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3968:448:5"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "3930:5:5",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "3937:3:5",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "3942:10:5",
                "type": ""
              }
            ],
            "src": "3877:545:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4512:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4522:65:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "4537:4:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4555:1:5",
                                        "type": "",
                                        "value": "3"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "4558:3:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4551:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4551:11:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4568:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4564:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4564:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4547:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4547:24:5"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "4543:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4543:29:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4533:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4533:40:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4579:1:5",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "4582:3:5"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4575:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4575:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4530:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4530:57:5"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "4522:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4489:4:5",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "4495:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "4503:4:5",
                "type": ""
              }
            ],
            "src": "4427:166:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4694:1256:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4704:24:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "4724:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4718:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4718:10:5"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "4708:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4771:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4773:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4773:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4773:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4743:6:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4751:18:5",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4740:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4740:30:5"
                  },
                  "nodeType": "YulIf",
                  "src": "4737:56:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "4846:4:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "4884:4:5"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "4878:5:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4878:11:5"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "4852:25:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4852:38:5"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4892:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "4802:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4802:97:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4802:97:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4908:18:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4925:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "4912:9:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4935:23:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4954:4:5",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "4939:11:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4967:24:5",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "4980:11:5"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "4967:9:5"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5037:656:5",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5051:35:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "5070:6:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5082:2:5",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "5078:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5078:7:5"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5066:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5066:20:5"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "5055:7:5",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5099:49:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5143:4:5"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "5113:29:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5113:35:5"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "5103:6:5",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5161:10:5",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5170:1:5",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "5165:1:5",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5248:172:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5273:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "5291:3:5"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "5296:9:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "5287:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5287:19:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "5281:5:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5281:26:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "5266:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5266:42:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5266:42:5"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5325:24:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5339:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5347:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5335:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5335:14:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5325:6:5"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5366:40:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5383:9:5"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5394:11:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5379:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5379:27:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "5366:9:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5195:1:5"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "5198:7:5"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "5192:2:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5192:14:5"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "5207:28:5",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5209:24:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5218:1:5"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5221:11:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5214:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5214:19:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5209:1:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "5188:3:5",
                              "statements": []
                            },
                            "src": "5184:236:5"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5468:166:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5486:43:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "5513:3:5"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5518:9:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5509:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5509:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5503:5:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5503:26:5"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "5490:9:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5553:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "5565:9:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "5592:1:5",
                                                            "type": "",
                                                            "value": "3"
                                                          },
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "5595:6:5"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "shl",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "5588:3:5"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "5588:14:5"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "5604:3:5",
                                                        "type": "",
                                                        "value": "248"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5584:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "5584:24:5"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "5614:1:5",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5610:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "5610:6:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5580:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5580:37:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "5576:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5576:42:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "5561:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5561:58:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "5546:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5546:74:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5546:74:5"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "5439:7:5"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "5448:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "5436:2:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5436:19:5"
                            },
                            "nodeType": "YulIf",
                            "src": "5433:201:5"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5654:4:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5668:1:5",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "5671:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "5664:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5664:14:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5680:1:5",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5660:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5660:22:5"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "5647:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5647:36:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5647:36:5"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "5030:663:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5035:1:5",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5710:234:5",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5724:14:5",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5737:1:5",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "5728:5:5",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5773:67:5",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5791:35:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "5810:3:5"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5815:9:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5806:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5806:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5800:5:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5800:26:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5791:5:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "5754:6:5"
                            },
                            "nodeType": "YulIf",
                            "src": "5751:89:5"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5860:4:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5919:5:5"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "5926:6:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "5866:52:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5866:67:5"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "5853:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5853:81:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5853:81:5"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "5702:242:5",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "5010:6:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5018:2:5",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5007:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5007:14:5"
                  },
                  "nodeType": "YulSwitch",
                  "src": "5000:944:5"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "4679:4:5",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4685:3:5",
                "type": ""
              }
            ],
            "src": "4598:1352:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6129:179:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6146:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6157:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6139:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6139:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6139:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6180:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6191:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6176:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6176:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6196:2:5",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6169:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6169:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6169:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6219:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6230:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6215:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6215:18:5"
                      },
                      {
                        "hexValue": "525741207375626d697373696f6e203a20496e76616c696420626f6e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6235:31:5",
                        "type": "",
                        "value": "RWA submission : Invalid bond"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6208:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6208:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6208:59:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6276:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6288:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6299:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6284:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6284:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6276:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e9fe6b1aa35315a9eec2b928ae49567079ea3c7de0e41b220725a45640e39cbb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6106:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6120:4:5",
                "type": ""
              }
            ],
            "src": "5955:353:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6379:184:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6389:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6398:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6393:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6458:63:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6483:3:5"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6488:1:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6479:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6479:11:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6502:3:5"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6507:1:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6498:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6498:11:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6492:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6492:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6472:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6472:39:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6472:39:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6419:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6422:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6416:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6416:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6430:19:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6432:15:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6441:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6444:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6437:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6437:10:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6432:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6412:3:5",
                    "statements": []
                  },
                  "src": "6408:113:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6541:3:5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6546:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6537:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6537:16:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6555:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6530:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6530:27:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6530:27:5"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6357:3:5",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6362:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6367:6:5",
                "type": ""
              }
            ],
            "src": "6313:250:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6773:434:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6790:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6805:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6821:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6826:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6817:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6817:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6830:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6813:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6813:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6801:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6801:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6783:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6783:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6783:51:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6854:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6865:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6850:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6850:18:5"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6870:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6843:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6843:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6843:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6897:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6908:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6893:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6893:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6913:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6886:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6886:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6886:31:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6926:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6946:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6940:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6940:13:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6930:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6973:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6984:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6969:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6969:19:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6990:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6962:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6962:35:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6962:35:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "7045:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7053:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7041:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7041:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7062:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7073:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7058:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7058:19:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7079:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "7006:34:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7006:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7006:80:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7095:63:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7111:9:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7130:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7138:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7126:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7126:15:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7147:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7143:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7143:7:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7122:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7122:29:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7107:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7107:45:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7154:3:5",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7103:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7103:55:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7095:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7178:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7189:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7174:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7174:18:5"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7194:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7167:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7167:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7167:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6718:9:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6729:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6737:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6745:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6753:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6764:4:5",
                "type": ""
              }
            ],
            "src": "6568:639:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7386:173:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7403:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7414:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7396:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7396:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7396:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7437:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7448:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7433:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7433:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7453:2:5",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7426:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7426:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7426:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7476:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7487:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7472:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7472:18:5"
                      },
                      {
                        "hexValue": "5265706179696e672062617365203a20496e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7492:25:5",
                        "type": "",
                        "value": "Repaying base : Invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7465:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7465:53:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7465:53:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7527:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7539:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7550:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7535:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7535:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7527:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7e16f45ca0b8574ba9a0f101e7dde34ccb7c3ffff9b592faacbc2b34b38c771__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7363:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7377:4:5",
                "type": ""
              }
            ],
            "src": "7212:347:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7738:224:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7755:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7766:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7748:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7748:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7748:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7789:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7800:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7785:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7785:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7805:2:5",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7778:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7778:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7778:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7828:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7839:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7824:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7824:18:5"
                      },
                      {
                        "hexValue": "5265706179696e672062617365203a20496e76616c696420636f6c6c61746572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7844:34:5",
                        "type": "",
                        "value": "Repaying base : Invalid collater"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7817:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7817:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7817:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7899:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7910:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7895:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7895:18:5"
                      },
                      {
                        "hexValue": "616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7915:4:5",
                        "type": "",
                        "value": "al"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7888:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7888:32:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7888:32:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7929:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7941:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7952:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7937:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7937:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7929:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3eeb9d4df013ab3025aa3d8c64747e2900ad97bf97c60400d800de21f1477287__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7715:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7729:4:5",
                "type": ""
              }
            ],
            "src": "7564:398:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8027:78:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8037:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8052:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8046:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8046:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8037:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8093:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8068:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8068:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8068:31:5"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8006:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8017:5:5",
                "type": ""
              }
            ],
            "src": "7967:138:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8191:170:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8237:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8246:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8249:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8239:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8239:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8239:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8212:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8221:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8208:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8208:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8233:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8204:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8204:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8201:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8262:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8281:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8275:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8275:16:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8266:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8325:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8300:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8300:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8300:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8340:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8350:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8340:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8157:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8168:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8180:6:5",
                "type": ""
              }
            ],
            "src": "8110:251:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8551:271:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8561:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8573:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8584:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8569:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8569:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8561:4:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8597:29:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8615:3:5",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8620:1:5",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8611:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8611:11:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8624:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8607:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8607:19:5"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8601:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8642:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8657:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8665:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8653:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8653:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8635:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8635:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8635:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8689:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8700:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8685:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8685:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8709:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8717:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8705:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8705:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8678:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8678:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8678:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8741:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8752:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8737:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8737:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8761:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8769:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8757:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8757:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8730:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8730:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8730:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8793:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8804:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8789:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8789:18:5"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8809:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8782:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8782:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8782:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8496:9:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8507:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8515:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8523:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8531:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8542:4:5",
                "type": ""
              }
            ],
            "src": "8366:456:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8859:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8876:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8883:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8888:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8879:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8879:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8869:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8869:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8869:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8916:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8919:4:5",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8909:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8909:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8909:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8940:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8943:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8933:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8933:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8933:15:5"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8827:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9008:79:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9018:17:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9030:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9033:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9026:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9026:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9018:4:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9059:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9061:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9061:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9061:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "9050:4:5"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9056:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9047:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9047:11:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9044:37:5"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8990:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8993:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8999:4:5",
                "type": ""
              }
            ],
            "src": "8959:128:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9193:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9203:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9215:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9226:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9211:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9211:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9203:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9245:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9260:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9276:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9281:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9272:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9272:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9285:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9268:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9268:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9256:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9256:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9238:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9238:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9238:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9162:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9173:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9184:4:5",
                "type": ""
              }
            ],
            "src": "9092:203:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9359:116:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9369:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9384:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9378:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9378:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9369:5:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9453:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9462:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9465:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9455:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9455:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9455:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9413:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9424:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9431:18:5",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9420:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9420:30:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9410:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9410:41:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9403:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9403:49:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9400:69:5"
                }
              ]
            },
            "name": "abi_decode_uint64_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9338:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9349:5:5",
                "type": ""
              }
            ],
            "src": "9300:175:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9540:132:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9550:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9565:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9559:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9559:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9550:5:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9650:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9659:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9662:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9652:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9652:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9652:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9594:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9605:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9612:34:5",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9601:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9601:46:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9591:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9591:57:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9584:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9584:65:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9581:85:5"
                }
              ]
            },
            "name": "abi_decode_uint128_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9519:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9530:5:5",
                "type": ""
              }
            ],
            "src": "9480:192:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9784:854:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9831:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9840:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9843:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9833:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9833:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9833:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9805:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9814:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9801:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9801:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9826:3:5",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9797:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9797:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9794:53:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9856:35:5",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_memory_1945",
                      "nodeType": "YulIdentifier",
                      "src": "9869:20:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9869:22:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9860:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9900:31:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9921:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9915:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9915:16:5"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "9904:7:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9983:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9992:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9995:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9985:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9985:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9985:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "9953:7:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "9966:7:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9975:4:5",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9962:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9962:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9950:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9950:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9943:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9943:39:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9940:59:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10015:5:5"
                      },
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "10022:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10008:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10008:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10008:22:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10050:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10057:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10046:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10046:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10096:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10107:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10092:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10092:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10062:29:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10062:49:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10039:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10039:73:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10039:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10132:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10139:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10128:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10128:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10178:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10189:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10174:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10174:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10144:29:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10144:49:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10121:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10121:73:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10121:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10214:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10221:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10210:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10210:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10259:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10270:2:5",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10255:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10255:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint64_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10226:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10226:48:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10203:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10203:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10203:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10295:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10302:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10291:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10291:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10341:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10352:3:5",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10337:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10337:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint64_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10308:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10308:49:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10284:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10284:74:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10284:74:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10378:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10385:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10374:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10374:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10424:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10435:3:5",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10420:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10420:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint64_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10391:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10391:49:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10367:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10367:74:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10367:74:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10461:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10468:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10457:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10457:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10507:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10518:3:5",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10503:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10503:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint64_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10474:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10474:49:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10450:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10450:74:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10450:74:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10544:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10551:3:5",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10540:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10540:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10591:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10602:3:5",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10587:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10587:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint128_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10557:29:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10557:50:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10533:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10533:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10533:75:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10617:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10627:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10617:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_AssetInfo_$682_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9750:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9761:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9773:6:5",
                "type": ""
              }
            ],
            "src": "9677:961:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10695:116:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10754:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10756:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10756:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10756:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10726:1:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10719:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10719:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10712:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10712:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10734:1:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10745:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10741:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10741:6:5"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10749:1:5"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10737:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10737:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10731:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10731:21:5"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10708:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10708:45:5"
                  },
                  "nodeType": "YulIf",
                  "src": "10705:71:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10785:20:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10800:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10803:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10796:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10796:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10785:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10674:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10677:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10683:7:5",
                "type": ""
              }
            ],
            "src": "10643:168:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10862:171:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10893:111:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10914:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10921:3:5",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10926:10:5",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10917:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10917:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10907:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10907:31:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10907:31:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10958:1:5",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10961:4:5",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10951:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10951:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10951:15:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10986:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10989:4:5",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10979:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10979:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10979:15:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10882:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10875:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10875:9:5"
                  },
                  "nodeType": "YulIf",
                  "src": "10872:132:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11013:14:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11022:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11025:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "11018:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11018:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11013:1:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10847:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10850:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10856:1:5",
                "type": ""
              }
            ],
            "src": "10816:217:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11139:76:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11149:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11161:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11172:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11157:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11157:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11149:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11191:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11202:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11184:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11184:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11184:25:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11108:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11119:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11130:4:5",
                "type": ""
              }
            ],
            "src": "11038:177:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11301:103:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11347:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11356:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11359:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11349:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11349:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11349:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11322:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11331:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11318:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11318:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11343:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11314:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11314:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "11311:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11372:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11388:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11382:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11382:16:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11372:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11267:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11278:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11290:6:5",
                "type": ""
              }
            ],
            "src": "11220:184:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11583:174:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11600:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11611:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11593:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11593:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11593:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11634:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11645:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11630:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11630:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11650:2:5",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11623:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11623:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11623:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11673:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11684:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11669:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11669:18:5"
                      },
                      {
                        "hexValue": "426f72726f77696e672062617365203a20496e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11689:26:5",
                        "type": "",
                        "value": "Borrowing base : Invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11662:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11662:54:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11662:54:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11725:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11737:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11748:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11733:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11733:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11725:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_776e4b134377506232128ec017a3f81b7644fa05c0eddc361a8bdbbe6aaf13f6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11560:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11574:4:5",
                "type": ""
              }
            ],
            "src": "11409:348:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11810:77:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11820:16:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11831:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11834:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11827:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11827:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11820:3:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11859:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11861:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11861:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11861:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11851:1:5"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "11854:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11848:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11848:10:5"
                  },
                  "nodeType": "YulIf",
                  "src": "11845:36:5"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11793:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11796:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11802:3:5",
                "type": ""
              }
            ],
            "src": "11762:125:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12066:177:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12083:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12094:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12076:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12076:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12076:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12117:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12128:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12113:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12113:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12133:2:5",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12106:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12106:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12106:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12156:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12167:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12152:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12152:18:5"
                      },
                      {
                        "hexValue": "506f7374696e6720436f6c6c61746572616c3a20496e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12172:29:5",
                        "type": "",
                        "value": "Posting Collateral: Invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12145:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12145:57:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12145:57:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12211:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12223:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12234:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12219:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12219:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12211:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3cf3a52794eca675bbfdc3c417dfc121ed781af513ea1dff09cb870ff5901776__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12043:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12057:4:5",
                "type": ""
              }
            ],
            "src": "11892:351:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12385:150:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12395:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12415:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12409:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12409:13:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "12399:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12470:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12478:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12466:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12466:17:5"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12485:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12490:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "12431:34:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12431:66:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12431:66:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12506:23:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12517:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12522:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12513:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12513:16:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12506:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12361:3:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12366:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12377:3:5",
                "type": ""
              }
            ],
            "src": "12248:287:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12714:228:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12731:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12742:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12724:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12724:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12724:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12765:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12776:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12761:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12761:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12781:2:5",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12754:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12754:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12754:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12804:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12815:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12800:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12800:18:5"
                      },
                      {
                        "hexValue": "506f7374696e6720436f6c6c61746572616c3a20496e76616c696420636f6c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12820:34:5",
                        "type": "",
                        "value": "Posting Collateral: Invalid coll"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12793:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12793:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12793:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12875:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12886:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12871:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12871:18:5"
                      },
                      {
                        "hexValue": "61746572616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12891:8:5",
                        "type": "",
                        "value": "ateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12864:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12864:36:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12864:36:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12909:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12921:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12932:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12917:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12917:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12909:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1514a66d04920ded0ec839da3eadca02e1f9a5199b666111c3d002a999de3528__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12691:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12705:4:5",
                "type": ""
              }
            ],
            "src": "12540:402:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13121:225:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13138:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13149:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13131:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13131:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13131:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13172:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13183:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13168:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13168:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13188:2:5",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13161:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13161:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13161:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13211:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13222:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13207:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13207:18:5"
                      },
                      {
                        "hexValue": "506f737420436f6c6c61746572616c3a20496e76616c696420636f6c6c617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13227:34:5",
                        "type": "",
                        "value": "Post Collateral: Invalid collate"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13200:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13200:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13200:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13282:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13293:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13278:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13278:18:5"
                      },
                      {
                        "hexValue": "72616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13298:5:5",
                        "type": "",
                        "value": "ral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13271:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13271:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13271:33:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13313:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13325:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13336:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13321:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13321:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13313:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_394cd8b0c5d27701b415634dce667cd2b2a95d6403b5642b99bdba02cf0dac43__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13098:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13112:4:5",
                "type": ""
              }
            ],
            "src": "12947:399:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13480:145:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13490:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13502:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13513:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13498:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13498:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13490:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13532:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13547:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13563:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13568:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "13559:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13559:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13572:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "13555:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13555:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13543:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13543:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13525:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13525:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13525:51:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13596:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13607:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13592:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13592:18:5"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13612:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13585:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13585:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13585:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13441:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13452:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13460:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13471:4:5",
                "type": ""
              }
            ],
            "src": "13351:274:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_1945() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 256)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let value_1 := calldataload(add(headStart, _1))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value3 := array\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_Comet_$1217__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ac2d297c7b797b46238ca2df5d2a150e9ead54471c39a8a35a5a622a4d896f94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"RWA submission : Invalid request\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e9fe6b1aa35315a9eec2b928ae49567079ea3c7de0e41b220725a45640e39cbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"RWA submission : Invalid bond\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 128)\n        let length := mload(value2)\n        mstore(add(headStart, 128), length)\n        copy_memory_to_memory_with_cleanup(add(value2, 32), add(headStart, 160), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 160)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e7e16f45ca0b8574ba9a0f101e7dde34ccb7c3ffff9b592faacbc2b34b38c771__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Repaying base : Invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3eeb9d4df013ab3025aa3d8c64747e2900ad97bf97c60400d800de21f1477287__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Repaying base : Invalid collater\")\n        mstore(add(headStart, 96), \"al\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_AssetInfo_$682_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := allocate_memory_1945()\n        let value_1 := mload(headStart)\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(0, 0) }\n        mstore(value, value_1)\n        mstore(add(value, 32), abi_decode_address_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_address_fromMemory(add(headStart, 64)))\n        mstore(add(value, 96), abi_decode_uint64_fromMemory(add(headStart, 96)))\n        mstore(add(value, 128), abi_decode_uint64_fromMemory(add(headStart, 128)))\n        mstore(add(value, 160), abi_decode_uint64_fromMemory(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_uint64_fromMemory(add(headStart, 192)))\n        mstore(add(value, 224), abi_decode_uint128_fromMemory(add(headStart, 224)))\n        value0 := value\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_776e4b134377506232128ec017a3f81b7644fa05c0eddc361a8bdbbe6aaf13f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Borrowing base : Invalid\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_3cf3a52794eca675bbfdc3c417dfc121ed781af513ea1dff09cb870ff5901776__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Posting Collateral: Invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_1514a66d04920ded0ec839da3eadca02e1f9a5199b666111c3d002a999de3528__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Posting Collateral: Invalid coll\")\n        mstore(add(headStart, 96), \"ateral\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394cd8b0c5d27701b415634dce667cd2b2a95d6403b5642b99bdba02cf0dac43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Post Collateral: Invalid collate\")\n        mstore(add(headStart, 96), \"ral\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "385:7774:0:-:0;;;1464:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1502:21:0;;;385:7774;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;385:7774:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "385:7774:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:1523;;;;;;:::i;:::-;;:::i;:::-;;6883:1274;;;;;;:::i;:::-;;:::i;6092:540::-;;;;;;:::i;:::-;;:::i;3964:1912::-;;;;;;:::i;:::-;;:::i;458:28::-;;;;;;;;-1:-1:-1;;;;;2961:32:5;;;2943:51;;2931:2;2916:18;458:28:0;;;;;;;2067:1523;-1:-1:-1;;;;;2309:21:0;;;;;;:61;;-1:-1:-1;;;;;;2350:20:0;;;;2309:61;:94;;;;;2398:5;-1:-1:-1;;;;;2390:13:0;:4;-1:-1:-1;;;;;2390:13:0;;;2309:94;:121;;;;;2429:1;2423:3;:7;2309:121;:154;;;;;2462:1;2450:9;:13;2309:154;2288:233;;;;-1:-1:-1;;;2288:233:0;;3207:2:5;2288:233:0;;;3189:21:5;;;3226:18;;;3219:30;3285:34;3265:18;;;3258:62;3337:18;;2288:233:0;;;;;;;;;2813:10;2848:3;2806:18;;;;;;;;;;;-1:-1:-1;;;;;2806:25:0;;;;;;;;;;:30;;2802:707;;2891:159;;;;;;;;-1:-1:-1;;;;;2891:159:0;;;;;;;;;;;;;;;;;;;;;;;;3071:10;-1:-1:-1;3064:18:0;;;;;;;;;:25;;;;;;;;;;;;:31;;;;-1:-1:-1;;;;;;3064:31:0;;;;;;;;;;-1:-1:-1;3064:31:0;;;;;2891:159;;;;3064:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;2854:252;2802:707;;;3229:10;3222:6;:18;;;;;;;;;;;-1:-1:-1;;;;;3222:25:0;;;;;;;;;;:30;;;:38;;;;3197:126;;;;-1:-1:-1;;;3197:126:0;;6157:2:5;3197:126:0;;;6139:21:5;6196:2;6176:18;;;6169:30;6235:31;6215:18;;;6208:59;6284:18;;3197:126:0;5955:353:5;3197:126:0;3344:10;3337:6;:18;;;;;;;;;;;-1:-1:-1;;;;;3337:25:0;;;;;;;;;:29;;;:35;;;3386:37;;:51;3426:11;3386:37;:51;:::i;:::-;-1:-1:-1;3458:10:0;3451:6;:18;;;;;;;;;;;-1:-1:-1;;;;;3451:25:0;;;;;;;;;:35;;:47;;;2802:707;3542:5;-1:-1:-1;;;;;3523:60:0;3530:10;-1:-1:-1;;;;;3523:60:0;;3549:4;3555:3;3560:11;3573:9;3523:60;;;;;;;;;:::i;:::-;;;;;;;;2067:1523;;;;;:::o;6883:1274::-;-1:-1:-1;;;;;6994:21:0;;;;;;:35;;;7028:1;7019:6;:10;6994:35;6986:71;;;;-1:-1:-1;;;6986:71:0;;7414:2:5;6986:71:0;;;7396:21:5;7453:2;7433:18;;;7426:30;7492:25;7472:18;;;7465:53;7535:18;;6986:71:0;7212:347:5;6986:71:0;7150:10;7118:18;7139:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;7139:29:0;;;;;;;;;;:40;;;7189:107;;;;-1:-1:-1;;;7189:107:0;;7766:2:5;7189:107:0;;;7748:21:5;7805:2;7785:18;;;7778:30;7844:34;7824:18;;;7817:62;-1:-1:-1;;;7895:18:5;;;7888:32;7937:19;;7189:107:0;7564:398:5;7189:107:0;7337:17;7357:5;-1:-1:-1;;;;;7357:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7384:59;;-1:-1:-1;;;7384:59:0;;7337:37;;-1:-1:-1;;;;;;7384:5:0;:16;;;;:59;;7401:10;;;;7337:37;;7436:6;;7384:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7506:10:0;7495:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;7495:29:0;;;;;;;;;:38;;:48;;7537:6;;-1:-1:-1;7495:38:0;;-1:-1:-1;7495:48:0;;7537:6;;7495:48;:::i;:::-;;;;-1:-1:-1;;7695:52:0;;-1:-1:-1;;;7695:52:0;;-1:-1:-1;;;;;2961:32:5;;;7695:52:0;;;2943:51:5;7663:28:0;;7796:4;;7786:6;;7695:5;:40;;;;;;2916:18:5;;7695:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:88;;;:97;;;;;;:::i;:::-;7694:106;;;;:::i;:::-;7884:134;;-1:-1:-1;;;7884:134:0;;7663:137;;-1:-1:-1;;;;;;7884:5:0;:18;;;;:134;;7916:10;;;;7964;;7663:137;;7884:134;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8039:10:0;8028:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;8028:29:0;;;;;;;;;:46;:70;;8078:20;;-1:-1:-1;8028:46:0;;-1:-1:-1;8028:70:0;;8078:20;;8028:70;:::i;:::-;;;;-1:-1:-1;;8113:37:0;;11184:25:5;;;-1:-1:-1;;;;;8113:37:0;;;8120:10;;8113:37;;11172:2:5;11157:18;8113:37:0;11038:177:5;6092:540:0;-1:-1:-1;;;;;6218:21:0;;;;;;:55;;;6252:5;-1:-1:-1;;;;;6252:19:0;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6243:6;:30;6218:55;6197:126;;;;-1:-1:-1;;;6197:126:0;;11611:2:5;6197:126:0;;;11593:21:5;11650:2;11630:18;;;11623:30;11689:26;11669:18;;;11662:54;11733:18;;6197:126:0;11409:348:5;6197:126:0;6333:17;6353:5;-1:-1:-1;;;;;6353:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6452:61;;-1:-1:-1;;;6452:61:0;;6333:37;;-1:-1:-1;;;;;;6452:5:0;:18;;;;:61;;6471:10;;;;6333:37;;6506:6;;6452:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6534:10:0;6523:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;6523:29:0;;;;;;;;;:38;;:48;;6565:6;;-1:-1:-1;6523:38:0;;-1:-1:-1;6523:48:0;;6565:6;;6523:48;:::i;:::-;;;;-1:-1:-1;;6586:39:0;;11184:25:5;;;-1:-1:-1;;;;;6586:39:0;;;6595:10;;6586:39;;11172:2:5;11157:18;6586:39:0;;;;;;;;6152:480;6092:540;;:::o;3964:1912::-;-1:-1:-1;;;;;4157:21:0;;;;;;:67;;-1:-1:-1;;;;;;4198:26:0;;;;4157:67;:106;;;;;4258:5;-1:-1:-1;;;;;4244:19:0;:10;-1:-1:-1;;;;;4244:19:0;;;4157:106;:136;;;;;4292:1;4283:6;:10;4157:136;4136:210;;;;-1:-1:-1;;;4136:210:0;;12094:2:5;4136:210:0;;;12076:21:5;12133:2;12113:18;;;12106:30;12172:29;12152:18;;;12145:57;12219:18;;4136:210:0;11892:351:5;4136:210:0;4484:10;4525:3;4473:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;4473:29:0;;;;;;;;;;:40;;4469:1331;;4640:90;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4640:90:0;-1:-1:-1;;;4640:90:0;;;4763:34;;4617:20;;-1:-1:-1;;;;;4771:5:0;4763:25;;:34;;4640:90;;4763:34;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4744:53;;;4819:7;4811:58;;;;-1:-1:-1;;;4811:58:0;;12742:2:5;4811:58:0;;;12724:21:5;12781:2;12761:18;;;12754:30;12820:34;12800:18;;;12793:62;-1:-1:-1;;;12871:18:5;;;12864:36;12917:19;;4811:58:0;12540:402:5;4811:58:0;4962:60;;-1:-1:-1;;;4962:60:0;;-1:-1:-1;;;;;4962:5:0;:16;;;;:60;;4979:10;;;;5003;;5015:6;;4962:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5102:141:0;;;;;;;;-1:-1:-1;;;;;5102:141:0;;;;;;;;;;;;-1:-1:-1;5102:141:0;;;;;;5268:10;5257:22;;:10;:22;;;;;;:29;;;;;;;;;;;:41;;;;-1:-1:-1;;;;;;5257:41:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4469:1331:0;;-1:-1:-1;;;4469:1331:0;;5454:10;5443:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;5443:29:0;;;;;;;;;;:40;;;:54;;;;5418:148;;;;-1:-1:-1;;;5418:148:0;;13149:2:5;5418:148:0;;;13131:21:5;13188:2;13168:18;;;13161:30;13227:34;13207:18;;;13200:62;-1:-1:-1;;;13278:18:5;;;13271:33;13321:19;;5418:148:0;12947:399:5;5418:148:0;5659:60;;-1:-1:-1;;;5659:60:0;;-1:-1:-1;;;;;5659:5:0;:16;;;;:60;;5676:10;;;;5700;;5712:6;;5659:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5744:10:0;5733:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;5733:29:0;;;;;;;;;:46;:56;;5783:6;;-1:-1:-1;5733:46:0;;-1:-1:-1;5733:56:0;;5783:6;;5733:56;:::i;:::-;;;;-1:-1:-1;;4469:1331:0;5814:55;;;-1:-1:-1;;;;;13543:32:5;;;13525:51;;13607:2;13592:18;;13585:34;;;5814:55:0;;;5831:10;;5814:55;;13498:18:5;5814:55:0;13351:274:5;14:131;-1:-1:-1;;;;;89:31:5;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:127::-;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:252;354:2;348:9;396:3;384:16;;430:18;415:34;;451:22;;;412:62;409:88;;;477:18;;:::i;:::-;513:2;506:22;282:252;:::o;539:275::-;610:2;604:9;675:2;656:13;;-1:-1:-1;;652:27:5;640:40;;710:18;695:34;;731:22;;;692:62;689:88;;;757:18;;:::i;:::-;793:2;786:22;539:275;;-1:-1:-1;539:275:5:o;819:1178::-;924:6;932;940;948;956;1009:3;997:9;988:7;984:23;980:33;977:53;;;1026:1;1023;1016:12;977:53;1065:9;1052:23;1084:31;1109:5;1084:31;:::i;:::-;1134:5;-1:-1:-1;1158:2:5;1197:18;;;1184:32;1225:33;1184:32;1225:33;:::i;:::-;1277:7;-1:-1:-1;1331:2:5;1316:18;;1303:32;;-1:-1:-1;1386:2:5;1371:18;;1358:32;1409:18;1439:14;;;1436:34;;;1466:1;1463;1456:12;1436:34;1504:6;1493:9;1489:22;1479:32;;1549:7;1542:4;1538:2;1534:13;1530:27;1520:55;;1571:1;1568;1561:12;1520:55;1607:2;1594:16;1629:2;1625;1622:10;1619:36;;;1635:18;;:::i;:::-;1677:53;1720:2;1701:13;;-1:-1:-1;;1697:27:5;1693:36;;1677:53;:::i;:::-;1664:66;;1753:2;1746:5;1739:17;1793:7;1788:2;1783;1779;1775:11;1771:20;1768:33;1765:53;;;1814:1;1811;1804:12;1765:53;1869:2;1864;1860;1856:11;1851:2;1844:5;1840:14;1827:45;1913:1;1892:14;;;1888:23;;;1881:34;;;;-1:-1:-1;819:1178:5;;;;-1:-1:-1;819:1178:5;;1986:3;1971:19;1958:33;;819:1178;-1:-1:-1;;819:1178:5:o;2002:315::-;2070:6;2078;2131:2;2119:9;2110:7;2106:23;2102:32;2099:52;;;2147:1;2144;2137:12;2099:52;2186:9;2173:23;2205:31;2230:5;2205:31;:::i;:::-;2255:5;2307:2;2292:18;;;;2279:32;;-1:-1:-1;;;2002:315:5:o;2322:456::-;2399:6;2407;2415;2468:2;2456:9;2447:7;2443:23;2439:32;2436:52;;;2484:1;2481;2474:12;2436:52;2523:9;2510:23;2542:31;2567:5;2542:31;:::i;:::-;2592:5;-1:-1:-1;2649:2:5;2634:18;;2621:32;2662:33;2621:32;2662:33;:::i;:::-;2322:456;;2714:7;;-1:-1:-1;;;2768:2:5;2753:18;;;;2740:32;;2322:456::o;3366:380::-;3445:1;3441:12;;;;3488;;;3509:61;;3563:4;3555:6;3551:17;3541:27;;3509:61;3616:2;3608:6;3605:14;3585:18;3582:38;3579:161;;3662:10;3657:3;3653:20;3650:1;3643:31;3697:4;3694:1;3687:15;3725:4;3722:1;3715:15;3579:161;;3366:380;;;:::o;3877:545::-;3979:2;3974:3;3971:11;3968:448;;;4015:1;4040:5;4036:2;4029:17;4085:4;4081:2;4071:19;4155:2;4143:10;4139:19;4136:1;4132:27;4126:4;4122:38;4191:4;4179:10;4176:20;4173:47;;;-1:-1:-1;4214:4:5;4173:47;4269:2;4264:3;4260:12;4257:1;4253:20;4247:4;4243:31;4233:41;;4324:82;4342:2;4335:5;4332:13;4324:82;;;4387:17;;;4368:1;4357:13;4324:82;;;4328:3;;;3968:448;3877:545;;;:::o;4598:1352::-;4724:3;4718:10;4751:18;4743:6;4740:30;4737:56;;;4773:18;;:::i;:::-;4802:97;4892:6;4852:38;4884:4;4878:11;4852:38;:::i;:::-;4846:4;4802:97;:::i;:::-;4954:4;;5018:2;5007:14;;5035:1;5030:663;;;;5737:1;5754:6;5751:89;;;-1:-1:-1;5806:19:5;;;5800:26;5751:89;-1:-1:-1;;4555:1:5;4551:11;;;4547:24;4543:29;4533:40;4579:1;4575:11;;;4530:57;5853:81;;5000:944;;5030:663;3824:1;3817:14;;;3861:4;3848:18;;-1:-1:-1;;5066:20:5;;;5184:236;5198:7;5195:1;5192:14;5184:236;;;5287:19;;;5281:26;5266:42;;5379:27;;;;5347:1;5335:14;;;;5214:19;;5184:236;;;5188:3;5448:6;5439:7;5436:19;5433:201;;;5509:19;;;5503:26;-1:-1:-1;;5592:1:5;5588:14;;;5604:3;5584:24;5580:37;5576:42;5561:58;5546:74;;5433:201;-1:-1:-1;;;;;5680:1:5;5664:14;;;5660:22;5647:36;;-1:-1:-1;4598:1352:5:o;6313:250::-;6398:1;6408:113;6422:6;6419:1;6416:13;6408:113;;;6498:11;;;6492:18;6479:11;;;6472:39;6444:2;6437:10;6408:113;;;-1:-1:-1;;6555:1:5;6537:16;;6530:27;6313:250::o;6568:639::-;6830:1;6826;6821:3;6817:11;6813:19;6805:6;6801:32;6790:9;6783:51;6870:6;6865:2;6854:9;6850:18;6843:34;6913:3;6908:2;6897:9;6893:18;6886:31;6764:4;6946:6;6940:13;6990:6;6984:3;6973:9;6969:19;6962:35;7006:80;7079:6;7073:3;7062:9;7058:19;7053:2;7045:6;7041:15;7006:80;:::i;:::-;7189:2;7174:18;;7167:34;;;;-1:-1:-1;7147:2:5;7126:15;;;;-1:-1:-1;;7122:29:5;7107:45;7154:3;7103:55;;6568:639;-1:-1:-1;;;6568:639:5:o;7967:138::-;8046:13;;8068:31;8046:13;8068:31;:::i;:::-;7967:138;;;:::o;8110:251::-;8180:6;8233:2;8221:9;8212:7;8208:23;8204:32;8201:52;;;8249:1;8246;8239:12;8201:52;8281:9;8275:16;8300:31;8325:5;8300:31;:::i;:::-;8350:5;8110:251;-1:-1:-1;;;8110:251:5:o;8366:456::-;-1:-1:-1;;;;;8653:15:5;;;8635:34;;8705:15;;;8700:2;8685:18;;8678:43;8757:15;;8752:2;8737:18;;8730:43;8804:2;8789:18;;8782:34;;;;8584:3;8569:19;;8366:456::o;8827:127::-;8888:10;8883:3;8879:20;8876:1;8869:31;8919:4;8916:1;8909:15;8943:4;8940:1;8933:15;8959:128;9026:9;;;9047:11;;;9044:37;;;9061:18;;:::i;:::-;8959:128;;;;:::o;9300:175::-;9378:13;;9431:18;9420:30;;9410:41;;9400:69;;9465:1;9462;9455:12;9480:192;9559:13;;9612:34;9601:46;;9591:57;;9581:85;;9662:1;9659;9652:12;9677:961;9773:6;9826:3;9814:9;9805:7;9801:23;9797:33;9794:53;;;9843:1;9840;9833:12;9794:53;9869:22;;:::i;:::-;9921:9;9915:16;9975:4;9966:7;9962:18;9953:7;9950:31;9940:59;;9995:1;9992;9985:12;9940:59;10008:22;;10062:49;10107:2;10092:18;;10062:49;:::i;:::-;10057:2;10050:5;10046:14;10039:73;10144:49;10189:2;10178:9;10174:18;10144:49;:::i;:::-;10139:2;10132:5;10128:14;10121:73;10226:48;10270:2;10259:9;10255:18;10226:48;:::i;:::-;10221:2;10214:5;10210:14;10203:72;10308:49;10352:3;10341:9;10337:19;10308:49;:::i;:::-;10302:3;10295:5;10291:15;10284:74;10391:49;10435:3;10424:9;10420:19;10391:49;:::i;:::-;10385:3;10378:5;10374:15;10367:74;10474:49;10518:3;10507:9;10503:19;10474:49;:::i;:::-;10468:3;10461:5;10457:15;10450:74;10557:50;10602:3;10591:9;10587:19;10557:50;:::i;:::-;10551:3;10540:15;;10533:75;10544:5;9677:961;-1:-1:-1;;;9677:961:5:o;10643:168::-;10683:7;10749:1;10745;10741:6;10737:14;10734:1;10731:21;10726:1;10719:9;10712:17;10708:45;10705:71;;;10756:18;;:::i;:::-;-1:-1:-1;10796:9:5;;10643:168::o;10816:217::-;10856:1;10882;10872:132;;10926:10;10921:3;10917:20;10914:1;10907:31;10961:4;10958:1;10951:15;10989:4;10986:1;10979:15;10872:132;-1:-1:-1;11018:9:5;;10816:217::o;11220:184::-;11290:6;11343:2;11331:9;11322:7;11318:23;11314:32;11311:52;;;11359:1;11356;11349:12;11311:52;-1:-1:-1;11382:16:5;;11220:184;-1:-1:-1;11220:184:5:o;11762:125::-;11827:9;;;11848:10;;;11845:36;;;11861:18;;:::i;12248:287::-;12377:3;12415:6;12409:13;12431:66;12490:6;12485:3;12478:4;12470:6;12466:17;12431:66;:::i;:::-;12513:16;;;;;12248:287;-1:-1:-1;;12248:287:5:o",
  "source": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.16;\n\nimport \"./interfaces/Bond.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/CometInterface.sol\";\nimport \"./interfaces/VerifiedMarketsInterface.sol\";\n\n/**\n * @title Verified Markets\n * @notice A Compound III operator to enable staking of collateral for real world assets to Compound.\n * @author Kallol Borah\n */\ncontract VerifiedMarkets is RWA {\n    /// @notice The Comet contract\n    Comet public immutable comet;\n\n    //mapping issuer to RWA to bond\n    mapping(address => mapping(address => Asset)) private assets; //only one Asset(bond) per user => RWA\n\n    //mapping issuer to RWA to collateral\n    mapping(address => mapping(address => Collateral)) private guarantees; //only one collateral per user => RWA\n\n    //events\n    event NewRWA(\n        address indexed issuer,\n        address indexed asset,\n        address bond,\n        uint256 apy,\n        string issuingDocs,\n        uint256 faceValue\n    );\n    event PostedCollateral(\n        address indexed issuer,\n        address indexed asset,\n        address collateral,\n        uint256 amount\n    );\n    event Borrowed(\n        address indexed borrower,\n        address indexed base,\n        uint256 amount\n    );\n    event Repaid(\n        address indexed borrower,\n        address indexed base,\n        uint256 amount\n    );\n\n    /**\n     * @notice Construct a new operator.\n     * @param comet_ The Comet contract.\n     **/\n    constructor(address comet_) {\n        comet = Comet(comet_);\n    }\n\n    /**\n     * @notice RWA issuer submits asset details and bond issued that can be purchased to provide collateral to the RWA issuer\n     * @param asset       RWA for which bond is issued\n     * @param bond        bond token that is issued\n     * @param apy         interest rate paid on bond\n     * @param issuingDocs ipfs reference for RWA docs\n     * @param faceValue   par value of bond after discounting it with interest rate\n     **/\n    //Todo: should issuer be able to overwrite existing bond address tied to an assest???\n    function submitNewRWA(\n        address asset,\n        address bond,\n        uint256 apy,\n        string memory issuingDocs,\n        uint256 faceValue\n    ) external override {\n        //verify submitNewRWA params\n        require(\n            asset != address(0x0) &&\n                bond != address(0x0) &&\n                bond != asset &&\n                apy > 0 &&\n                faceValue > 0,\n            \"RWA submission : Invalid request\"\n        );\n        //verify bond's issuer is the caller\n        // require(\n        //     Bond(bond).getIssuer() == msg.sender,\n        //     \"RWA submission : Invalid issuer\"\n        // );\n        //if issuer has no RWA tied to this assest, create new RWA for the issuer's asset\n        if (assets[msg.sender][asset].bond == address(0x0)) {\n            RWA.Asset memory rwa = RWA.Asset({\n                bond: bond,\n                apy: apy,\n                issuingDocs: issuingDocs,\n                faceValue: faceValue\n            });\n            assets[msg.sender][asset] = rwa;\n        } else {\n            //issuer can only update/overwrite an existing RWA details\n            require(\n                assets[msg.sender][asset].bond == bond,\n                \"RWA submission : Invalid bond\"\n            );\n            assets[msg.sender][asset].apy = apy;\n            assets[msg.sender][asset].issuingDocs = issuingDocs;\n            assets[msg.sender][asset].faceValue = faceValue;\n        }\n        emit NewRWA(msg.sender, asset, bond, apy, issuingDocs, faceValue);\n    }\n\n    /**\n     * @notice Used by RWA issuer to post collateral used to buy bonds issued by it to borrow from Compound\n     * @param asset       RWA for which collateral is posted\n     * @param collateral  collateral used to buy bond issued by RWA issuer(must not be baseToken and must be accepted by comet)\n     * @param amount      amount of collateral posted\n     **/\n    function postCollateral(\n        address asset,\n        address collateral,\n        uint256 amount\n    ) external override {\n        //verify postCollateral params\n        require(\n            asset != address(0x0) &&\n                collateral != address(0x0) &&\n                collateral != asset &&\n                amount > 0,\n            \"Posting Collateral: Invalid\"\n        );\n        //if issuer is posting collateral to the assest for first time, create new Collateral for user's assest;\n        if (guarantees[msg.sender][asset].collateral == address(0x0)) {\n            //verify getAssetInfoByAddress didn't revert for collateral\n            bytes memory payload = abi.encodeWithSignature(\n                \"getAssetInfoByAddress(collateral)\"\n            );\n            (bool success, ) = address(comet).staticcall(payload);\n            require(success, \"Posting Collateral: Invalid collateral\");\n            //supply collateral on comet and verify supply cap is not breached\n            comet.supplyFrom(msg.sender, msg.sender, collateral, amount);\n            //create collateral\n            RWA.Collateral memory guarantee = RWA.Collateral({\n                collateral: collateral,\n                collateralAmount: amount,\n                borrowed: 0\n            });\n            guarantees[msg.sender][asset] = guarantee;\n        } else {\n            //issuer can only update/overwrite collateral amount for existing collateral\n            require(\n                guarantees[msg.sender][asset].collateral == collateral,\n                \"Post Collateral: Invalid collateral\"\n            );\n            //supply collateral on comet and verify supply cap is not breached\n            comet.supplyFrom(msg.sender, msg.sender, collateral, amount);\n            guarantees[msg.sender][asset].collateralAmount += amount;\n        }\n        emit PostedCollateral(msg.sender, asset, collateral, amount);\n    }\n\n    /**\n     * @notice Called by RWA issuer to to borrow base asset from Compound\n     * @param asset       RWA for which base asset is borrowed\n     * @param amount      amount of base asset borrowed\n     **/\n    function borrowBase(address asset, uint256 amount) external {\n        //verify borrowBase params\n        require(\n            asset != address(0x0) && amount > comet.baseBorrowMin(),\n            \"Borrowing base : Invalid\"\n        );\n        address baseToken = comet.baseToken();\n        //withdraw base from comet and check for non negative liquidity\n        comet.withdrawFrom(msg.sender, msg.sender, baseToken, amount);\n        guarantees[msg.sender][asset].borrowed += amount;\n        emit Borrowed(msg.sender, baseToken, amount);\n    }\n\n    /**\n     * @notice Called by RWA issuer to repay base asset to Compound and withdraw collateral posted earlier\n     * @param asset       RWA for which base asset is paid back\n     * @param amount      amount of base asset paid back\n     **/\n    function repayBase(address asset, uint256 amount) external {\n        //verify repayBase params\n        require(asset != address(0x0) && amount > 0, \"Repaying base : Invalid\");\n        //verify user has collateral to begin with\n        address collateral = guarantees[msg.sender][asset].collateral;\n        require(\n            collateral != address(0x0),\n            \"Repaying base : Invalid collateral\"\n        );\n        //supply base on comet\n        address baseToken = comet.baseToken();\n        comet.supplyFrom(msg.sender, msg.sender, baseToken, amount);\n        //update issuer's borrowed amount\n        guarantees[msg.sender][asset].borrowed -= amount;\n        //calculate collateralAmount and downscale with 1e18(since borrowCollateralFactor is always % in wei)\n        uint256 collateralToWithdraw = (comet\n            .getAssetInfoByAddress(collateral)\n            .borrowCollateralFactor * amount) / 1e18;\n        //withdraw collateral from comet check for non negative liquidity\n        comet.withdrawFrom(\n            msg.sender,\n            msg.sender,\n            collateral,\n            collateralToWithdraw\n        );\n        guarantees[msg.sender][asset].collateralAmount -= collateralToWithdraw;\n        emit Repaid(msg.sender, baseToken, amount);\n    }\n}\n",
  "sourcePath": "/home/mohzcrea8me/Projects/Verified/verified-compound-markets/backend/contracts/VerifiedMarkets.sol",
  "ast": {
    "absolutePath": "project:/contracts/VerifiedMarkets.sol",
    "exportedSymbols": {
      "Bond": [
        605
      ],
      "Comet": [
        1217
      ],
      "IERC20": [
        1310
      ],
      "RWA": [
        1365
      ],
      "VerifiedMarkets": [
        533
      ]
    },
    "id": 534,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:0"
      },
      {
        "absolutePath": "project:/contracts/interfaces/Bond.sol",
        "file": "./interfaces/Bond.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 534,
        "sourceUnit": 606,
        "src": "63:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 534,
        "sourceUnit": 1311,
        "src": "95:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/CometInterface.sol",
        "file": "./interfaces/CometInterface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 534,
        "sourceUnit": 1218,
        "src": "129:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/VerifiedMarketsInterface.sol",
        "file": "./interfaces/VerifiedMarketsInterface.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 534,
        "sourceUnit": 1366,
        "src": "171:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "RWA",
              "nameLocations": [
                "413:3:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1365,
              "src": "413:3:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "413:3:0"
          }
        ],
        "canonicalName": "VerifiedMarkets",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "224:160:0",
          "text": " @title Verified Markets\n @notice A Compound III operator to enable staking of collateral for real world assets to Compound.\n @author Kallol Borah"
        },
        "fullyImplemented": true,
        "id": 533,
        "linearizedBaseContracts": [
          533,
          1365
        ],
        "name": "VerifiedMarkets",
        "nameLocation": "394:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 9,
              "nodeType": "StructuredDocumentation",
              "src": "423:30:0",
              "text": "@notice The Comet contract"
            },
            "functionSelector": "ba3e9c12",
            "id": 12,
            "mutability": "immutable",
            "name": "comet",
            "nameLocation": "481:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 533,
            "src": "458:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Comet_$1217",
              "typeString": "contract Comet"
            },
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "Comet",
                "nameLocations": [
                  "458:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1217,
                "src": "458:5:0"
              },
              "referencedDeclaration": 1217,
              "src": "458:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Comet_$1217",
                "typeString": "contract Comet"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "assets",
            "nameLocation": "583:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 533,
            "src": "529:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct RWA.Asset))"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "537:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "529:45:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct RWA.Asset))"
              },
              "valueType": {
                "id": 17,
                "keyType": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "556:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "548:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$",
                  "typeString": "mapping(address => struct RWA.Asset)"
                },
                "valueType": {
                  "id": 16,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 15,
                    "name": "Asset",
                    "nameLocations": [
                      "567:5:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1321,
                    "src": "567:5:0"
                  },
                  "referencedDeclaration": 1321,
                  "src": "567:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Asset_$1321_storage_ptr",
                    "typeString": "struct RWA.Asset"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "guarantees",
            "nameLocation": "736:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 533,
            "src": "677:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct RWA.Collateral))"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "685:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "677:50:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct RWA.Collateral))"
              },
              "valueType": {
                "id": 24,
                "keyType": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "704:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "696:30:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$",
                  "typeString": "mapping(address => struct RWA.Collateral)"
                },
                "valueType": {
                  "id": 23,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 22,
                    "name": "Collateral",
                    "nameLocations": [
                      "715:10:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1328,
                    "src": "715:10:0"
                  },
                  "referencedDeclaration": 1328,
                  "src": "715:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collateral_$1328_storage_ptr",
                    "typeString": "struct RWA.Collateral"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "7c0346ec0308e754879b9eb61355f12e6d4469883179fb5774ad1c3d9a7313d0",
            "id": 40,
            "name": "NewRWA",
            "nameLocation": "810:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "842:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "826:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "874:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "858:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bond",
                  "nameLocation": "897:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "889:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "apy",
                  "nameLocation": "919:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "911:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "issuingDocs",
                  "nameLocation": "939:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "932:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "faceValue",
                  "nameLocation": "968:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "960:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "816:167:0"
            },
            "src": "804:180:0"
          },
          {
            "anonymous": false,
            "eventSelector": "6d9c01d2a1bfe391d97dad0c8485ad9eb8603cf2404ea70f733fe47b186a0f51",
            "id": 50,
            "name": "PostedCollateral",
            "nameLocation": "995:16:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "1037:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1021:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1069:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1053:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "1092:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1084:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1120:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1112:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:121:0"
            },
            "src": "989:144:0"
          },
          {
            "anonymous": false,
            "eventSelector": "3fc499aeb0bb1cb58b6de8b02b3f86f4e7394e9690bef0110e32ced8a5631045",
            "id": 58,
            "name": "Borrowed",
            "nameLocation": "1144:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "1178:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1162:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "1212:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1196:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1234:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1226:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:94:0"
            },
            "src": "1138:109:0"
          },
          {
            "anonymous": false,
            "eventSelector": "0a3fbbea70e93f2daafa3102f5c9a1b8315e6d7a1e43e4bc020bc1162327470a",
            "id": 66,
            "name": "Repaid",
            "nameLocation": "1258:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "1290:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1274:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "1324:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1308:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1346:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1338:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1264:94:0"
            },
            "src": "1252:107:0"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1492:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "comet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1502:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Comet_$1217",
                        "typeString": "contract Comet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 74,
                          "name": "comet_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1516:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 73,
                        "name": "Comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1217,
                        "src": "1510:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Comet_$1217_$",
                          "typeString": "type(contract Comet)"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1510:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Comet_$1217",
                        "typeString": "contract Comet"
                      }
                    },
                    "src": "1502:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Comet_$1217",
                      "typeString": "contract Comet"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:21:0"
                }
              ]
            },
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "1365:94:0",
              "text": " @notice Construct a new operator.\n @param comet_ The Comet contract.*"
            },
            "id": 79,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "comet_",
                  "nameLocation": "1484:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1476:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1475:16:0"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1492:0:0"
            },
            "scope": 533,
            "src": "1464:66:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1341
            ],
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "2241:1349:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 95,
                                  "name": "asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82,
                                  "src": "2309:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "307830",
                                      "id": 98,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2326:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0x0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 97,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2318:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 96,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2318:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 99,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2318:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2309:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 101,
                                  "name": "bond",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84,
                                  "src": "2350:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "307830",
                                      "id": 104,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2366:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0x0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 103,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2358:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 102,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2358:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 105,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2358:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2350:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2309:61:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 108,
                                "name": "bond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84,
                                "src": "2390:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 109,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "2398:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2390:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2309:94:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 112,
                              "name": "apy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "2423:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2429:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2423:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2309:121:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 116,
                            "name": "faceValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "2450:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2462:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2450:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2309:154:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "525741207375626d697373696f6e203a20496e76616c69642072657175657374",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2477:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac2d297c7b797b46238ca2df5d2a150e9ead54471c39a8a35a5a622a4d896f94",
                          "typeString": "literal_string \"RWA submission : Invalid request\""
                        },
                        "value": "RWA submission : Invalid request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac2d297c7b797b46238ca2df5d2a150e9ead54471c39a8a35a5a622a4d896f94",
                          "typeString": "literal_string \"RWA submission : Invalid request\""
                        }
                      ],
                      "id": 94,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2288:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2288:233:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2288:233:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 123,
                            "name": "assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "2806:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                            }
                          },
                          "id": 126,
                          "indexExpression": {
                            "expression": {
                              "id": 124,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2813:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2817:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2813:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2806:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$",
                            "typeString": "mapping(address => struct RWA.Asset storage ref)"
                          }
                        },
                        "id": 128,
                        "indexExpression": {
                          "id": 127,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "2825:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2806:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$1321_storage",
                          "typeString": "struct RWA.Asset storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2832:4:0",
                      "memberName": "bond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1314,
                      "src": "2806:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2848:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2840:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2840:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2840:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2806:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 201,
                    "nodeType": "Block",
                    "src": "3112:397:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 159,
                                      "name": "assets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 19,
                                      "src": "3222:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$_$",
                                        "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                                      }
                                    },
                                    "id": 162,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 160,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "3229:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 161,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3233:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3229:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3222:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$",
                                      "typeString": "mapping(address => struct RWA.Asset storage ref)"
                                    }
                                  },
                                  "id": 164,
                                  "indexExpression": {
                                    "id": 163,
                                    "name": "asset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82,
                                    "src": "3241:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3222:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Asset_$1321_storage",
                                    "typeString": "struct RWA.Asset storage ref"
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3248:4:0",
                                "memberName": "bond",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1314,
                                "src": "3222:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 166,
                                "name": "bond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84,
                                "src": "3256:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3222:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "525741207375626d697373696f6e203a20496e76616c696420626f6e64",
                              "id": 168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3278:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e9fe6b1aa35315a9eec2b928ae49567079ea3c7de0e41b220725a45640e39cbb",
                                "typeString": "literal_string \"RWA submission : Invalid bond\""
                              },
                              "value": "RWA submission : Invalid bond"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e9fe6b1aa35315a9eec2b928ae49567079ea3c7de0e41b220725a45640e39cbb",
                                "typeString": "literal_string \"RWA submission : Invalid bond\""
                              }
                            ],
                            "id": 158,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3197:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3197:126:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "3197:126:0"
                      },
                      {
                        "expression": {
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 171,
                                  "name": "assets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "3337:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                                  }
                                },
                                "id": 175,
                                "indexExpression": {
                                  "expression": {
                                    "id": 172,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3344:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3348:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3344:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3337:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$",
                                  "typeString": "mapping(address => struct RWA.Asset storage ref)"
                                }
                              },
                              "id": 176,
                              "indexExpression": {
                                "id": 174,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "3356:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3337:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$1321_storage",
                                "typeString": "struct RWA.Asset storage ref"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3363:3:0",
                            "memberName": "apy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1316,
                            "src": "3337:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 178,
                            "name": "apy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "3369:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3337:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "3337:35:0"
                      },
                      {
                        "expression": {
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 181,
                                  "name": "assets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "3386:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                                  }
                                },
                                "id": 185,
                                "indexExpression": {
                                  "expression": {
                                    "id": 182,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3393:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3397:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3393:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3386:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$",
                                  "typeString": "mapping(address => struct RWA.Asset storage ref)"
                                }
                              },
                              "id": 186,
                              "indexExpression": {
                                "id": 184,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "3405:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3386:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$1321_storage",
                                "typeString": "struct RWA.Asset storage ref"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3412:11:0",
                            "memberName": "issuingDocs",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1318,
                            "src": "3386:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 188,
                            "name": "issuingDocs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "3426:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3386:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 190,
                        "nodeType": "ExpressionStatement",
                        "src": "3386:51:0"
                      },
                      {
                        "expression": {
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 191,
                                  "name": "assets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "3451:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                                  }
                                },
                                "id": 195,
                                "indexExpression": {
                                  "expression": {
                                    "id": 192,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3458:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3462:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3458:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3451:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$",
                                  "typeString": "mapping(address => struct RWA.Asset storage ref)"
                                }
                              },
                              "id": 196,
                              "indexExpression": {
                                "id": 194,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "3470:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3451:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$1321_storage",
                                "typeString": "struct RWA.Asset storage ref"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3477:9:0",
                            "memberName": "faceValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1320,
                            "src": "3451:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 198,
                            "name": "faceValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "3489:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3451:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 200,
                        "nodeType": "ExpressionStatement",
                        "src": "3451:47:0"
                      }
                    ]
                  },
                  "id": 202,
                  "nodeType": "IfStatement",
                  "src": "2802:707:0",
                  "trueBody": {
                    "id": 157,
                    "nodeType": "Block",
                    "src": "2854:252:0",
                    "statements": [
                      {
                        "assignments": [
                          139
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 139,
                            "mutability": "mutable",
                            "name": "rwa",
                            "nameLocation": "2885:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 157,
                            "src": "2868:20:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$1321_memory_ptr",
                              "typeString": "struct RWA.Asset"
                            },
                            "typeName": {
                              "id": 138,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 137,
                                "name": "RWA.Asset",
                                "nameLocations": [
                                  "2868:3:0",
                                  "2872:5:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1321,
                                "src": "2868:9:0"
                              },
                              "referencedDeclaration": 1321,
                              "src": "2868:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$1321_storage_ptr",
                                "typeString": "struct RWA.Asset"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 147,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 142,
                              "name": "bond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "2925:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 143,
                              "name": "apy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "2952:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 144,
                              "name": "issuingDocs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "2986:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 145,
                              "name": "faceValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "3026:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 140,
                              "name": "RWA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1365,
                              "src": "2891:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_RWA_$1365_$",
                                "typeString": "type(contract RWA)"
                              }
                            },
                            "id": 141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2895:5:0",
                            "memberName": "Asset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1321,
                            "src": "2891:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Asset_$1321_storage_ptr_$",
                              "typeString": "type(struct RWA.Asset storage pointer)"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "2919:4:0",
                            "2947:3:0",
                            "2973:11:0",
                            "3015:9:0"
                          ],
                          "names": [
                            "bond",
                            "apy",
                            "issuingDocs",
                            "faceValue"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "2891:159:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Asset_$1321_memory_ptr",
                            "typeString": "struct RWA.Asset memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2868:182:0"
                      },
                      {
                        "expression": {
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 148,
                                "name": "assets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19,
                                "src": "3064:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                                }
                              },
                              "id": 152,
                              "indexExpression": {
                                "expression": {
                                  "id": 149,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3071:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3075:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3071:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3064:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1321_storage_$",
                                "typeString": "mapping(address => struct RWA.Asset storage ref)"
                              }
                            },
                            "id": 153,
                            "indexExpression": {
                              "id": 151,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82,
                              "src": "3083:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3064:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$1321_storage",
                              "typeString": "struct RWA.Asset storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 154,
                            "name": "rwa",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "3092:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$1321_memory_ptr",
                              "typeString": "struct RWA.Asset memory"
                            }
                          },
                          "src": "3064:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Asset_$1321_storage",
                            "typeString": "struct RWA.Asset storage ref"
                          }
                        },
                        "id": 156,
                        "nodeType": "ExpressionStatement",
                        "src": "3064:31:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3530:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3534:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3530:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 206,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "3542:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 207,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "3549:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 208,
                        "name": "apy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "3555:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 209,
                        "name": "issuingDocs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3560:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 210,
                        "name": "faceValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "3573:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 203,
                      "name": "NewRWA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "3523:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,string memory,uint256)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3523:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "EmitStatement",
                  "src": "3518:65:0"
                }
              ]
            },
            "documentation": {
              "id": 80,
              "nodeType": "StructuredDocumentation",
              "src": "1536:436:0",
              "text": " @notice RWA issuer submits asset details and bond issued that can be purchased to provide collateral to the RWA issuer\n @param asset       RWA for which bond is issued\n @param bond        bond token that is issued\n @param apy         interest rate paid on bond\n @param issuingDocs ipfs reference for RWA docs\n @param faceValue   par value of bond after discounting it with interest rate*"
            },
            "functionSelector": "100bf6eb",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitNewRWA",
            "nameLocation": "2076:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 92,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2232:8:0"
            },
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "2106:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2098:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2098:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "bond",
                  "nameLocation": "2129:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2121:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "apy",
                  "nameLocation": "2151:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2143:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "issuingDocs",
                  "nameLocation": "2178:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2164:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "faceValue",
                  "nameLocation": "2207:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2199:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2088:134:0"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2241:0:0"
            },
            "scope": 533,
            "src": "2067:1523:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1350
            ],
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "4087:1789:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 226,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "4157:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "307830",
                                    "id": 229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4174:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 228,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4166:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 227,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4166:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4166:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4157:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 232,
                                "name": "collateral",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "4198:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "307830",
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4220:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4212:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 233,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4212:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4212:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4198:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4157:67:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 239,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "4244:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 240,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "4258:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4244:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4157:106:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 243,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "4283:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4292:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4283:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4157:136:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374696e6720436f6c6c61746572616c3a20496e76616c6964",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4307:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3cf3a52794eca675bbfdc3c417dfc121ed781af513ea1dff09cb870ff5901776",
                          "typeString": "literal_string \"Posting Collateral: Invalid\""
                        },
                        "value": "Posting Collateral: Invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3cf3a52794eca675bbfdc3c417dfc121ed781af513ea1dff09cb870ff5901776",
                          "typeString": "literal_string \"Posting Collateral: Invalid\""
                        }
                      ],
                      "id": 225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4136:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4136:210:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "4136:210:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 250,
                            "name": "guarantees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "4473:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                            }
                          },
                          "id": 253,
                          "indexExpression": {
                            "expression": {
                              "id": 251,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4484:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4488:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4484:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4473:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$",
                            "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                          }
                        },
                        "id": 255,
                        "indexExpression": {
                          "id": 254,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "4496:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4473:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$1328_storage",
                          "typeString": "struct RWA.Collateral storage ref"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4503:10:0",
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1323,
                      "src": "4473:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4525:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4517:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4517:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4517:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4473:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 351,
                    "nodeType": "Block",
                    "src": "5315:485:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 318,
                                      "name": "guarantees",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 26,
                                      "src": "5443:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$_$",
                                        "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                                      }
                                    },
                                    "id": 321,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 319,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "5454:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 320,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5458:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5454:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5443:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$",
                                      "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                                    }
                                  },
                                  "id": 323,
                                  "indexExpression": {
                                    "id": 322,
                                    "name": "asset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 217,
                                    "src": "5466:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5443:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Collateral_$1328_storage",
                                    "typeString": "struct RWA.Collateral storage ref"
                                  }
                                },
                                "id": 324,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5473:10:0",
                                "memberName": "collateral",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1323,
                                "src": "5443:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 325,
                                "name": "collateral",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "5487:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5443:54:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f737420436f6c6c61746572616c3a20496e76616c696420636f6c6c61746572616c",
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5515:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_394cd8b0c5d27701b415634dce667cd2b2a95d6403b5642b99bdba02cf0dac43",
                                "typeString": "literal_string \"Post Collateral: Invalid collateral\""
                              },
                              "value": "Post Collateral: Invalid collateral"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_394cd8b0c5d27701b415634dce667cd2b2a95d6403b5642b99bdba02cf0dac43",
                                "typeString": "literal_string \"Post Collateral: Invalid collateral\""
                              }
                            ],
                            "id": 317,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5418:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5418:148:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 329,
                        "nodeType": "ExpressionStatement",
                        "src": "5418:148:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 333,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5676:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5680:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5676:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 335,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5688:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5692:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5688:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 337,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "5700:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 338,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "5712:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 330,
                              "name": "comet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "5659:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Comet_$1217",
                                "typeString": "contract Comet"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5665:10:0",
                            "memberName": "supplyFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 818,
                            "src": "5659:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256) external"
                            }
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5659:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 340,
                        "nodeType": "ExpressionStatement",
                        "src": "5659:60:0"
                      },
                      {
                        "expression": {
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 341,
                                  "name": "guarantees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26,
                                  "src": "5733:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                                  }
                                },
                                "id": 345,
                                "indexExpression": {
                                  "expression": {
                                    "id": 342,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "5744:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5748:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5744:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5733:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$",
                                  "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                                }
                              },
                              "id": 346,
                              "indexExpression": {
                                "id": 344,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "5756:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5733:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Collateral_$1328_storage",
                                "typeString": "struct RWA.Collateral storage ref"
                              }
                            },
                            "id": 347,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5763:16:0",
                            "memberName": "collateralAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1325,
                            "src": "5733:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 348,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "5783:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5733:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 350,
                        "nodeType": "ExpressionStatement",
                        "src": "5733:56:0"
                      }
                    ]
                  },
                  "id": 352,
                  "nodeType": "IfStatement",
                  "src": "4469:1331:0",
                  "trueBody": {
                    "id": 316,
                    "nodeType": "Block",
                    "src": "4531:778:0",
                    "statements": [
                      {
                        "assignments": [
                          263
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 263,
                            "mutability": "mutable",
                            "name": "payload",
                            "nameLocation": "4630:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 316,
                            "src": "4617:20:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 262,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4617:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 268,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "6765744173736574496e666f42794164647265737328636f6c6c61746572616c29",
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4681:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5d97c4e9335c771909173a958c2e93c35883ccacbf54f07d2797f92f091264ab",
                                "typeString": "literal_string \"getAssetInfoByAddress(collateral)\""
                              },
                              "value": "getAssetInfoByAddress(collateral)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5d97c4e9335c771909173a958c2e93c35883ccacbf54f07d2797f92f091264ab",
                                "typeString": "literal_string \"getAssetInfoByAddress(collateral)\""
                              }
                            ],
                            "expression": {
                              "id": 264,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "4640:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4644:19:0",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "4640:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4640:90:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4617:113:0"
                      },
                      {
                        "assignments": [
                          270,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 270,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4750:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 316,
                            "src": "4745:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 269,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4745:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 278,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 276,
                              "name": "payload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "4789:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 273,
                                  "name": "comet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12,
                                  "src": "4771:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Comet_$1217",
                                    "typeString": "contract Comet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Comet_$1217",
                                    "typeString": "contract Comet"
                                  }
                                ],
                                "id": 272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4763:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 271,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4763:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4763:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4778:10:0",
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "4763:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4763:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4744:53:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 280,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "4819:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f7374696e6720436f6c6c61746572616c3a20496e76616c696420636f6c6c61746572616c",
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4828:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1514a66d04920ded0ec839da3eadca02e1f9a5199b666111c3d002a999de3528",
                                "typeString": "literal_string \"Posting Collateral: Invalid collateral\""
                              },
                              "value": "Posting Collateral: Invalid collateral"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1514a66d04920ded0ec839da3eadca02e1f9a5199b666111c3d002a999de3528",
                                "typeString": "literal_string \"Posting Collateral: Invalid collateral\""
                              }
                            ],
                            "id": 279,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4811:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4811:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 283,
                        "nodeType": "ExpressionStatement",
                        "src": "4811:58:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 287,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4979:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4983:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4979:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 289,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4991:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4995:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4991:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 291,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "5003:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 292,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "5015:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 284,
                              "name": "comet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "4962:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Comet_$1217",
                                "typeString": "contract Comet"
                              }
                            },
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4968:10:0",
                            "memberName": "supplyFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 818,
                            "src": "4962:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256) external"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4962:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "4962:60:0"
                      },
                      {
                        "assignments": [
                          299
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 299,
                            "mutability": "mutable",
                            "name": "guarantee",
                            "nameLocation": "5090:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 316,
                            "src": "5068:31:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$1328_memory_ptr",
                              "typeString": "struct RWA.Collateral"
                            },
                            "typeName": {
                              "id": 298,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 297,
                                "name": "RWA.Collateral",
                                "nameLocations": [
                                  "5068:3:0",
                                  "5072:10:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1328,
                                "src": "5068:14:0"
                              },
                              "referencedDeclaration": 1328,
                              "src": "5068:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Collateral_$1328_storage_ptr",
                                "typeString": "struct RWA.Collateral"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 306,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 302,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "5147:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 303,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "5193:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5227:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 300,
                              "name": "RWA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1365,
                              "src": "5102:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_RWA_$1365_$",
                                "typeString": "type(contract RWA)"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5106:10:0",
                            "memberName": "Collateral",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1328,
                            "src": "5102:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Collateral_$1328_storage_ptr_$",
                              "typeString": "type(struct RWA.Collateral storage pointer)"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "5135:10:0",
                            "5175:16:0",
                            "5217:8:0"
                          ],
                          "names": [
                            "collateral",
                            "collateralAmount",
                            "borrowed"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "5102:141:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collateral_$1328_memory_ptr",
                            "typeString": "struct RWA.Collateral memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5068:175:0"
                      },
                      {
                        "expression": {
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 307,
                                "name": "guarantees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "5257:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                                }
                              },
                              "id": 311,
                              "indexExpression": {
                                "expression": {
                                  "id": 308,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5268:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5272:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5268:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5257:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$",
                                "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                              }
                            },
                            "id": 312,
                            "indexExpression": {
                              "id": 310,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "5280:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5257:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$1328_storage",
                              "typeString": "struct RWA.Collateral storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 313,
                            "name": "guarantee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "5289:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$1328_memory_ptr",
                              "typeString": "struct RWA.Collateral memory"
                            }
                          },
                          "src": "5257:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collateral_$1328_storage",
                            "typeString": "struct RWA.Collateral storage ref"
                          }
                        },
                        "id": 315,
                        "nodeType": "ExpressionStatement",
                        "src": "5257:41:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 354,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5831:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5835:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5831:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 356,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "5843:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 357,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "5850:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 358,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "5862:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 353,
                      "name": "PostedCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "5814:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5814:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "EmitStatement",
                  "src": "5809:60:0"
                }
              ]
            },
            "documentation": {
              "id": 215,
              "nodeType": "StructuredDocumentation",
              "src": "3596:363:0",
              "text": " @notice Used by RWA issuer to post collateral used to buy bonds issued by it to borrow from Compound\n @param asset       RWA for which collateral is posted\n @param collateral  collateral used to buy bond issued by RWA issuer(must not be baseToken and must be accepted by comet)\n @param amount      amount of collateral posted*"
            },
            "functionSelector": "a4bcec59",
            "id": 362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postCollateral",
            "nameLocation": "3973:14:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 223,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4078:8:0"
            },
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "4005:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "3997:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3997:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "4028:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4020:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4020:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4056:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4048:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3987:81:0"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4087:0:0"
            },
            "scope": 533,
            "src": "3964:1912:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1357
            ],
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "6152:480:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 371,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "6218:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "307830",
                                "id": 374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6235:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0x0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6227:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 372,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6227:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6227:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6218:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 377,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 367,
                            "src": "6243:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 378,
                                "name": "comet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "6252:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Comet_$1217",
                                  "typeString": "contract Comet"
                                }
                              },
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6258:13:0",
                              "memberName": "baseBorrowMin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1181,
                              "src": "6252:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6252:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6243:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6218:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f72726f77696e672062617365203a20496e76616c6964",
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6287:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_776e4b134377506232128ec017a3f81b7644fa05c0eddc361a8bdbbe6aaf13f6",
                          "typeString": "literal_string \"Borrowing base : Invalid\""
                        },
                        "value": "Borrowing base : Invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_776e4b134377506232128ec017a3f81b7644fa05c0eddc361a8bdbbe6aaf13f6",
                          "typeString": "literal_string \"Borrowing base : Invalid\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6197:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6197:126:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "6197:126:0"
                },
                {
                  "assignments": [
                    387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 387,
                      "mutability": "mutable",
                      "name": "baseToken",
                      "nameLocation": "6341:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "6333:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 386,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6333:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 391,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 388,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "6353:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1217",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6359:9:0",
                      "memberName": "baseToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1081,
                      "src": "6353:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6353:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6333:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6471:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6475:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6471:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 397,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6483:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6487:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6483:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 399,
                        "name": "baseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "6495:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 400,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "6506:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 392,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "6452:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1217",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6458:12:0",
                      "memberName": "withdrawFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 885,
                      "src": "6452:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6452:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "6452:61:0"
                },
                {
                  "expression": {
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 403,
                            "name": "guarantees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "6523:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                            }
                          },
                          "id": 407,
                          "indexExpression": {
                            "expression": {
                              "id": 404,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6534:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6538:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6534:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6523:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$",
                            "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                          }
                        },
                        "id": 408,
                        "indexExpression": {
                          "id": 406,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "6546:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6523:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$1328_storage",
                          "typeString": "struct RWA.Collateral storage ref"
                        }
                      },
                      "id": 409,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6553:8:0",
                      "memberName": "borrowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1327,
                      "src": "6523:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 410,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "6565:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6523:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "6523:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 414,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6595:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6599:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6595:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 416,
                        "name": "baseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "6607:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 417,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "6618:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 413,
                      "name": "Borrowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "6586:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6586:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "EmitStatement",
                  "src": "6581:44:0"
                }
              ]
            },
            "documentation": {
              "id": 363,
              "nodeType": "StructuredDocumentation",
              "src": "5882:205:0",
              "text": " @notice Called by RWA issuer to to borrow base asset from Compound\n @param asset       RWA for which base asset is borrowed\n @param amount      amount of base asset borrowed*"
            },
            "functionSelector": "59a8ab58",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowBase",
            "nameLocation": "6101:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "6120:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "6112:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6112:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6135:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "6127:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6127:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6111:31:0"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6152:0:0"
            },
            "scope": 533,
            "src": "6092:540:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1364
            ],
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "6942:1215:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 430,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 424,
                            "src": "6994:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "307830",
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7011:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0x0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7003:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 431,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7003:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7003:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6994:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 436,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "7019:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7028:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7019:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6994:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265706179696e672062617365203a20496e76616c6964",
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7031:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e16f45ca0b8574ba9a0f101e7dde34ccb7c3ffff9b592faacbc2b34b38c771",
                          "typeString": "literal_string \"Repaying base : Invalid\""
                        },
                        "value": "Repaying base : Invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e16f45ca0b8574ba9a0f101e7dde34ccb7c3ffff9b592faacbc2b34b38c771",
                          "typeString": "literal_string \"Repaying base : Invalid\""
                        }
                      ],
                      "id": 429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6986:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6986:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "6986:71:0"
                },
                {
                  "assignments": [
                    444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 444,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "7126:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 531,
                      "src": "7118:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 443,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7118:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 452,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 445,
                          "name": "guarantees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "7139:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                          }
                        },
                        "id": 448,
                        "indexExpression": {
                          "expression": {
                            "id": 446,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7150:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7154:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7150:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7139:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$",
                          "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                        }
                      },
                      "id": 450,
                      "indexExpression": {
                        "id": 449,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "7162:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7139:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$1328_storage",
                        "typeString": "struct RWA.Collateral storage ref"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7169:10:0",
                    "memberName": "collateral",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1323,
                    "src": "7139:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7118:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 454,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "7210:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7232:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7224:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 455,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7224:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7224:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7210:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265706179696e672062617365203a20496e76616c696420636f6c6c61746572616c",
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7250:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3eeb9d4df013ab3025aa3d8c64747e2900ad97bf97c60400d800de21f1477287",
                          "typeString": "literal_string \"Repaying base : Invalid collateral\""
                        },
                        "value": "Repaying base : Invalid collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3eeb9d4df013ab3025aa3d8c64747e2900ad97bf97c60400d800de21f1477287",
                          "typeString": "literal_string \"Repaying base : Invalid collateral\""
                        }
                      ],
                      "id": 453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7189:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7189:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "7189:107:0"
                },
                {
                  "assignments": [
                    464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 464,
                      "mutability": "mutable",
                      "name": "baseToken",
                      "nameLocation": "7345:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 531,
                      "src": "7337:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 463,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7337:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 468,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 465,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "7357:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1217",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7363:9:0",
                      "memberName": "baseToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1081,
                      "src": "7357:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7357:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7337:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 472,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7401:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7405:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7401:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 474,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7413:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7417:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7413:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 476,
                        "name": "baseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "7425:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 477,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "7436:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 469,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "7384:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1217",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7390:10:0",
                      "memberName": "supplyFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 818,
                      "src": "7384:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7384:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "7384:59:0"
                },
                {
                  "expression": {
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 480,
                            "name": "guarantees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "7495:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                            }
                          },
                          "id": 484,
                          "indexExpression": {
                            "expression": {
                              "id": 481,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7506:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7510:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7506:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7495:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$",
                            "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                          }
                        },
                        "id": 485,
                        "indexExpression": {
                          "id": 483,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "7518:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7495:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$1328_storage",
                          "typeString": "struct RWA.Collateral storage ref"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7525:8:0",
                      "memberName": "borrowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1327,
                      "src": "7495:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 487,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "7537:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7495:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "7495:48:0"
                },
                {
                  "assignments": [
                    491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 491,
                      "mutability": "mutable",
                      "name": "collateralToWithdraw",
                      "nameLocation": "7671:20:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 531,
                      "src": "7663:28:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7663:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 502,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 494,
                                  "name": "collateral",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 444,
                                  "src": "7736:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 492,
                                  "name": "comet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12,
                                  "src": "7695:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Comet_$1217",
                                    "typeString": "contract Comet"
                                  }
                                },
                                "id": 493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7714:21:0",
                                "memberName": "getAssetInfoByAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 945,
                                "src": "7695:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_AssetInfo_$682_memory_ptr_$",
                                  "typeString": "function (address) view external returns (struct Comet.AssetInfo memory)"
                                }
                              },
                              "id": 495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7695:52:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AssetInfo_$682_memory_ptr",
                                "typeString": "struct Comet.AssetInfo memory"
                              }
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7761:22:0",
                            "memberName": "borrowCollateralFactor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 675,
                            "src": "7695:88:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 497,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "7786:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7695:97:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 499,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7694:99:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7796:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "7694:106:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7663:137:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 506,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7916:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7920:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7916:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7940:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7944:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7940:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 510,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "7964:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 511,
                        "name": "collateralToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "7988:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 503,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "7884:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1217",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7890:12:0",
                      "memberName": "withdrawFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 885,
                      "src": "7884:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7884:134:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "7884:134:0"
                },
                {
                  "expression": {
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 514,
                            "name": "guarantees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "8028:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                            }
                          },
                          "id": 518,
                          "indexExpression": {
                            "expression": {
                              "id": 515,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8039:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8043:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8039:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8028:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1328_storage_$",
                            "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                          }
                        },
                        "id": 519,
                        "indexExpression": {
                          "id": 517,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "8051:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8028:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$1328_storage",
                          "typeString": "struct RWA.Collateral storage ref"
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8058:16:0",
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1325,
                      "src": "8028:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 521,
                      "name": "collateralToWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "8078:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8028:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "8028:70:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 525,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8120:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8124:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8120:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 527,
                        "name": "baseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "8132:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 528,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "8143:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 524,
                      "name": "Repaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "8113:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8113:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "EmitStatement",
                  "src": "8108:42:0"
                }
              ]
            },
            "documentation": {
              "id": 422,
              "nodeType": "StructuredDocumentation",
              "src": "6638:240:0",
              "text": " @notice Called by RWA issuer to repay base asset to Compound and withdraw collateral posted earlier\n @param asset       RWA for which base asset is paid back\n @param amount      amount of base asset paid back*"
            },
            "functionSelector": "2511e8a0",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBase",
            "nameLocation": "6892:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "6910:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "6902:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6902:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6925:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "6917:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6917:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6901:31:0"
            },
            "returnParameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6942:0:0"
            },
            "scope": 533,
            "src": "6883:1274:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 534,
        "src": "385:7774:0",
        "usedErrors": []
      }
    ],
    "src": "37:8123:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {
    "84532": {
      "events": {},
      "links": {},
      "address": "0x593cF24a170aE5359E14507EC2776D66f8494D40",
      "transactionHash": "0x469ee17893ce7441914ded6d55a23c8beb6b5dd3efc81f72b43a82abc530ef54"
    },
    "11155111": {
      "events": {},
      "links": {},
      "address": "0xaebfd463cc3B42c7fBC8FB42376CEC1cB63a0A48",
      "transactionHash": "0x2edd99a1afb56a5b5ca9481b08d1b05b557cde6b83f517e719b6113aa3cafdad"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-09-02T09:26:09.819Z",
  "devdoc": {
    "author": "Kallol Borah",
    "kind": "dev",
    "methods": {
      "borrowBase(address,uint256)": {
        "params": {
          "amount": "amount of base asset borrowed*",
          "asset": "RWA for which base asset is borrowed"
        }
      },
      "constructor": {
        "params": {
          "comet_": "The Comet contract.*"
        }
      },
      "postCollateral(address,address,uint256)": {
        "params": {
          "amount": "amount of collateral posted*",
          "asset": "RWA for which collateral is posted",
          "collateral": "collateral used to buy bond issued by RWA issuer(must not be baseToken and must be accepted by comet)"
        }
      },
      "repayBase(address,uint256)": {
        "params": {
          "amount": "amount of base asset paid back*",
          "asset": "RWA for which base asset is paid back"
        }
      },
      "submitNewRWA(address,address,uint256,string,uint256)": {
        "params": {
          "apy": "interest rate paid on bond",
          "asset": "RWA for which bond is issued",
          "bond": "bond token that is issued",
          "faceValue": "par value of bond after discounting it with interest rate*",
          "issuingDocs": "ipfs reference for RWA docs"
        }
      }
    },
    "title": "Verified Markets",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "borrowBase(address,uint256)": {
        "notice": "Called by RWA issuer to to borrow base asset from Compound"
      },
      "comet()": {
        "notice": "The Comet contract"
      },
      "constructor": {
        "notice": "Construct a new operator."
      },
      "postCollateral(address,address,uint256)": {
        "notice": "Used by RWA issuer to post collateral used to buy bonds issued by it to borrow from Compound"
      },
      "repayBase(address,uint256)": {
        "notice": "Called by RWA issuer to repay base asset to Compound and withdraw collateral posted earlier"
      },
      "submitNewRWA(address,address,uint256,string,uint256)": {
        "notice": "RWA issuer submits asset details and bond issued that can be purchased to provide collateral to the RWA issuer"
      }
    },
    "notice": "A Compound III operator to enable staking of collateral for real world assets to Compound.",
    "version": 1
  }
}