{
  "contractName": "VerifiedMarkets",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "comet_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Borrowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bond",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "issuingDocs",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "faceValue",
          "type": "uint256"
        }
      ],
      "name": "NewRWA",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PostedCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Repaid",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "comet",
      "outputs": [
        {
          "internalType": "contract Comet",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "bond",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "issuingDocs",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "faceValue",
          "type": "uint256"
        }
      ],
      "name": "submitNewRWA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "postCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrowBase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "repayBase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"comet_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Borrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bond\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"issuingDocs\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"faceValue\",\"type\":\"uint256\"}],\"name\":\"NewRWA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PostedCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repaid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comet\",\"outputs\":[{\"internalType\":\"contract Comet\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"postCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repayBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bond\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"issuingDocs\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"faceValue\",\"type\":\"uint256\"}],\"name\":\"submitNewRWA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Kallol Borah\",\"kind\":\"dev\",\"methods\":{\"borrowBase(address,uint256)\":{\"params\":{\"amount\":\"amount of base asset borrowed*\",\"asset\":\"RWA for which base asset is borrowed\"}},\"constructor\":{\"params\":{\"comet_\":\"The Comet contract.*\"}},\"postCollateral(address,address,uint256)\":{\"params\":{\"amount\":\"amount of collateral posted*\",\"asset\":\"RWA for which collateral is posted\",\"collateral\":\"collateral used to buy bond issued by RWA issuer(must not be baseToken and must be accepted by comet)\"}},\"repayBase(address,uint256)\":{\"params\":{\"amount\":\"amount of base asset paid back*\",\"asset\":\"RWA for which base asset is paid back\"}},\"submitNewRWA(address,address,uint256,string,uint256)\":{\"params\":{\"apy\":\"interest rate paid on bond\",\"asset\":\"RWA for which bond is issued\",\"bond\":\"bond token that is issued\",\"faceValue\":\"par value of bond after discounting it with interest rate*\",\"issuingDocs\":\"ipfs reference for RWA docs\"}}},\"title\":\"Verified Markets\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrowBase(address,uint256)\":{\"notice\":\"Called by RWA issuer to to borrow base asset from Compound\"},\"comet()\":{\"notice\":\"The Comet contract\"},\"constructor\":{\"notice\":\"Construct a new operator.\"},\"postCollateral(address,address,uint256)\":{\"notice\":\"Used by RWA issuer to post collateral used to buy bonds issued by it to borrow from Compound\"},\"repayBase(address,uint256)\":{\"notice\":\"Called by RWA issuer to repay base asset to Compound and withdraw collateral posted earlier\"},\"submitNewRWA(address,address,uint256,string,uint256)\":{\"notice\":\"RWA issuer submits asset details and bond issued that can be purchased to provide collateral to the RWA issuer\"}},\"notice\":\"A Compound III operator to enable staking of collateral for real world assets to Compound.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/VerifiedMarkets.sol\":\"VerifiedMarkets\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/VerifiedMarkets.sol\":{\"keccak256\":\"0xa33556f5ff129b334a20822ea862726c1bbe7d86241d7c9773812150ce5d0815\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://257f7302ea89c66a17b66c7796a26e545313eefb30b07bf114dc7d66d941b7ab\",\"dweb:/ipfs/QmQAh1qLDRszMXHyYHvdn3ZDRMBbDvQtDnS52Vr2Am5dVS\"]},\"project:/contracts/interfaces/Bond.sol\":{\"keccak256\":\"0x6167b8680d8ee3280a6a2c64e4510dcdcba9aa7725c00e129c2c35a13b06f3cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f846c51351b3fb890ae59d6f8253aa4c3fca9d7d86e335e96ea88412b536015\",\"dweb:/ipfs/QmRgGGCdmoWER1rSJ9pUj8oYXTu94JpeCAARveCqPV8iKN\"]},\"project:/contracts/interfaces/CometInterface.sol\":{\"keccak256\":\"0x60cfc062dc465fbcbcb7369d81415b05f5967ba0b27c407dec91804c7b03bc58\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6d6b7b7e05010d5df7dcc9a76be6ed8d6e0af7f75810a933c10a068976b984be\",\"dweb:/ipfs/QmURqGK7LSvprsHV7zDH8m8CodfBnERochbnHx7UMc1qX4\"]},\"project:/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x2741fde0a32608044b0359d2f763bda7e9a477bbb379deea4cc80bb5f14a54c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12f2355edddb83ecfbafe10b2802174c7450dfaf45cae2b1b25bcc546558938f\",\"dweb:/ipfs/QmfEHxiP7nppK4mVSP431DzGPqLfqNUf5krHVgWEJXamPu\"]},\"project:/contracts/interfaces/VerifiedMarketsInterface.sol\":{\"keccak256\":\"0x99bddc19a48dbe612bbbe626063b600de72993efc523d13918d2c5c9d29923b6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ede56288c75954d9260fb1f406d96bd44670081eab0fd5e765a9db82069857a6\",\"dweb:/ipfs/QmSzVA6WxzcDDsHB9XzRE1SqrroMYoDCYtCWEUMwMutx8A\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {
    "10": [
      {
        "length": 32,
        "start": 175
      },
      {
        "length": 32,
        "start": 1099
      },
      {
        "length": 32,
        "start": 1253
      },
      {
        "length": 32,
        "start": 1456
      },
      {
        "length": 32,
        "start": 1621
      },
      {
        "length": 32,
        "start": 1918
      },
      {
        "length": 32,
        "start": 2220
      },
      {
        "length": 32,
        "start": 2431
      },
      {
        "length": 32,
        "start": 2585
      },
      {
        "length": 32,
        "start": 3099
      },
      {
        "length": 32,
        "start": 3332
      },
      {
        "length": 32,
        "start": 3700
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:5",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:5"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:5",
                "type": ""
              }
            ],
            "src": "14:290:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15242:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:5",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:5"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:5"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:5",
                "type": ""
              }
            ],
            "src": "14:131:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "182:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "199:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "206:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "211:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "202:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "202:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "192:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "192:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "192:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "239:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "242:4:5",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "263:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "266:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "256:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "256:15:5"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "150:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "327:230:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "337:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "353:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "347:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "347:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "337:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "365:58:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "387:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "403:4:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "409:2:5",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "399:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "399:13:5"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "418:2:5",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "414:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "414:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "395:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "395:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "383:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "383:40:5"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "369:10:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "498:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "500:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "500:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "500:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "441:10:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "453:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "438:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "438:34:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "477:10:5"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "489:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "474:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "474:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "435:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:62:5"
                  },
                  "nodeType": "YulIf",
                  "src": "432:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "536:2:5",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "540:10:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "529:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "529:22:5"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "307:4:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "316:6:5",
                "type": ""
              }
            ],
            "src": "282:275:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "710:1030:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "757:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "766:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "769:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "759:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "759:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "759:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "731:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "740:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "727:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "727:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:3:5",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "723:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "723:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "720:53:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "782:36:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "808:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "795:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "795:23:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "786:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "852:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "827:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "827:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "827:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "867:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "877:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "867:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "891:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "901:2:5",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "895:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "912:47:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "944:9:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "955:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "940:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "940:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "927:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "927:32:5"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "916:7:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "993:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "968:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "968:33:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1010:17:5",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1020:7:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1010:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1036:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1063:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1074:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1059:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1059:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1046:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1046:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1036:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1087:46:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1118:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1129:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1114:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1114:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1101:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1101:32:5"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1091:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1142:28:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1152:18:5",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1146:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1197:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1206:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1209:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1199:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1199:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1199:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1185:6:5"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1193:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1182:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1182:14:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1179:34:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1222:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1236:9:5"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1247:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1232:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1232:22:5"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1226:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1302:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1311:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1314:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1304:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1304:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1304:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1281:2:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1285:4:5",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1277:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1277:13:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1292:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1273:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1273:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1266:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1266:35:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1263:55:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1327:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1350:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1337:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1337:16:5"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1331:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1376:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1378:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1378:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1378:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1368:2:5"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1372:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1365:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:10:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1362:36:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1407:66:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1448:2:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1452:4:5",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1444:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1444:13:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1463:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1459:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1459:7:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1440:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1440:27:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1469:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1436:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1436:36:5"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1420:15:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1420:53:5"
                  },
                  "variables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "1411:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1489:5:5"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1496:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1482:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1482:17:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1482:17:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1545:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1554:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1557:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1547:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1547:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1547:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1522:2:5"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1526:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1518:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1518:11:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1531:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1514:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1514:20:5"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1536:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1511:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1508:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "1587:5:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1594:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1583:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1583:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1603:2:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1607:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1599:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1599:11:5"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1612:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1570:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1570:45:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1570:45:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "1639:5:5"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1646:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1635:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1635:14:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1651:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1631:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1631:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1656:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1624:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1624:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1624:34:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1667:15:5",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "1677:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1691:43:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1718:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1729:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1714:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1714:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1701:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1701:33:5"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1691:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "644:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "655:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "667:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "675:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "683:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "691:6:5",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "699:6:5",
                "type": ""
              }
            ],
            "src": "562:1178:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1832:228:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1878:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1887:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1890:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1880:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1880:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1880:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1853:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1862:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1849:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1849:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1874:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1845:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1842:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1903:36:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1929:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1916:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1916:23:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1907:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1973:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1948:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1948:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1948:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1988:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1998:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1988:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2012:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2039:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2050:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2035:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2035:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2022:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2022:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2012:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1790:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1801:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1813:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1821:6:5",
                "type": ""
              }
            ],
            "src": "1745:315:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2169:352:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2215:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2224:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2227:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2217:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2217:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2217:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2190:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2199:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2186:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2186:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2211:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2182:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2182:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2179:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2240:36:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2266:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2253:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2253:23:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2244:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2310:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2285:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2285:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2285:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2325:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2335:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2325:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2349:47:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2381:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2392:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2377:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2377:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2364:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2364:32:5"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2353:7:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2430:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2405:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2405:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2405:33:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2447:17:5",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2457:7:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2447:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2473:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2500:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2511:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2496:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2496:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2483:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2483:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2473:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2119:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2130:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2142:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2150:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2158:6:5",
                "type": ""
              }
            ],
            "src": "2065:456:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2641:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2651:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2663:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2674:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2659:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2659:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2651:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2693:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2708:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2724:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2729:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2720:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2720:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2733:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2716:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2716:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2704:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2704:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2686:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2686:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2686:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Comet_$1251__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2610:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2621:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2632:4:5",
                "type": ""
              }
            ],
            "src": "2526:217:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2922:182:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2939:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2950:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2932:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2932:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2932:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2973:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2984:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2969:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2969:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2989:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2962:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2962:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2962:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3012:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3023:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3008:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3008:18:5"
                      },
                      {
                        "hexValue": "525741207375626d697373696f6e203a20496e76616c69642072657175657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3028:34:5",
                        "type": "",
                        "value": "RWA submission : Invalid request"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3001:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3001:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3001:62:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3072:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3084:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3095:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3080:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3080:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3072:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ac2d297c7b797b46238ca2df5d2a150e9ead54471c39a8a35a5a622a4d896f94__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2899:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2913:4:5",
                "type": ""
              }
            ],
            "src": "2748:356:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3164:325:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3174:22:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3188:1:5",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3191:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3184:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3184:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3174:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3205:38:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3235:4:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3241:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3231:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3231:12:5"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3209:18:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3282:31:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3284:27:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3298:6:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3306:4:5",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3294:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3294:17:5"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3284:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3262:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3255:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3255:26:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3252:61:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3372:111:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3393:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3400:3:5",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3405:10:5",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3396:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3396:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3386:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3386:31:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3386:31:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3437:1:5",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3440:4:5",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3430:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3430:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3430:15:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3465:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3468:4:5",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3458:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3458:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3458:15:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3328:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3351:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3359:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3348:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3348:14:5"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3325:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3325:38:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3322:161:5"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3144:4:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3153:6:5",
                "type": ""
              }
            ],
            "src": "3109:380:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3550:65:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3567:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "3570:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3560:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3560:14:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3560:14:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3583:26:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3601:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3604:4:5",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "3591:9:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3591:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "3583:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "3533:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3541:4:5",
                "type": ""
              }
            ],
            "src": "3494:121:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3701:464:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3734:425:5",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3748:11:5",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3758:1:5",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "3752:2:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3779:2:5"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "3783:5:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3772:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3772:17:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3772:17:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3802:31:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3824:2:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3828:4:5",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "3814:9:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3814:19:5"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "3806:4:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3846:57:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "3869:4:5"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3879:1:5",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "3886:10:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3898:2:5",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3882:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3882:19:5"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "3875:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3875:27:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3865:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3865:38:5"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "3850:11:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3940:23:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3942:19:5",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "3957:4:5"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3942:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "3922:10:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3934:4:5",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "3919:2:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3919:20:5"
                        },
                        "nodeType": "YulIf",
                        "src": "3916:47:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3976:41:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "3990:4:5"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4000:1:5",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "4007:3:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4012:2:5",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4003:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4003:12:5"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "3996:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3996:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3986:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3986:31:5"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "3980:2:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4030:24:5",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "4043:11:5"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "4034:5:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4128:21:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "4137:5:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4144:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4130:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4130:17:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4130:17:5"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "4078:5:5"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "4085:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "4075:2:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4075:13:5"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "4089:26:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4091:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "4104:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4111:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4100:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4100:13:5"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "4091:5:5"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "4071:3:5",
                          "statements": []
                        },
                        "src": "4067:82:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "3717:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3722:2:5",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3714:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3714:11:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3711:448:5"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "3673:5:5",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "3680:3:5",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "3685:10:5",
                "type": ""
              }
            ],
            "src": "3620:545:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4255:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4265:65:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "4280:4:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4298:1:5",
                                        "type": "",
                                        "value": "3"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "4301:3:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4294:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4294:11:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4311:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4307:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4307:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4290:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4290:24:5"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "4286:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4286:29:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4276:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4276:40:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4322:1:5",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "4325:3:5"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4318:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4318:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4273:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4273:57:5"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "4265:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4232:4:5",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "4238:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "4246:4:5",
                "type": ""
              }
            ],
            "src": "4170:166:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4437:1256:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4447:24:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "4467:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4461:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4461:10:5"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "4451:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4514:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4516:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4516:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4516:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4486:6:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4494:18:5",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4483:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4483:30:5"
                  },
                  "nodeType": "YulIf",
                  "src": "4480:56:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "4589:4:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "4627:4:5"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "4621:5:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4621:11:5"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "4595:25:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4595:38:5"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4635:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "4545:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4545:97:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4545:97:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4651:18:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4668:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "4655:9:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4678:23:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4697:4:5",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "4682:11:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4710:24:5",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "4723:11:5"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "4710:9:5"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4780:656:5",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4794:35:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "4813:6:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4825:2:5",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "4821:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4821:7:5"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4809:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4809:20:5"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "4798:7:5",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4842:49:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4886:4:5"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "4856:29:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4856:35:5"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "4846:6:5",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4904:10:5",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4913:1:5",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "4908:1:5",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4991:172:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5016:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "5034:3:5"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "5039:9:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "5030:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5030:19:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "5024:5:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5024:26:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "5009:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5009:42:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5009:42:5"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5068:24:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5082:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5090:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5078:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5078:14:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5068:6:5"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5109:40:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5126:9:5"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5137:11:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5122:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5122:27:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "5109:9:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4938:1:5"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4941:7:5"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "4935:2:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4935:14:5"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "4950:28:5",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4952:24:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4961:1:5"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4964:11:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4957:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4957:19:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4952:1:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "4931:3:5",
                              "statements": []
                            },
                            "src": "4927:236:5"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5211:166:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5229:43:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "5256:3:5"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5261:9:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5252:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5252:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5246:5:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5246:26:5"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "5233:9:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5296:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "5308:9:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "5335:1:5",
                                                            "type": "",
                                                            "value": "3"
                                                          },
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "5338:6:5"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "shl",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "5331:3:5"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "5331:14:5"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "5347:3:5",
                                                        "type": "",
                                                        "value": "248"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5327:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "5327:24:5"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "5357:1:5",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5353:3:5"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "5353:6:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5323:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5323:37:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "5319:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5319:42:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "5304:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5304:58:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "5289:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5289:74:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5289:74:5"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "5182:7:5"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "5191:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "5179:2:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5179:19:5"
                            },
                            "nodeType": "YulIf",
                            "src": "5176:201:5"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5397:4:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5411:1:5",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "5414:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "5407:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5407:14:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5423:1:5",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5403:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5403:22:5"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "5390:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5390:36:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5390:36:5"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4773:663:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4778:1:5",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5453:234:5",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5467:14:5",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5480:1:5",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "5471:5:5",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5516:67:5",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5534:35:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "5553:3:5"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5558:9:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5549:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5549:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5543:5:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5543:26:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5534:5:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "5497:6:5"
                            },
                            "nodeType": "YulIf",
                            "src": "5494:89:5"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5603:4:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5662:5:5"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "5669:6:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "5609:52:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5609:67:5"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "5596:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5596:81:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5596:81:5"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "5445:242:5",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4753:6:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4761:2:5",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4750:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4750:14:5"
                  },
                  "nodeType": "YulSwitch",
                  "src": "4743:944:5"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "4422:4:5",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4428:3:5",
                "type": ""
              }
            ],
            "src": "4341:1352:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5872:179:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5889:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5900:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5882:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5882:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5882:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5923:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5934:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5919:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5919:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5939:2:5",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5912:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5912:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5912:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5962:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5973:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5958:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5958:18:5"
                      },
                      {
                        "hexValue": "525741207375626d697373696f6e203a20496e76616c696420626f6e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5978:31:5",
                        "type": "",
                        "value": "RWA submission : Invalid bond"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5951:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5951:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5951:59:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6019:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6031:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6042:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6027:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6019:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e9fe6b1aa35315a9eec2b928ae49567079ea3c7de0e41b220725a45640e39cbb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5849:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5863:4:5",
                "type": ""
              }
            ],
            "src": "5698:353:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6122:184:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6132:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6141:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6136:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6201:63:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6226:3:5"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6231:1:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6222:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6222:11:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6245:3:5"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6250:1:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6241:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6241:11:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6235:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6235:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6215:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6215:39:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6215:39:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6162:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6165:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6159:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6159:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6173:19:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6175:15:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6184:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6187:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6180:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6180:10:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6175:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6155:3:5",
                    "statements": []
                  },
                  "src": "6151:113:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6284:3:5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6289:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6280:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6280:16:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6298:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6273:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6273:27:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6273:27:5"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6100:3:5",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6105:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6110:6:5",
                "type": ""
              }
            ],
            "src": "6056:250:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6516:434:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6533:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6548:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6564:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6569:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6560:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6560:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6573:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6556:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6556:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6544:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6544:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6526:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6526:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6526:51:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6597:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6608:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6593:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6593:18:5"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6613:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6586:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6586:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6586:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6640:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6651:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6636:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6636:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6656:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6629:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6629:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6629:31:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6669:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6689:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6683:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6683:13:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6673:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6716:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6727:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6712:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6712:19:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6733:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6705:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6705:35:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6705:35:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "6788:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6796:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6784:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6784:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6805:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6816:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6801:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6801:19:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6822:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "6749:34:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6749:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6749:80:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6838:63:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6854:9:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6873:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6881:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6869:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6869:15:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6890:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6886:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6886:7:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6865:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6865:29:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6850:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6850:45:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6897:3:5",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6846:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6846:55:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6838:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6921:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6932:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6917:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6917:18:5"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6937:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6910:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6910:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6910:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6461:9:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6472:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6480:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6488:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6496:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6507:4:5",
                "type": ""
              }
            ],
            "src": "6311:639:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7129:173:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7146:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7157:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7139:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7139:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7139:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7180:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7191:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7176:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7176:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7196:2:5",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7169:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7169:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7169:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7219:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7230:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7215:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7215:18:5"
                      },
                      {
                        "hexValue": "5265706179696e672062617365203a20496e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7235:25:5",
                        "type": "",
                        "value": "Repaying base : Invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7208:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7208:53:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7208:53:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7270:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7282:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7293:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7278:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7278:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7270:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7e16f45ca0b8574ba9a0f101e7dde34ccb7c3ffff9b592faacbc2b34b38c771__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7106:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7120:4:5",
                "type": ""
              }
            ],
            "src": "6955:347:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7481:179:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7498:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7509:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7491:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7491:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7491:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7532:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7543:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7528:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7528:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7548:2:5",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7521:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7521:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7521:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7571:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7582:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7567:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7567:18:5"
                      },
                      {
                        "hexValue": "5265706179696e672062617365203a20496e76616c6964206173736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7587:31:5",
                        "type": "",
                        "value": "Repaying base : Invalid asset"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7560:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7560:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7560:59:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7628:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7640:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7651:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7636:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7636:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7628:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e61ebccde49c8c0954cc71125a1488a73aaf4b8a1ca76a62e1dae9ffd56e5f08__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7458:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7472:4:5",
                "type": ""
              }
            ],
            "src": "7307:353:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7725:78:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7735:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7750:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7744:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7744:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7735:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7791:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7766:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7766:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7766:31:5"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7704:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7715:5:5",
                "type": ""
              }
            ],
            "src": "7665:138:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7889:170:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7935:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7944:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7947:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7937:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7937:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7937:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7910:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7919:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7906:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7906:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7931:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7902:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7902:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7899:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7960:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7979:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7973:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7973:16:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7964:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8023:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7998:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7998:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7998:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8038:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8048:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8038:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7855:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7866:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7878:6:5",
                "type": ""
              }
            ],
            "src": "7808:251:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8249:271:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8259:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8271:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8282:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8267:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8267:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8259:4:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8295:29:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8313:3:5",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8318:1:5",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8309:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8309:11:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8322:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8305:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8305:19:5"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8299:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8340:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8355:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8363:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8351:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8351:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8333:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8333:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8333:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8387:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8398:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8383:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8383:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8407:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8415:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8403:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8403:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8376:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8376:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8376:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8439:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8450:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8435:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8435:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8459:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8467:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8455:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8455:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8428:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8428:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8428:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8491:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8502:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8487:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8487:18:5"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8507:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8480:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8480:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8480:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8194:9:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8205:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8213:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8221:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8229:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8240:4:5",
                "type": ""
              }
            ],
            "src": "8064:456:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8557:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8574:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8581:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8586:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8577:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8577:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8567:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8567:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8567:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8614:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8617:4:5",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8607:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8607:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8607:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8638:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8641:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8631:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8631:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8631:15:5"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8525:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8706:79:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8716:17:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8728:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8731:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8724:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8724:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8716:4:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8757:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8759:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8759:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8759:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "8748:4:5"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8754:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8745:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8745:11:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8742:37:5"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8688:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8691:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8697:4:5",
                "type": ""
              }
            ],
            "src": "8657:128:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8891:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8901:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8913:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8924:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8909:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8909:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8901:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8943:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8958:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8974:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8979:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8970:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8970:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8983:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8966:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8966:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8954:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8954:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8936:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8936:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8936:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8860:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8871:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8882:4:5",
                "type": ""
              }
            ],
            "src": "8790:203:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9056:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9066:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9081:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9075:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9075:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9066:5:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9136:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9145:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9148:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9138:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9138:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9138:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9110:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9121:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9128:4:5",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9117:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9117:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9107:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9107:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9100:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9100:35:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9097:55:5"
                }
              ]
            },
            "name": "abi_decode_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9035:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9046:5:5",
                "type": ""
              }
            ],
            "src": "8998:160:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9222:116:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9232:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9247:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9241:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9241:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9232:5:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9316:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9325:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9328:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9318:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9318:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9318:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9276:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9287:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9294:18:5",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9283:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9283:30:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9273:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9273:41:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9266:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9266:49:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9263:69:5"
                }
              ]
            },
            "name": "abi_decode_uint64_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9201:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9212:5:5",
                "type": ""
              }
            ],
            "src": "9163:175:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9403:132:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9413:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9428:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9422:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9422:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9413:5:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9513:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9522:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9525:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9515:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9515:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9515:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9457:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9468:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9475:34:5",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9464:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9464:46:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9454:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9454:57:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9447:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9447:65:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9444:85:5"
                }
              ]
            },
            "name": "abi_decode_uint128_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9382:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9393:5:5",
                "type": ""
              }
            ],
            "src": "9343:192:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9647:1008:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9657:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9667:3:5",
                    "type": "",
                    "value": "256"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9661:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9715:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9724:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9727:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9717:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9717:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9717:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9690:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9699:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9686:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9686:23:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9711:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9682:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9682:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9679:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9740:23:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9760:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9754:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9754:9:5"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "9744:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9772:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "9794:6:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9802:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9790:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9790:15:5"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "9776:10:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9880:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "9882:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9882:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9882:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "9823:10:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9835:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9820:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9820:34:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "9859:10:5"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9871:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9856:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9856:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "9817:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9817:62:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9814:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9918:2:5",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "9922:10:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9911:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9911:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9911:22:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "9949:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9985:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint8_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9957:27:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9957:38:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9942:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9942:54:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9942:54:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10005:38:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10028:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10039:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10024:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10024:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10018:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10018:25:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10009:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10077:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "10052:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10052:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10052:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10103:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10111:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10099:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10099:15:5"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10116:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10092:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10092:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10092:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10142:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10150:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10138:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10138:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10189:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10200:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10185:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10185:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10155:29:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10155:49:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10131:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10131:74:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10131:74:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10225:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10233:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10221:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10221:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10271:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10282:2:5",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10267:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10267:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint64_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10238:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10238:48:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10214:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10214:73:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10214:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10307:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10315:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10303:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10303:16:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10354:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10365:3:5",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10350:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10350:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint64_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10321:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10321:49:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10296:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10296:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10296:75:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10391:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10399:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10387:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10387:16:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10438:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10449:3:5",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10434:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10434:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint64_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10405:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10405:49:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10380:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10380:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10380:75:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10475:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10483:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10471:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10471:16:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10522:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10533:3:5",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10518:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10518:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint64_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10489:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10489:49:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10464:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10464:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10464:75:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10559:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10567:3:5",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10555:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10555:16:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10607:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10618:3:5",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10603:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10603:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint128_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10573:29:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10573:50:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10548:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10548:76:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10548:76:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10633:16:5",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "10643:6:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10633:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_AssetInfo_$716_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9613:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9624:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9636:6:5",
                "type": ""
              }
            ],
            "src": "9540:1115:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10712:116:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10771:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10773:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10773:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10773:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10743:1:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10736:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10736:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10729:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10729:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10751:1:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10762:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10758:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10758:6:5"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10766:1:5"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10754:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10754:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10748:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10748:21:5"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10725:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10725:45:5"
                  },
                  "nodeType": "YulIf",
                  "src": "10722:71:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10802:20:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10817:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10820:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10813:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10813:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10802:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10691:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10694:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10700:7:5",
                "type": ""
              }
            ],
            "src": "10660:168:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10879:171:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10910:111:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10931:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10938:3:5",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10943:10:5",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10934:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10934:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10924:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10924:31:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10924:31:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10975:1:5",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10978:4:5",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10968:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10968:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10968:15:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11003:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11006:4:5",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10996:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10996:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10996:15:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10899:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10892:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10892:9:5"
                  },
                  "nodeType": "YulIf",
                  "src": "10889:132:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11030:14:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11039:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11042:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "11035:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11035:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11030:1:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10864:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10867:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10873:1:5",
                "type": ""
              }
            ],
            "src": "10833:217:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11136:103:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11182:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11191:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11194:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11184:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11184:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11184:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11157:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11166:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11153:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11153:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11178:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11149:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11149:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "11146:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11207:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11223:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11217:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11217:16:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11207:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11102:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11113:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11125:6:5",
                "type": ""
              }
            ],
            "src": "11055:184:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11323:125:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11369:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11378:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11381:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11371:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11371:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11371:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11344:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11353:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11340:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11340:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11365:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11336:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11336:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "11333:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11394:48:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11432:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "11404:27:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11404:38:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11394:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11289:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11300:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11312:6:5",
                "type": ""
              }
            ],
            "src": "11244:204:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11517:358:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11527:16:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11542:1:5",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "11531:7:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11552:16:5",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "11561:7:5"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11552:5:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11577:13:5",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "11585:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "11577:4:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11641:228:5",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11686:22:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "11688:16:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11688:18:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11688:18:5"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11661:4:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "11675:1:5",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "11671:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11671:6:5"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "11679:4:5"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "11667:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11667:17:5"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "11658:2:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11658:27:5"
                        },
                        "nodeType": "YulIf",
                        "src": "11655:53:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11747:29:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11749:25:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "11762:5:5"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "11769:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "11758:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11758:16:5"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "11749:5:5"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11728:8:5"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "11738:7:5"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11724:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11724:22:5"
                        },
                        "nodeType": "YulIf",
                        "src": "11721:55:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11789:23:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11801:4:5"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11807:4:5"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "11797:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11797:15:5"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "11789:4:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11825:34:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "11841:7:5"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11850:8:5"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "11837:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11837:22:5"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "11825:8:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11610:8:5"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "11620:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11607:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11607:21:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11629:3:5",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11603:3:5",
                    "statements": []
                  },
                  "src": "11599:270:5"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "11481:5:5",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11488:8:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11501:5:5",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11508:4:5",
                "type": ""
              }
            ],
            "src": "11453:422:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11939:747:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11977:52:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11991:10:5",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12000:1:5",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "11991:5:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12014:5:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11959:8:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11952:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11952:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "11949:80:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12062:52:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12076:10:5",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12085:1:5",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12076:5:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12099:5:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12048:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12041:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12041:12:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12038:76:5"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12150:52:5",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "12164:10:5",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12173:1:5",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12164:5:5"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12187:5:5"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12143:59:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12148:1:5",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12218:123:5",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12253:22:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "12255:16:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12255:18:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12255:18:5"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12238:8:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12248:3:5",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "12235:2:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12235:17:5"
                            },
                            "nodeType": "YulIf",
                            "src": "12232:43:5"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12288:25:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12301:8:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12311:1:5",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "12297:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12297:16:5"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12288:5:5"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12326:5:5"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12211:130:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12216:1:5",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "12130:4:5"
                  },
                  "nodeType": "YulSwitch",
                  "src": "12123:218:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12439:70:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12453:28:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "12466:4:5"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "12472:8:5"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "12462:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12462:19:5"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12453:5:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12494:5:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12363:4:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12369:2:5",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12360:2:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12360:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12377:8:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12387:2:5",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12374:2:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12374:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12356:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12356:35:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12400:4:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12406:3:5",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12397:2:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12397:13:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12415:8:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12425:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12412:2:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12412:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12393:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12393:36:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "12353:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12353:77:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12350:159:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12518:57:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12560:4:5"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12566:8:5"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "12541:18:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12541:34:5"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "12522:7:5",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "12531:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12620:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12622:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12622:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12622:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "12590:7:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12607:1:5",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "12603:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12603:6:5"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "12611:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "12599:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12599:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12587:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12587:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12584:58:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12651:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "12664:7:5"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "12673:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12660:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12660:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12651:5:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11910:4:5",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11916:8:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11929:5:5",
                "type": ""
              }
            ],
            "src": "11880:806:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12759:72:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12769:56:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12799:4:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "12809:8:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12819:4:5",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12805:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12805:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "12778:20:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12778:47:5"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12769:5:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "12730:4:5",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "12736:8:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "12749:5:5",
                "type": ""
              }
            ],
            "src": "12691:140:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12937:76:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12947:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12959:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12970:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12955:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12955:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12947:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12989:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13000:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12982:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12982:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12982:25:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12906:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12917:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12928:4:5",
                "type": ""
              }
            ],
            "src": "12836:177:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13192:174:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13209:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13220:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13202:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13202:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13202:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13243:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13254:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13239:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13239:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13259:2:5",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13232:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13232:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13232:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13282:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13293:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13278:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13278:18:5"
                      },
                      {
                        "hexValue": "426f72726f77696e672062617365203a20496e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13298:26:5",
                        "type": "",
                        "value": "Borrowing base : Invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13271:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13271:54:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13271:54:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13334:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13346:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13357:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13342:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13342:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13334:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_776e4b134377506232128ec017a3f81b7644fa05c0eddc361a8bdbbe6aaf13f6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13169:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13183:4:5",
                "type": ""
              }
            ],
            "src": "13018:348:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13419:77:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13429:16:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13440:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13443:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13436:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13436:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13429:3:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13468:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13470:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13470:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13470:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13460:1:5"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "13463:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13457:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13457:10:5"
                  },
                  "nodeType": "YulIf",
                  "src": "13454:36:5"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13402:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13405:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13411:3:5",
                "type": ""
              }
            ],
            "src": "13371:125:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13675:177:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13692:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13703:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13685:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13685:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13685:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13726:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13737:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13722:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13722:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13742:2:5",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13715:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13715:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13715:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13765:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13776:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13761:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13761:18:5"
                      },
                      {
                        "hexValue": "506f7374696e6720436f6c6c61746572616c3a20496e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13781:29:5",
                        "type": "",
                        "value": "Posting Collateral: Invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13754:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13754:57:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13754:57:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13820:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13832:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13843:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13828:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13828:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13820:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3cf3a52794eca675bbfdc3c417dfc121ed781af513ea1dff09cb870ff5901776__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13652:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13666:4:5",
                "type": ""
              }
            ],
            "src": "13501:351:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13994:150:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14004:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14024:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14018:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14018:13:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14008:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14079:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14087:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14075:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14075:17:5"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14094:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14099:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "14040:34:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14040:66:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14040:66:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14115:23:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14126:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14131:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14122:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14122:16:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14115:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13970:3:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13975:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13986:3:5",
                "type": ""
              }
            ],
            "src": "13857:287:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14323:234:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14340:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14351:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14333:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14333:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14333:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14374:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14385:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14370:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14370:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14390:2:5",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14363:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14363:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14363:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14413:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14424:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14409:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14409:18:5"
                      },
                      {
                        "hexValue": "506f7374696e6720436f6c6c61746572616c3a20496e76616c696420636f6c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14429:34:5",
                        "type": "",
                        "value": "Posting Collateral: Invalid coll"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14402:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14402:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14402:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14484:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14495:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14480:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14480:18:5"
                      },
                      {
                        "hexValue": "61746572616c2063616c6c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14500:14:5",
                        "type": "",
                        "value": "ateral calll"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14473:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14473:42:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14473:42:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14524:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14536:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14547:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14532:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14532:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14524:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_44031d7fe2f5fdcc90cdb121670a2c2a30e70f72d7155daa41d48b1b73f2f313__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14300:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14314:4:5",
                "type": ""
              }
            ],
            "src": "14149:408:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14736:225:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14753:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14764:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14746:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14746:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14746:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14787:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14798:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14783:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14783:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14803:2:5",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14776:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14776:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14776:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14826:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14837:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14822:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14822:18:5"
                      },
                      {
                        "hexValue": "506f737420436f6c6c61746572616c3a20496e76616c696420636f6c6c617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14842:34:5",
                        "type": "",
                        "value": "Post Collateral: Invalid collate"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14815:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14815:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14815:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14897:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14908:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14893:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14893:18:5"
                      },
                      {
                        "hexValue": "72616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14913:5:5",
                        "type": "",
                        "value": "ral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14886:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14886:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14886:33:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14928:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14940:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14951:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14936:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14936:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14928:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_394cd8b0c5d27701b415634dce667cd2b2a95d6403b5642b99bdba02cf0dac43__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14713:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14727:4:5",
                "type": ""
              }
            ],
            "src": "14562:399:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15095:145:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15105:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15117:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15128:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15113:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15113:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15105:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15147:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15162:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15178:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15183:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "15174:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15174:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15187:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "15170:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15170:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15158:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15158:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15140:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15140:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15140:51:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15211:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15222:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15207:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15207:18:5"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15227:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15200:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15200:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15200:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15056:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15067:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15075:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15086:4:5",
                "type": ""
              }
            ],
            "src": "14966:274:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let value_1 := calldataload(add(headStart, _1))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value3 := array\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_Comet_$1251__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ac2d297c7b797b46238ca2df5d2a150e9ead54471c39a8a35a5a622a4d896f94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"RWA submission : Invalid request\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e9fe6b1aa35315a9eec2b928ae49567079ea3c7de0e41b220725a45640e39cbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"RWA submission : Invalid bond\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 128)\n        let length := mload(value2)\n        mstore(add(headStart, 128), length)\n        copy_memory_to_memory_with_cleanup(add(value2, 32), add(headStart, 160), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 160)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e7e16f45ca0b8574ba9a0f101e7dde34ccb7c3ffff9b592faacbc2b34b38c771__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Repaying base : Invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e61ebccde49c8c0954cc71125a1488a73aaf4b8a1ca76a62e1dae9ffd56e5f08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Repaying base : Invalid asset\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_AssetInfo_$716_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 256\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, _1)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_uint8_fromMemory(headStart))\n        let value := mload(add(headStart, 32))\n        validator_revert_address(value)\n        mstore(add(memPtr, 32), value)\n        mstore(add(memPtr, 64), abi_decode_address_fromMemory(add(headStart, 64)))\n        mstore(add(memPtr, 96), abi_decode_uint64_fromMemory(add(headStart, 96)))\n        mstore(add(memPtr, 128), abi_decode_uint64_fromMemory(add(headStart, 128)))\n        mstore(add(memPtr, 160), abi_decode_uint64_fromMemory(add(headStart, 160)))\n        mstore(add(memPtr, 192), abi_decode_uint64_fromMemory(add(headStart, 192)))\n        mstore(add(memPtr, 224), abi_decode_uint128_fromMemory(add(headStart, 224)))\n        value0 := memPtr\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint8_fromMemory(headStart)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_776e4b134377506232128ec017a3f81b7644fa05c0eddc361a8bdbbe6aaf13f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Borrowing base : Invalid\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_3cf3a52794eca675bbfdc3c417dfc121ed781af513ea1dff09cb870ff5901776__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Posting Collateral: Invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_44031d7fe2f5fdcc90cdb121670a2c2a30e70f72d7155daa41d48b1b73f2f313__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Posting Collateral: Invalid coll\")\n        mstore(add(headStart, 96), \"ateral calll\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394cd8b0c5d27701b415634dce667cd2b2a95d6403b5642b99bdba02cf0dac43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Post Collateral: Invalid collate\")\n        mstore(add(headStart, 96), \"ral\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "385:8188:0:-:0;;;1465:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1503:21:0;;;385:8188;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;385:8188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "385:8188:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2068:1517;;;;;;:::i;:::-;;:::i;:::-;;6938:1633;;;;;;:::i;:::-;;:::i;6147:540::-;;;;;;:::i;:::-;;:::i;3959:1972::-;;;;;;:::i;:::-;;:::i;451:28::-;;;;;;;;-1:-1:-1;;;;;2704:32:5;;;2686:51;;2674:2;2659:18;451:28:0;;;;;;;2068:1517;-1:-1:-1;;;;;2301:21:0;;;;;;:61;;-1:-1:-1;;;;;;2342:20:0;;;;2301:61;:94;;;;;2390:5;-1:-1:-1;;;;;2382:13:0;:4;-1:-1:-1;;;;;2382:13:0;;;2301:94;:121;;;;;2421:1;2415:3;:7;2301:121;:154;;;;;2454:1;2442:9;:13;2301:154;2280:233;;;;-1:-1:-1;;;2280:233:0;;2950:2:5;2280:233:0;;;2932:21:5;;;2969:18;;;2962:30;3028:34;3008:18;;;3001:62;3080:18;;2280:233:0;;;;;;;;;2808:10;2843:3;2801:18;;;;;;;;;;;-1:-1:-1;;;;;2801:25:0;;;;;;;;;;:30;;2797:707;;2886:159;;;;;;;;-1:-1:-1;;;;;2886:159:0;;;;;;;;;;;;;;;;;;;;;;;;3066:10;-1:-1:-1;3059:18:0;;;;;;;;;:25;;;;;;;;;;;;:31;;;;-1:-1:-1;;;;;;3059:31:0;;;;;;;;;;-1:-1:-1;3059:31:0;;;;;2886:159;;;;3059:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:252;2797:707;;;3224:10;3217:6;:18;;;;;;;;;;;-1:-1:-1;;;;;3217:25:0;;;;;;;;;;:30;;;:38;;;;3192:126;;;;-1:-1:-1;;;3192:126:0;;5900:2:5;3192:126:0;;;5882:21:5;5939:2;5919:18;;;5912:30;5978:31;5958:18;;;5951:59;6027:18;;3192:126:0;5698:353:5;3192:126:0;3339:10;3332:6;:18;;;;;;;;;;;-1:-1:-1;;;;;3332:25:0;;;;;;;;;:29;;;:35;;;3381:37;;:51;3421:11;3381:37;:51;:::i;:::-;-1:-1:-1;3453:10:0;3446:6;:18;;;;;;;;;;;-1:-1:-1;;;;;3446:25:0;;;;;;;;;:35;;:47;;;2797:707;3537:5;-1:-1:-1;;;;;3518:60:0;3525:10;-1:-1:-1;;;;;3518:60:0;;3544:4;3550:3;3555:11;3568:9;3518:60;;;;;;;;;:::i;:::-;;;;;;;;2068:1517;;;;;:::o;6938:1633::-;-1:-1:-1;;;;;7049:21:0;;;;;;:35;;;7083:1;7074:6;:10;7049:35;7041:71;;;;-1:-1:-1;;;7041:71:0;;7157:2:5;7041:71:0;;;7139:21:5;7196:2;7176:18;;;7169:30;7235:25;7215:18;;;7208:53;7278:18;;7041:71:0;6955:347:5;7041:71:0;7205:10;7173:18;7194:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;7194:29:0;;;;;;;;;;:40;;;7244:68;;;;-1:-1:-1;;;7244:68:0;;7509:2:5;7244:68:0;;;7491:21:5;7548:2;7528:18;;;7521:30;7587:31;7567:18;;;7560:59;7636:18;;7244:68:0;7307:353:5;7244:68:0;7353:17;7373:5;-1:-1:-1;;;;;7373:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7400:59;;-1:-1:-1;;;7400:59:0;;7353:37;;-1:-1:-1;;;;;;7400:5:0;:16;;;;:59;;7417:10;;;;7353:37;;7452:6;;7400:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7522:10:0;7511:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;7511:29:0;;;;;;;;;:38;;:48;;7553:6;;-1:-1:-1;7511:38:0;;-1:-1:-1;7511:48:0;;7553:6;;7511:48;:::i;:::-;;;;-1:-1:-1;;7719:61:0;;-1:-1:-1;;;7719:61:0;;-1:-1:-1;;;;;2704:32:5;;;7719:61:0;;;2686:51:5;7679:37:0;;7719:5;:27;;;;;;2659:18:5;;7719:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7679:101;;7790:34;7891:4;7881:6;7828:14;:50;;;:59;;;;;;:::i;:::-;7827:68;;;;:::i;:::-;7790:105;;7905:17;7925:5;-1:-1:-1;;;;;7925:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7905:37;;7952:25;7987:10;7952:46;;8008:23;8034:18;-1:-1:-1;;;;;8034:27:0;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8008:55;-1:-1:-1;8073:28:0;8173:9;8146:23;8008:55;8146:2;:23;:::i;:::-;8105:64;;:26;:64;:::i;:::-;8104:78;;;;:::i;:::-;8298:134;;-1:-1:-1;;;8298:134:0;;8073:109;;-1:-1:-1;;;;;;8298:5:0;:18;;;;:134;;8330:10;;;;8378;;8073:109;;8298:134;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8492:20;8442:10;:22;8453:10;-1:-1:-1;;;;;8442:22:0;-1:-1:-1;;;;;8442:22:0;;;;;;;;;;;;:29;8465:5;-1:-1:-1;;;;;8442:29:0;-1:-1:-1;;;;;8442:29:0;;;;;;;;;;;;:46;;;:70;;;;;;;:::i;:::-;;;;-1:-1:-1;;8527:37:0;;12982:25:5;;;-1:-1:-1;;;;;8527:37:0;;;8534:10;;8527:37;;12970:2:5;12955:18;8527:37:0;;;;;;;6997:1574;;;;;;;;6938:1633;;:::o;6147:540::-;-1:-1:-1;;;;;6273:21:0;;;;;;:55;;;6307:5;-1:-1:-1;;;;;6307:19:0;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6298:6;:30;6273:55;6252:126;;;;-1:-1:-1;;;6252:126:0;;13220:2:5;6252:126:0;;;13202:21:5;13259:2;13239:18;;;13232:30;13298:26;13278:18;;;13271:54;13342:18;;6252:126:0;13018:348:5;6252:126:0;6388:17;6408:5;-1:-1:-1;;;;;6408:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6507:61;;-1:-1:-1;;;6507:61:0;;6388:37;;-1:-1:-1;;;;;;6507:5:0;:18;;;;:61;;6526:10;;;;6388:37;;6561:6;;6507:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6589:10:0;6578:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;6578:29:0;;;;;;;;;:38;;:48;;6620:6;;-1:-1:-1;6578:38:0;;-1:-1:-1;6578:48:0;;6620:6;;6578:48;:::i;:::-;;;;-1:-1:-1;;6641:39:0;;12982:25:5;;;-1:-1:-1;;;;;6641:39:0;;;6650:10;;6641:39;;12970:2:5;12955:18;6641:39:0;;;;;;;;6207:480;6147:540;;:::o;3959:1972::-;-1:-1:-1;;;;;4143:21:0;;;;;;:67;;-1:-1:-1;;;;;;4184:26:0;;;;4143:67;:106;;;;;4244:5;-1:-1:-1;;;;;4230:19:0;:10;-1:-1:-1;;;;;4230:19:0;;;4143:106;:136;;;;;4278:1;4269:6;:10;4143:136;4122:210;;;;-1:-1:-1;;;4122:210:0;;13703:2:5;4122:210:0;;;13685:21:5;13742:2;13722:18;;;13715:30;13781:29;13761:18;;;13754:57;13828:18;;4122:210:0;13501:351:5;4122:210:0;4470:10;4511:3;4459:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;4459:29:0;;;;;;;;;;:40;;4455:1400;;4664:115;;-1:-1:-1;;;;;2704:32:5;;4664:115:0;;;2686:51:5;4641:20:0;;2659:18:5;;4664:115:0;;;-1:-1:-1;;4664:115:0;;;;;;;;;;;;;;-1:-1:-1;;;;;4664:115:0;-1:-1:-1;;;4664:115:0;;;4812:34;4664:115;;-1:-1:-1;;;;;;;;4820:5:0;4812:25;;:34;;4664:115;;4812:34;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4793:53;;;4868:7;4860:64;;;;-1:-1:-1;;;4860:64:0;;14351:2:5;4860:64:0;;;14333:21:5;14390:2;14370:18;;;14363:30;14429:34;14409:18;;;14402:62;-1:-1:-1;;;14480:18:5;;;14473:42;14532:19;;4860:64:0;14149:408:5;4860:64:0;5017:60;;-1:-1:-1;;;5017:60:0;;-1:-1:-1;;;;;5017:5:0;:16;;;;:60;;5034:10;;;;5058;;5070:6;;5017:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5157:141:0;;;;;;;;-1:-1:-1;;;;;5157:141:0;;;;;;;;;;;;-1:-1:-1;5157:141:0;;;;;;5323:10;5312:22;;:10;:22;;;;;;:29;;;;;;;;;;;:41;;;;-1:-1:-1;;;;;;5312:41:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4455:1400:0;;-1:-1:-1;;;4455:1400:0;;5509:10;5498:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;5498:29:0;;;;;;;;;;:40;;;:54;;;;5473:148;;;;-1:-1:-1;;;5473:148:0;;14764:2:5;5473:148:0;;;14746:21:5;14803:2;14783:18;;;14776:30;14842:34;14822:18;;;14815:62;-1:-1:-1;;;14893:18:5;;;14886:33;14936:19;;5473:148:0;14562:399:5;5473:148:0;5714:60;;-1:-1:-1;;;5714:60:0;;-1:-1:-1;;;;;5714:5:0;:16;;;;:60;;5731:10;;;;5755;;5767:6;;5714:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5799:10:0;5788:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;5788:29:0;;;;;;;;;:46;:56;;5838:6;;-1:-1:-1;5788:46:0;;-1:-1:-1;5788:56:0;;5838:6;;5788:56;:::i;:::-;;;;-1:-1:-1;;4455:1400:0;5869:55;;;-1:-1:-1;;;;;15158:32:5;;;15140:51;;15222:2;15207:18;;15200:34;;;5869:55:0;;;5886:10;;5869:55;;15113:18:5;5869:55:0;14966:274:5;14:131;-1:-1:-1;;;;;89:31:5;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:127::-;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:275;353:2;347:9;418:2;399:13;;-1:-1:-1;;395:27:5;383:40;;453:18;438:34;;474:22;;;435:62;432:88;;;500:18;;:::i;:::-;536:2;529:22;282:275;;-1:-1:-1;282:275:5:o;562:1178::-;667:6;675;683;691;699;752:3;740:9;731:7;727:23;723:33;720:53;;;769:1;766;759:12;720:53;808:9;795:23;827:31;852:5;827:31;:::i;:::-;877:5;-1:-1:-1;901:2:5;940:18;;;927:32;968:33;927:32;968:33;:::i;:::-;1020:7;-1:-1:-1;1074:2:5;1059:18;;1046:32;;-1:-1:-1;1129:2:5;1114:18;;1101:32;1152:18;1182:14;;;1179:34;;;1209:1;1206;1199:12;1179:34;1247:6;1236:9;1232:22;1222:32;;1292:7;1285:4;1281:2;1277:13;1273:27;1263:55;;1314:1;1311;1304:12;1263:55;1350:2;1337:16;1372:2;1368;1365:10;1362:36;;;1378:18;;:::i;:::-;1420:53;1463:2;1444:13;;-1:-1:-1;;1440:27:5;1436:36;;1420:53;:::i;:::-;1407:66;;1496:2;1489:5;1482:17;1536:7;1531:2;1526;1522;1518:11;1514:20;1511:33;1508:53;;;1557:1;1554;1547:12;1508:53;1612:2;1607;1603;1599:11;1594:2;1587:5;1583:14;1570:45;1656:1;1635:14;;;1631:23;;;1624:34;;;;-1:-1:-1;562:1178:5;;;;-1:-1:-1;562:1178:5;;1729:3;1714:19;1701:33;;562:1178;-1:-1:-1;;562:1178:5:o;1745:315::-;1813:6;1821;1874:2;1862:9;1853:7;1849:23;1845:32;1842:52;;;1890:1;1887;1880:12;1842:52;1929:9;1916:23;1948:31;1973:5;1948:31;:::i;:::-;1998:5;2050:2;2035:18;;;;2022:32;;-1:-1:-1;;;1745:315:5:o;2065:456::-;2142:6;2150;2158;2211:2;2199:9;2190:7;2186:23;2182:32;2179:52;;;2227:1;2224;2217:12;2179:52;2266:9;2253:23;2285:31;2310:5;2285:31;:::i;:::-;2335:5;-1:-1:-1;2392:2:5;2377:18;;2364:32;2405:33;2364:32;2405:33;:::i;:::-;2065:456;;2457:7;;-1:-1:-1;;;2511:2:5;2496:18;;;;2483:32;;2065:456::o;3109:380::-;3188:1;3184:12;;;;3231;;;3252:61;;3306:4;3298:6;3294:17;3284:27;;3252:61;3359:2;3351:6;3348:14;3328:18;3325:38;3322:161;;3405:10;3400:3;3396:20;3393:1;3386:31;3440:4;3437:1;3430:15;3468:4;3465:1;3458:15;3322:161;;3109:380;;;:::o;3620:545::-;3722:2;3717:3;3714:11;3711:448;;;3758:1;3783:5;3779:2;3772:17;3828:4;3824:2;3814:19;3898:2;3886:10;3882:19;3879:1;3875:27;3869:4;3865:38;3934:4;3922:10;3919:20;3916:47;;;-1:-1:-1;3957:4:5;3916:47;4012:2;4007:3;4003:12;4000:1;3996:20;3990:4;3986:31;3976:41;;4067:82;4085:2;4078:5;4075:13;4067:82;;;4130:17;;;4111:1;4100:13;4067:82;;;4071:3;;;3711:448;3620:545;;;:::o;4341:1352::-;4467:3;4461:10;4494:18;4486:6;4483:30;4480:56;;;4516:18;;:::i;:::-;4545:97;4635:6;4595:38;4627:4;4621:11;4595:38;:::i;:::-;4589:4;4545:97;:::i;:::-;4697:4;;4761:2;4750:14;;4778:1;4773:663;;;;5480:1;5497:6;5494:89;;;-1:-1:-1;5549:19:5;;;5543:26;5494:89;-1:-1:-1;;4298:1:5;4294:11;;;4290:24;4286:29;4276:40;4322:1;4318:11;;;4273:57;5596:81;;4743:944;;4773:663;3567:1;3560:14;;;3604:4;3591:18;;-1:-1:-1;;4809:20:5;;;4927:236;4941:7;4938:1;4935:14;4927:236;;;5030:19;;;5024:26;5009:42;;5122:27;;;;5090:1;5078:14;;;;4957:19;;4927:236;;;4931:3;5191:6;5182:7;5179:19;5176:201;;;5252:19;;;5246:26;-1:-1:-1;;5335:1:5;5331:14;;;5347:3;5327:24;5323:37;5319:42;5304:58;5289:74;;5176:201;-1:-1:-1;;;;;5423:1:5;5407:14;;;5403:22;5390:36;;-1:-1:-1;4341:1352:5:o;6056:250::-;6141:1;6151:113;6165:6;6162:1;6159:13;6151:113;;;6241:11;;;6235:18;6222:11;;;6215:39;6187:2;6180:10;6151:113;;;-1:-1:-1;;6298:1:5;6280:16;;6273:27;6056:250::o;6311:639::-;6573:1;6569;6564:3;6560:11;6556:19;6548:6;6544:32;6533:9;6526:51;6613:6;6608:2;6597:9;6593:18;6586:34;6656:3;6651:2;6640:9;6636:18;6629:31;6507:4;6689:6;6683:13;6733:6;6727:3;6716:9;6712:19;6705:35;6749:80;6822:6;6816:3;6805:9;6801:19;6796:2;6788:6;6784:15;6749:80;:::i;:::-;6932:2;6917:18;;6910:34;;;;-1:-1:-1;6890:2:5;6869:15;;;;-1:-1:-1;;6865:29:5;6850:45;6897:3;6846:55;;6311:639;-1:-1:-1;;;6311:639:5:o;7665:138::-;7744:13;;7766:31;7744:13;7766:31;:::i;:::-;7665:138;;;:::o;7808:251::-;7878:6;7931:2;7919:9;7910:7;7906:23;7902:32;7899:52;;;7947:1;7944;7937:12;7899:52;7979:9;7973:16;7998:31;8023:5;7998:31;:::i;:::-;8048:5;7808:251;-1:-1:-1;;;7808:251:5:o;8064:456::-;-1:-1:-1;;;;;8351:15:5;;;8333:34;;8403:15;;;8398:2;8383:18;;8376:43;8455:15;;8450:2;8435:18;;8428:43;8502:2;8487:18;;8480:34;;;;8282:3;8267:19;;8064:456::o;8525:127::-;8586:10;8581:3;8577:20;8574:1;8567:31;8617:4;8614:1;8607:15;8641:4;8638:1;8631:15;8657:128;8724:9;;;8745:11;;;8742:37;;;8759:18;;:::i;:::-;8657:128;;;;:::o;8998:160::-;9075:13;;9128:4;9117:16;;9107:27;;9097:55;;9148:1;9145;9138:12;9163:175;9241:13;;9294:18;9283:30;;9273:41;;9263:69;;9328:1;9325;9318:12;9343:192;9422:13;;9475:34;9464:46;;9454:57;;9444:85;;9525:1;9522;9515:12;9540:1115;9636:6;9667:3;9711:2;9699:9;9690:7;9686:23;9682:32;9679:52;;;9727:1;9724;9717:12;9679:52;9760:2;9754:9;9790:15;;;;9835:18;9820:34;;9856:22;;;9817:62;9814:88;;;9882:18;;:::i;:::-;9922:10;9918:2;9911:22;9957:38;9985:9;9957:38;:::i;:::-;9949:6;9942:54;10039:2;10028:9;10024:18;10018:25;10005:38;;10052:31;10077:5;10052:31;:::i;:::-;10116:5;10111:2;10103:6;10099:15;10092:30;10155:49;10200:2;10189:9;10185:18;10155:49;:::i;:::-;10150:2;10142:6;10138:15;10131:74;10238:48;10282:2;10271:9;10267:18;10238:48;:::i;:::-;10233:2;10225:6;10221:15;10214:73;10321:49;10365:3;10354:9;10350:19;10321:49;:::i;:::-;10315:3;10307:6;10303:16;10296:75;10405:49;10449:3;10438:9;10434:19;10405:49;:::i;:::-;10399:3;10391:6;10387:16;10380:75;10489:49;10533:3;10522:9;10518:19;10489:49;:::i;:::-;10483:3;10475:6;10471:16;10464:75;10573:50;10618:3;10607:9;10603:19;10573:50;:::i;:::-;10567:3;10555:16;;10548:76;10559:6;9540:1115;-1:-1:-1;;;;9540:1115:5:o;10660:168::-;10700:7;10766:1;10762;10758:6;10754:14;10751:1;10748:21;10743:1;10736:9;10729:17;10725:45;10722:71;;;10773:18;;:::i;:::-;-1:-1:-1;10813:9:5;;10660:168::o;10833:217::-;10873:1;10899;10889:132;;10943:10;10938:3;10934:20;10931:1;10924:31;10978:4;10975:1;10968:15;11006:4;11003:1;10996:15;10889:132;-1:-1:-1;11035:9:5;;10833:217::o;11055:184::-;11125:6;11178:2;11166:9;11157:7;11153:23;11149:32;11146:52;;;11194:1;11191;11184:12;11146:52;-1:-1:-1;11217:16:5;;11055:184;-1:-1:-1;11055:184:5:o;11244:204::-;11312:6;11365:2;11353:9;11344:7;11340:23;11336:32;11333:52;;;11381:1;11378;11371:12;11333:52;11404:38;11432:9;11404:38;:::i;11453:422::-;11542:1;11585:5;11542:1;11599:270;11620:7;11610:8;11607:21;11599:270;;;11679:4;11675:1;11671:6;11667:17;11661:4;11658:27;11655:53;;;11688:18;;:::i;:::-;11738:7;11728:8;11724:22;11721:55;;;11758:16;;;;11721:55;11837:22;;;;11797:15;;;;11599:270;;;11603:3;11453:422;;;;;:::o;11880:806::-;11929:5;11959:8;11949:80;;-1:-1:-1;12000:1:5;12014:5;;11949:80;12048:4;12038:76;;-1:-1:-1;12085:1:5;12099:5;;12038:76;12130:4;12148:1;12143:59;;;;12216:1;12211:130;;;;12123:218;;12143:59;12173:1;12164:10;;12187:5;;;12211:130;12248:3;12238:8;12235:17;12232:43;;;12255:18;;:::i;:::-;-1:-1:-1;;12311:1:5;12297:16;;12326:5;;12123:218;;12425:2;12415:8;12412:16;12406:3;12400:4;12397:13;12393:36;12387:2;12377:8;12374:16;12369:2;12363:4;12360:12;12356:35;12353:77;12350:159;;;-1:-1:-1;12462:19:5;;;12494:5;;12350:159;12541:34;12566:8;12560:4;12541:34;:::i;:::-;12611:6;12607:1;12603:6;12599:19;12590:7;12587:32;12584:58;;;12622:18;;:::i;:::-;12660:20;;11880:806;-1:-1:-1;;;11880:806:5:o;12691:140::-;12749:5;12778:47;12819:4;12809:8;12805:19;12799:4;12778:47;:::i;13371:125::-;13436:9;;;13457:10;;;13454:36;;;13470:18;;:::i;13857:287::-;13986:3;14024:6;14018:13;14040:66;14099:6;14094:3;14087:4;14079:6;14075:17;14040:66;:::i;:::-;14122:16;;;;;13857:287;-1:-1:-1;;13857:287:5:o",
  "source": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.16;\n\nimport \"./interfaces/Bond.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/CometInterface.sol\";\nimport \"./interfaces/VerifiedMarketsInterface.sol\";\n\n/**\n * @title Verified Markets\n * @notice A Compound III operator to enable staking of collateral for real world assets to Compound.\n * @author Kallol Borah\n */\ncontract VerifiedMarkets {\n    /// @notice The Comet contract\n    Comet public immutable comet;\n\n    //mapping issuer to RWA to bond\n    mapping(address => mapping(address => RWA.Asset)) private assets; //only one Asset(bond) per user => RWA\n\n    //mapping issuer to RWA to collateral\n    mapping(address => mapping(address => RWA.Collateral)) private guarantees; //only one collateral per user => RWA\n\n    //events\n    event NewRWA(\n        address indexed issuer,\n        address indexed asset,\n        address bond,\n        uint256 apy,\n        string issuingDocs,\n        uint256 faceValue\n    );\n    event PostedCollateral(\n        address indexed issuer,\n        address indexed asset,\n        address collateral,\n        uint256 amount\n    );\n    event Borrowed(\n        address indexed borrower,\n        address indexed base,\n        uint256 amount\n    );\n    event Repaid(\n        address indexed borrower,\n        address indexed base,\n        uint256 amount\n    );\n\n    /**\n     * @notice Construct a new operator.\n     * @param comet_ The Comet contract.\n     **/\n    constructor(address comet_) {\n        comet = Comet(comet_);\n    }\n\n    /**\n     * @notice RWA issuer submits asset details and bond issued that can be purchased to provide collateral to the RWA issuer\n     * @param asset       RWA for which bond is issued\n     * @param bond        bond token that is issued\n     * @param apy         interest rate paid on bond\n     * @param issuingDocs ipfs reference for RWA docs\n     * @param faceValue   par value of bond after discounting it with interest rate\n     **/\n    //Todo: should issuer be able to overwrite existing bond address tied to an assest???\n    function submitNewRWA(\n        address asset,\n        address bond,\n        uint256 apy,\n        string memory issuingDocs,\n        uint256 faceValue\n    ) external {\n        //verify submitNewRWA params\n        require(\n            asset != address(0x0) &&\n                bond != address(0x0) &&\n                bond != asset &&\n                apy > 0 &&\n                faceValue > 0,\n            \"RWA submission : Invalid request\"\n        );\n        // //verify bond's issuer is the caller\n        // require(\n        //     Bond(bond).getIssuer() == msg.sender,\n        //     \"RWA submission : Invalid issuer\"\n        // );\n        //if issuer has no RWA tied to this assest, create new RWA for the issuer's asset\n        if (assets[msg.sender][asset].bond == address(0x0)) {\n            RWA.Asset memory rwa = RWA.Asset({\n                bond: bond,\n                apy: apy,\n                issuingDocs: issuingDocs,\n                faceValue: faceValue\n            });\n            assets[msg.sender][asset] = rwa;\n        } else {\n            //issuer can only update/overwrite an existing RWA details\n            require(\n                assets[msg.sender][asset].bond == bond,\n                \"RWA submission : Invalid bond\"\n            );\n            assets[msg.sender][asset].apy = apy;\n            assets[msg.sender][asset].issuingDocs = issuingDocs;\n            assets[msg.sender][asset].faceValue = faceValue;\n        }\n        emit NewRWA(msg.sender, asset, bond, apy, issuingDocs, faceValue);\n    }\n\n    /**\n     * @notice Used by RWA issuer to post collateral used to buy bonds issued by it to borrow from Compound\n     * @param asset       RWA for which collateral is posted\n     * @param collateral  collateral used to buy bond issued by RWA issuer(must not be baseToken and must be accepted by comet)\n     * @param amount      amount of collateral posted\n     **/\n    function postCollateral(\n        address asset,\n        address collateral,\n        uint256 amount\n    ) external {\n        //verify postCollateral params\n        require(\n            asset != address(0x0) &&\n                collateral != address(0x0) &&\n                collateral != asset &&\n                amount > 0,\n            \"Posting Collateral: Invalid\"\n        );\n        //if issuer is posting collateral to the assest for first time, create new Collateral for user's assest;\n        if (guarantees[msg.sender][asset].collateral == address(0x0)) {\n            //verify getAssetInfoByAddress didn't revert for collateral(to filter out unaccepted collaterals)\n            bytes memory payload = abi.encodeWithSignature(\n                \"getAssetInfoByAddress(address)\",\n                collateral\n            );\n            (bool success, ) = address(comet).staticcall(payload);\n            require(success, \"Posting Collateral: Invalid collateral calll\");\n            //supply collateral on comet and verify supply cap is not breached\n            comet.supplyFrom(msg.sender, msg.sender, collateral, amount);\n            //create collateral\n            RWA.Collateral memory guarantee = RWA.Collateral({\n                collateral: collateral,\n                collateralAmount: amount,\n                borrowed: 0\n            });\n            guarantees[msg.sender][asset] = guarantee;\n        } else {\n            //issuer can only update/overwrite collateral amount for existing collateral\n            require(\n                guarantees[msg.sender][asset].collateral == collateral,\n                \"Post Collateral: Invalid collateral\"\n            );\n            //supply collateral on comet and verify supply cap is not breached\n            comet.supplyFrom(msg.sender, msg.sender, collateral, amount);\n            guarantees[msg.sender][asset].collateralAmount += amount;\n        }\n        emit PostedCollateral(msg.sender, asset, collateral, amount);\n    }\n\n    /**\n     * @notice Called by RWA issuer to to borrow base asset from Compound\n     * @param asset       RWA for which base asset is borrowed\n     * @param amount      amount of base asset borrowed\n     **/\n    function borrowBase(address asset, uint256 amount) external {\n        //verify borrowBase params\n        require(\n            asset != address(0x0) && amount > comet.baseBorrowMin(),\n            \"Borrowing base : Invalid\"\n        );\n        address baseToken = comet.baseToken();\n        //withdraw base from comet and check for non negative liquidity\n        comet.withdrawFrom(msg.sender, msg.sender, baseToken, amount);\n        guarantees[msg.sender][asset].borrowed += amount;\n        emit Borrowed(msg.sender, baseToken, amount);\n    }\n\n    /**\n     * @notice Called by RWA issuer to repay base asset to Compound and withdraw collateral posted earlier\n     * @param asset       RWA for which base asset is paid back\n     * @param amount      amount of base asset paid back\n     **/\n    function repayBase(address asset, uint256 amount) external {\n        //verify repayBase params\n        require(asset != address(0x0) && amount > 0, \"Repaying base : Invalid\");\n        //verify user has collateral to begin with\n        address collateral = guarantees[msg.sender][asset].collateral;\n        require(collateral != address(0x0), \"Repaying base : Invalid asset\");\n        //supply base on comet\n        address baseToken = comet.baseToken();\n        comet.supplyFrom(msg.sender, msg.sender, baseToken, amount);\n        //update issuer's borrowed amount\n        guarantees[msg.sender][asset].borrowed -= amount;\n        //calculate collateralAmount and downscale with 1e18(since borrowCollateralFactor is always % in wei)\n        Comet.AssetInfo memory collateralInfo = comet.getAssetInfoByAddress(\n            collateral\n        );\n        uint256 collateralToWithdrawInBase = (collateralInfo\n            .borrowCollateralFactor * amount) / 1e18;\n        uint256 baseScale = comet.baseScale();\n        IERC20 collateralContract = IERC20(collateral);\n        uint8 collateralDecmals = collateralContract.decimals();\n        uint256 collateralToWithdraw = (collateralToWithdrawInBase *\n            10 ** collateralDecmals) / baseScale; //amount in collateral decimals\n        //withdraw collateral from comet check for non negative liquidity\n        comet.withdrawFrom(\n            msg.sender,\n            msg.sender,\n            collateral,\n            collateralToWithdraw\n        );\n        guarantees[msg.sender][asset].collateralAmount -= collateralToWithdraw;\n        emit Repaid(msg.sender, baseToken, amount);\n    }\n}\n",
  "sourcePath": "/home/mohzcrea8me/Projects/Verified/verified-compound-markets/backend/contracts/VerifiedMarkets.sol",
  "ast": {
    "absolutePath": "project:/contracts/VerifiedMarkets.sol",
    "exportedSymbols": {
      "Bond": [
        639
      ],
      "Comet": [
        1251
      ],
      "IERC20": [
        1344
      ],
      "RWA": [
        1399
      ],
      "VerifiedMarkets": [
        567
      ]
    },
    "id": 568,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:0"
      },
      {
        "absolutePath": "project:/contracts/interfaces/Bond.sol",
        "file": "./interfaces/Bond.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 568,
        "sourceUnit": 640,
        "src": "63:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 568,
        "sourceUnit": 1345,
        "src": "95:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/CometInterface.sol",
        "file": "./interfaces/CometInterface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 568,
        "sourceUnit": 1252,
        "src": "129:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/VerifiedMarketsInterface.sol",
        "file": "./interfaces/VerifiedMarketsInterface.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 568,
        "sourceUnit": 1400,
        "src": "171:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "VerifiedMarkets",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "224:160:0",
          "text": " @title Verified Markets\n @notice A Compound III operator to enable staking of collateral for real world assets to Compound.\n @author Kallol Borah"
        },
        "fullyImplemented": true,
        "id": 567,
        "linearizedBaseContracts": [
          567
        ],
        "name": "VerifiedMarkets",
        "nameLocation": "394:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 7,
              "nodeType": "StructuredDocumentation",
              "src": "416:30:0",
              "text": "@notice The Comet contract"
            },
            "functionSelector": "ba3e9c12",
            "id": 10,
            "mutability": "immutable",
            "name": "comet",
            "nameLocation": "474:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "451:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Comet_$1251",
              "typeString": "contract Comet"
            },
            "typeName": {
              "id": 9,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8,
                "name": "Comet",
                "nameLocations": [
                  "451:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1251,
                "src": "451:5:0"
              },
              "referencedDeclaration": 1251,
              "src": "451:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Comet_$1251",
                "typeString": "contract Comet"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "assets",
            "nameLocation": "580:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "522:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct RWA.Asset))"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "530:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "522:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct RWA.Asset))"
              },
              "valueType": {
                "id": 15,
                "keyType": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "549:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "541:29:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$",
                  "typeString": "mapping(address => struct RWA.Asset)"
                },
                "valueType": {
                  "id": 14,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 13,
                    "name": "RWA.Asset",
                    "nameLocations": [
                      "560:3:0",
                      "564:5:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1355,
                    "src": "560:9:0"
                  },
                  "referencedDeclaration": 1355,
                  "src": "560:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Asset_$1355_storage_ptr",
                    "typeString": "struct RWA.Asset"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "guarantees",
            "nameLocation": "737:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "674:73:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct RWA.Collateral))"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "682:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "674:54:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct RWA.Collateral))"
              },
              "valueType": {
                "id": 22,
                "keyType": {
                  "id": 19,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "701:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "693:34:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$",
                  "typeString": "mapping(address => struct RWA.Collateral)"
                },
                "valueType": {
                  "id": 21,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 20,
                    "name": "RWA.Collateral",
                    "nameLocations": [
                      "712:3:0",
                      "716:10:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1362,
                    "src": "712:14:0"
                  },
                  "referencedDeclaration": 1362,
                  "src": "712:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collateral_$1362_storage_ptr",
                    "typeString": "struct RWA.Collateral"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "7c0346ec0308e754879b9eb61355f12e6d4469883179fb5774ad1c3d9a7313d0",
            "id": 38,
            "name": "NewRWA",
            "nameLocation": "811:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "843:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "827:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "875:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "859:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bond",
                  "nameLocation": "898:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "890:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "apy",
                  "nameLocation": "920:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "912:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "issuingDocs",
                  "nameLocation": "940:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "933:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "faceValue",
                  "nameLocation": "969:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "961:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "817:167:0"
            },
            "src": "805:180:0"
          },
          {
            "anonymous": false,
            "eventSelector": "6d9c01d2a1bfe391d97dad0c8485ad9eb8603cf2404ea70f733fe47b186a0f51",
            "id": 48,
            "name": "PostedCollateral",
            "nameLocation": "996:16:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "1038:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "1022:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1070:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "1054:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "1093:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "1085:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1121:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "1113:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:121:0"
            },
            "src": "990:144:0"
          },
          {
            "anonymous": false,
            "eventSelector": "3fc499aeb0bb1cb58b6de8b02b3f86f4e7394e9690bef0110e32ced8a5631045",
            "id": 56,
            "name": "Borrowed",
            "nameLocation": "1145:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "1179:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1163:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "1213:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1197:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1235:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1227:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1153:94:0"
            },
            "src": "1139:109:0"
          },
          {
            "anonymous": false,
            "eventSelector": "0a3fbbea70e93f2daafa3102f5c9a1b8315e6d7a1e43e4bc020bc1162327470a",
            "id": 64,
            "name": "Repaid",
            "nameLocation": "1259:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "1291:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1275:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "1325:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1309:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1347:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1339:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1265:94:0"
            },
            "src": "1253:107:0"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "1493:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70,
                      "name": "comet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1503:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Comet_$1251",
                        "typeString": "contract Comet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 72,
                          "name": "comet_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1517:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 71,
                        "name": "Comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "1511:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Comet_$1251_$",
                          "typeString": "type(contract Comet)"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1511:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Comet_$1251",
                        "typeString": "contract Comet"
                      }
                    },
                    "src": "1503:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Comet_$1251",
                      "typeString": "contract Comet"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1503:21:0"
                }
              ]
            },
            "documentation": {
              "id": 65,
              "nodeType": "StructuredDocumentation",
              "src": "1366:94:0",
              "text": " @notice Construct a new operator.\n @param comet_ The Comet contract.*"
            },
            "id": 77,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "comet_",
                  "nameLocation": "1485:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "1477:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1476:16:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:0:0"
            },
            "scope": 567,
            "src": "1465:66:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "2233:1352:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 92,
                                  "name": "asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80,
                                  "src": "2301:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "307830",
                                      "id": 95,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2318:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0x0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 94,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2310:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 93,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2310:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 96,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2310:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2301:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 98,
                                  "name": "bond",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82,
                                  "src": "2342:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "307830",
                                      "id": 101,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2358:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0x0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2350:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 99,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2350:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2350:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2342:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2301:61:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 105,
                                "name": "bond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "2382:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 106,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "2390:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2382:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2301:94:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 109,
                              "name": "apy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "2415:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2421:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2415:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2301:121:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 113,
                            "name": "faceValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "2442:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2454:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2442:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2301:154:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "525741207375626d697373696f6e203a20496e76616c69642072657175657374",
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac2d297c7b797b46238ca2df5d2a150e9ead54471c39a8a35a5a622a4d896f94",
                          "typeString": "literal_string \"RWA submission : Invalid request\""
                        },
                        "value": "RWA submission : Invalid request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac2d297c7b797b46238ca2df5d2a150e9ead54471c39a8a35a5a622a4d896f94",
                          "typeString": "literal_string \"RWA submission : Invalid request\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2280:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2280:233:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "2280:233:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 120,
                            "name": "assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "2801:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                            }
                          },
                          "id": 123,
                          "indexExpression": {
                            "expression": {
                              "id": 121,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2808:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2812:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2808:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2801:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$",
                            "typeString": "mapping(address => struct RWA.Asset storage ref)"
                          }
                        },
                        "id": 125,
                        "indexExpression": {
                          "id": 124,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "2820:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2801:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$1355_storage",
                          "typeString": "struct RWA.Asset storage ref"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2827:4:0",
                      "memberName": "bond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1348,
                      "src": "2801:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2843:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2835:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2835:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2835:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2801:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 198,
                    "nodeType": "Block",
                    "src": "3107:397:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 156,
                                      "name": "assets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17,
                                      "src": "3217:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$_$",
                                        "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                                      }
                                    },
                                    "id": 159,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 157,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "3224:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 158,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3228:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3224:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3217:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$",
                                      "typeString": "mapping(address => struct RWA.Asset storage ref)"
                                    }
                                  },
                                  "id": 161,
                                  "indexExpression": {
                                    "id": 160,
                                    "name": "asset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80,
                                    "src": "3236:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3217:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Asset_$1355_storage",
                                    "typeString": "struct RWA.Asset storage ref"
                                  }
                                },
                                "id": 162,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3243:4:0",
                                "memberName": "bond",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1348,
                                "src": "3217:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 163,
                                "name": "bond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "3251:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3217:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "525741207375626d697373696f6e203a20496e76616c696420626f6e64",
                              "id": 165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3273:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e9fe6b1aa35315a9eec2b928ae49567079ea3c7de0e41b220725a45640e39cbb",
                                "typeString": "literal_string \"RWA submission : Invalid bond\""
                              },
                              "value": "RWA submission : Invalid bond"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e9fe6b1aa35315a9eec2b928ae49567079ea3c7de0e41b220725a45640e39cbb",
                                "typeString": "literal_string \"RWA submission : Invalid bond\""
                              }
                            ],
                            "id": 155,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3192:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3192:126:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 167,
                        "nodeType": "ExpressionStatement",
                        "src": "3192:126:0"
                      },
                      {
                        "expression": {
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 168,
                                  "name": "assets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17,
                                  "src": "3332:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                                  }
                                },
                                "id": 172,
                                "indexExpression": {
                                  "expression": {
                                    "id": 169,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3339:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 170,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3343:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3339:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3332:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$",
                                  "typeString": "mapping(address => struct RWA.Asset storage ref)"
                                }
                              },
                              "id": 173,
                              "indexExpression": {
                                "id": 171,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "3351:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3332:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$1355_storage",
                                "typeString": "struct RWA.Asset storage ref"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3358:3:0",
                            "memberName": "apy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1350,
                            "src": "3332:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 175,
                            "name": "apy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "3364:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3332:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 177,
                        "nodeType": "ExpressionStatement",
                        "src": "3332:35:0"
                      },
                      {
                        "expression": {
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 178,
                                  "name": "assets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17,
                                  "src": "3381:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                                  }
                                },
                                "id": 182,
                                "indexExpression": {
                                  "expression": {
                                    "id": 179,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3388:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3392:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3388:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3381:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$",
                                  "typeString": "mapping(address => struct RWA.Asset storage ref)"
                                }
                              },
                              "id": 183,
                              "indexExpression": {
                                "id": 181,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "3400:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3381:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$1355_storage",
                                "typeString": "struct RWA.Asset storage ref"
                              }
                            },
                            "id": 184,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3407:11:0",
                            "memberName": "issuingDocs",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1352,
                            "src": "3381:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 185,
                            "name": "issuingDocs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "3421:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3381:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "3381:51:0"
                      },
                      {
                        "expression": {
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 188,
                                  "name": "assets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17,
                                  "src": "3446:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                                  }
                                },
                                "id": 192,
                                "indexExpression": {
                                  "expression": {
                                    "id": 189,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3453:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 190,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3457:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3453:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3446:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$",
                                  "typeString": "mapping(address => struct RWA.Asset storage ref)"
                                }
                              },
                              "id": 193,
                              "indexExpression": {
                                "id": 191,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "3465:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3446:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$1355_storage",
                                "typeString": "struct RWA.Asset storage ref"
                              }
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3472:9:0",
                            "memberName": "faceValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1354,
                            "src": "3446:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 195,
                            "name": "faceValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "3484:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3446:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 197,
                        "nodeType": "ExpressionStatement",
                        "src": "3446:47:0"
                      }
                    ]
                  },
                  "id": 199,
                  "nodeType": "IfStatement",
                  "src": "2797:707:0",
                  "trueBody": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "2849:252:0",
                    "statements": [
                      {
                        "assignments": [
                          136
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 136,
                            "mutability": "mutable",
                            "name": "rwa",
                            "nameLocation": "2880:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 154,
                            "src": "2863:20:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$1355_memory_ptr",
                              "typeString": "struct RWA.Asset"
                            },
                            "typeName": {
                              "id": 135,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 134,
                                "name": "RWA.Asset",
                                "nameLocations": [
                                  "2863:3:0",
                                  "2867:5:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1355,
                                "src": "2863:9:0"
                              },
                              "referencedDeclaration": 1355,
                              "src": "2863:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$1355_storage_ptr",
                                "typeString": "struct RWA.Asset"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 144,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 139,
                              "name": "bond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82,
                              "src": "2920:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 140,
                              "name": "apy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "2947:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 141,
                              "name": "issuingDocs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "2981:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 142,
                              "name": "faceValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "3021:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 137,
                              "name": "RWA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "2886:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_RWA_$1399_$",
                                "typeString": "type(contract RWA)"
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2890:5:0",
                            "memberName": "Asset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1355,
                            "src": "2886:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Asset_$1355_storage_ptr_$",
                              "typeString": "type(struct RWA.Asset storage pointer)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "2914:4:0",
                            "2942:3:0",
                            "2968:11:0",
                            "3010:9:0"
                          ],
                          "names": [
                            "bond",
                            "apy",
                            "issuingDocs",
                            "faceValue"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "2886:159:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Asset_$1355_memory_ptr",
                            "typeString": "struct RWA.Asset memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2863:182:0"
                      },
                      {
                        "expression": {
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 145,
                                "name": "assets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "3059:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct RWA.Asset storage ref))"
                                }
                              },
                              "id": 149,
                              "indexExpression": {
                                "expression": {
                                  "id": 146,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3066:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3070:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3066:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3059:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$1355_storage_$",
                                "typeString": "mapping(address => struct RWA.Asset storage ref)"
                              }
                            },
                            "id": 150,
                            "indexExpression": {
                              "id": 148,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "3078:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3059:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$1355_storage",
                              "typeString": "struct RWA.Asset storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 151,
                            "name": "rwa",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 136,
                            "src": "3087:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$1355_memory_ptr",
                              "typeString": "struct RWA.Asset memory"
                            }
                          },
                          "src": "3059:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Asset_$1355_storage",
                            "typeString": "struct RWA.Asset storage ref"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "3059:31:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 201,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3525:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3529:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3525:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 203,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "3537:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 204,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "3544:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 205,
                        "name": "apy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "3550:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 206,
                        "name": "issuingDocs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "3555:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 207,
                        "name": "faceValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3568:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 200,
                      "name": "NewRWA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3518:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,string memory,uint256)"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "EmitStatement",
                  "src": "3513:65:0"
                }
              ]
            },
            "documentation": {
              "id": 78,
              "nodeType": "StructuredDocumentation",
              "src": "1537:436:0",
              "text": " @notice RWA issuer submits asset details and bond issued that can be purchased to provide collateral to the RWA issuer\n @param asset       RWA for which bond is issued\n @param bond        bond token that is issued\n @param apy         interest rate paid on bond\n @param issuingDocs ipfs reference for RWA docs\n @param faceValue   par value of bond after discounting it with interest rate*"
            },
            "functionSelector": "100bf6eb",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitNewRWA",
            "nameLocation": "2077:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "2107:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2099:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2099:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "bond",
                  "nameLocation": "2130:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2122:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "apy",
                  "nameLocation": "2152:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2144:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "issuingDocs",
                  "nameLocation": "2179:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2165:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "faceValue",
                  "nameLocation": "2208:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2200:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2089:134:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2233:0:0"
            },
            "scope": 567,
            "src": "2068:1517:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "4073:1858:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 222,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 214,
                                "src": "4143:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "307830",
                                    "id": 225,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4160:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 224,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4152:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 223,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4152:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4152:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4143:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 228,
                                "name": "collateral",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "4184:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "307830",
                                    "id": 231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4206:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4198:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 229,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4198:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4198:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4184:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4143:67:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 235,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "4230:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 236,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "4244:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4230:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4143:106:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 239,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "4269:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4278:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4269:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4143:136:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f7374696e6720436f6c6c61746572616c3a20496e76616c6964",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4293:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3cf3a52794eca675bbfdc3c417dfc121ed781af513ea1dff09cb870ff5901776",
                          "typeString": "literal_string \"Posting Collateral: Invalid\""
                        },
                        "value": "Posting Collateral: Invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3cf3a52794eca675bbfdc3c417dfc121ed781af513ea1dff09cb870ff5901776",
                          "typeString": "literal_string \"Posting Collateral: Invalid\""
                        }
                      ],
                      "id": 221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4122:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4122:210:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "4122:210:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 246,
                            "name": "guarantees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "4459:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                            }
                          },
                          "id": 249,
                          "indexExpression": {
                            "expression": {
                              "id": 247,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4470:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4474:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4470:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4459:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$",
                            "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                          }
                        },
                        "id": 251,
                        "indexExpression": {
                          "id": 250,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "4482:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4459:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$1362_storage",
                          "typeString": "struct RWA.Collateral storage ref"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4489:10:0",
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1357,
                      "src": "4459:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4511:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4503:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4503:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4503:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4459:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 348,
                    "nodeType": "Block",
                    "src": "5370:485:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 315,
                                      "name": "guarantees",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24,
                                      "src": "5498:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$_$",
                                        "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                                      }
                                    },
                                    "id": 318,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 316,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "5509:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 317,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5513:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5509:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5498:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$",
                                      "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                                    }
                                  },
                                  "id": 320,
                                  "indexExpression": {
                                    "id": 319,
                                    "name": "asset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 214,
                                    "src": "5521:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5498:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Collateral_$1362_storage",
                                    "typeString": "struct RWA.Collateral storage ref"
                                  }
                                },
                                "id": 321,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5528:10:0",
                                "memberName": "collateral",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1357,
                                "src": "5498:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 322,
                                "name": "collateral",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "5542:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5498:54:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f737420436f6c6c61746572616c3a20496e76616c696420636f6c6c61746572616c",
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5570:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_394cd8b0c5d27701b415634dce667cd2b2a95d6403b5642b99bdba02cf0dac43",
                                "typeString": "literal_string \"Post Collateral: Invalid collateral\""
                              },
                              "value": "Post Collateral: Invalid collateral"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_394cd8b0c5d27701b415634dce667cd2b2a95d6403b5642b99bdba02cf0dac43",
                                "typeString": "literal_string \"Post Collateral: Invalid collateral\""
                              }
                            ],
                            "id": 314,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5473:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5473:148:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 326,
                        "nodeType": "ExpressionStatement",
                        "src": "5473:148:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 330,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5731:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5735:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5731:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 332,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5743:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5747:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5743:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 334,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "5755:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 335,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "5767:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 327,
                              "name": "comet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "5714:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Comet_$1251",
                                "typeString": "contract Comet"
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5720:10:0",
                            "memberName": "supplyFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 852,
                            "src": "5714:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256) external"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5714:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 337,
                        "nodeType": "ExpressionStatement",
                        "src": "5714:60:0"
                      },
                      {
                        "expression": {
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 338,
                                  "name": "guarantees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "5788:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                                  }
                                },
                                "id": 342,
                                "indexExpression": {
                                  "expression": {
                                    "id": 339,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "5799:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5803:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5799:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5788:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$",
                                  "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                                }
                              },
                              "id": 343,
                              "indexExpression": {
                                "id": 341,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 214,
                                "src": "5811:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5788:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Collateral_$1362_storage",
                                "typeString": "struct RWA.Collateral storage ref"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5818:16:0",
                            "memberName": "collateralAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1359,
                            "src": "5788:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 345,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "5838:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5788:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 347,
                        "nodeType": "ExpressionStatement",
                        "src": "5788:56:0"
                      }
                    ]
                  },
                  "id": 349,
                  "nodeType": "IfStatement",
                  "src": "4455:1400:0",
                  "trueBody": {
                    "id": 313,
                    "nodeType": "Block",
                    "src": "4517:847:0",
                    "statements": [
                      {
                        "assignments": [
                          259
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 259,
                            "mutability": "mutable",
                            "name": "payload",
                            "nameLocation": "4654:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 313,
                            "src": "4641:20:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 258,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4641:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 265,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "6765744173736574496e666f427941646472657373286164647265737329",
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4705:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b3bec2eec585401fd01bfff80e24a34a675b84e266c773f816b99d876fcf777",
                                "typeString": "literal_string \"getAssetInfoByAddress(address)\""
                              },
                              "value": "getAssetInfoByAddress(address)"
                            },
                            {
                              "id": 263,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "4755:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3b3bec2eec585401fd01bfff80e24a34a675b84e266c773f816b99d876fcf777",
                                "typeString": "literal_string \"getAssetInfoByAddress(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 260,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "4664:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4668:19:0",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "4664:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4664:115:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4641:138:0"
                      },
                      {
                        "assignments": [
                          267,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 267,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4799:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 313,
                            "src": "4794:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 266,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4794:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 275,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 273,
                              "name": "payload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "4838:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 270,
                                  "name": "comet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "4820:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Comet_$1251",
                                    "typeString": "contract Comet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Comet_$1251",
                                    "typeString": "contract Comet"
                                  }
                                ],
                                "id": 269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4812:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 268,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4812:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4812:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4827:10:0",
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "4812:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4812:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4793:53:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 277,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "4868:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f7374696e6720436f6c6c61746572616c3a20496e76616c696420636f6c6c61746572616c2063616c6c6c",
                              "id": 278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4877:46:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_44031d7fe2f5fdcc90cdb121670a2c2a30e70f72d7155daa41d48b1b73f2f313",
                                "typeString": "literal_string \"Posting Collateral: Invalid collateral calll\""
                              },
                              "value": "Posting Collateral: Invalid collateral calll"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_44031d7fe2f5fdcc90cdb121670a2c2a30e70f72d7155daa41d48b1b73f2f313",
                                "typeString": "literal_string \"Posting Collateral: Invalid collateral calll\""
                              }
                            ],
                            "id": 276,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4860:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4860:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 280,
                        "nodeType": "ExpressionStatement",
                        "src": "4860:64:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 284,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5034:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5038:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5034:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 286,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5046:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5050:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5046:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 288,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "5058:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 289,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "5070:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 281,
                              "name": "comet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "5017:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Comet_$1251",
                                "typeString": "contract Comet"
                              }
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5023:10:0",
                            "memberName": "supplyFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 852,
                            "src": "5017:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256) external"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5017:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 291,
                        "nodeType": "ExpressionStatement",
                        "src": "5017:60:0"
                      },
                      {
                        "assignments": [
                          296
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 296,
                            "mutability": "mutable",
                            "name": "guarantee",
                            "nameLocation": "5145:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 313,
                            "src": "5123:31:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$1362_memory_ptr",
                              "typeString": "struct RWA.Collateral"
                            },
                            "typeName": {
                              "id": 295,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 294,
                                "name": "RWA.Collateral",
                                "nameLocations": [
                                  "5123:3:0",
                                  "5127:10:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1362,
                                "src": "5123:14:0"
                              },
                              "referencedDeclaration": 1362,
                              "src": "5123:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Collateral_$1362_storage_ptr",
                                "typeString": "struct RWA.Collateral"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 303,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 299,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "5202:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 300,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "5248:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5282:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 297,
                              "name": "RWA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "5157:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_RWA_$1399_$",
                                "typeString": "type(contract RWA)"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5161:10:0",
                            "memberName": "Collateral",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1362,
                            "src": "5157:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Collateral_$1362_storage_ptr_$",
                              "typeString": "type(struct RWA.Collateral storage pointer)"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "5190:10:0",
                            "5230:16:0",
                            "5272:8:0"
                          ],
                          "names": [
                            "collateral",
                            "collateralAmount",
                            "borrowed"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "5157:141:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collateral_$1362_memory_ptr",
                            "typeString": "struct RWA.Collateral memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5123:175:0"
                      },
                      {
                        "expression": {
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 304,
                                "name": "guarantees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "5312:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                                }
                              },
                              "id": 308,
                              "indexExpression": {
                                "expression": {
                                  "id": 305,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5323:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5327:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5323:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5312:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$",
                                "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                              }
                            },
                            "id": 309,
                            "indexExpression": {
                              "id": 307,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "5335:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5312:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$1362_storage",
                              "typeString": "struct RWA.Collateral storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 310,
                            "name": "guarantee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "5344:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$1362_memory_ptr",
                              "typeString": "struct RWA.Collateral memory"
                            }
                          },
                          "src": "5312:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collateral_$1362_storage",
                            "typeString": "struct RWA.Collateral storage ref"
                          }
                        },
                        "id": 312,
                        "nodeType": "ExpressionStatement",
                        "src": "5312:41:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5886:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5890:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5886:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 353,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "5898:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 354,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "5905:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 355,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "5917:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 350,
                      "name": "PostedCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "5869:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5869:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "EmitStatement",
                  "src": "5864:60:0"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "3591:363:0",
              "text": " @notice Used by RWA issuer to post collateral used to buy bonds issued by it to borrow from Compound\n @param asset       RWA for which collateral is posted\n @param collateral  collateral used to buy bond issued by RWA issuer(must not be baseToken and must be accepted by comet)\n @param amount      amount of collateral posted*"
            },
            "functionSelector": "a4bcec59",
            "id": 359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postCollateral",
            "nameLocation": "3968:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "4000:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "3992:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3992:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "4023:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "4015:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4015:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4051:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "4043:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4043:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3982:81:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4073:0:0"
            },
            "scope": 567,
            "src": "3959:1972:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "6207:480:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 368,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "6273:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "307830",
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6290:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0x0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6282:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 369,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6282:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6282:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6273:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 374,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "6298:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 375,
                                "name": "comet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "6307:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Comet_$1251",
                                  "typeString": "contract Comet"
                                }
                              },
                              "id": 376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6313:13:0",
                              "memberName": "baseBorrowMin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1215,
                              "src": "6307:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6307:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6298:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6273:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f72726f77696e672062617365203a20496e76616c6964",
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6342:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_776e4b134377506232128ec017a3f81b7644fa05c0eddc361a8bdbbe6aaf13f6",
                          "typeString": "literal_string \"Borrowing base : Invalid\""
                        },
                        "value": "Borrowing base : Invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_776e4b134377506232128ec017a3f81b7644fa05c0eddc361a8bdbbe6aaf13f6",
                          "typeString": "literal_string \"Borrowing base : Invalid\""
                        }
                      ],
                      "id": 367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6252:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6252:126:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "6252:126:0"
                },
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "baseToken",
                      "nameLocation": "6396:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 417,
                      "src": "6388:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6388:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 388,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 385,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "6408:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1251",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6414:9:0",
                      "memberName": "baseToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1115,
                      "src": "6408:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6408:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6388:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 392,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6526:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6530:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6526:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 394,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6538:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6542:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6538:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 396,
                        "name": "baseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "6550:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 397,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "6561:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 389,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "6507:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1251",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6513:12:0",
                      "memberName": "withdrawFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 919,
                      "src": "6507:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6507:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "6507:61:0"
                },
                {
                  "expression": {
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 400,
                            "name": "guarantees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "6578:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                            }
                          },
                          "id": 404,
                          "indexExpression": {
                            "expression": {
                              "id": 401,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6589:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6593:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6589:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6578:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$",
                            "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                          }
                        },
                        "id": 405,
                        "indexExpression": {
                          "id": 403,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 362,
                          "src": "6601:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6578:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$1362_storage",
                          "typeString": "struct RWA.Collateral storage ref"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6608:8:0",
                      "memberName": "borrowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "6578:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 407,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "6620:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6578:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "6578:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 411,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6650:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6654:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6650:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 413,
                        "name": "baseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "6662:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 414,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "6673:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 410,
                      "name": "Borrowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "6641:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6641:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "EmitStatement",
                  "src": "6636:44:0"
                }
              ]
            },
            "documentation": {
              "id": 360,
              "nodeType": "StructuredDocumentation",
              "src": "5937:205:0",
              "text": " @notice Called by RWA issuer to to borrow base asset from Compound\n @param asset       RWA for which base asset is borrowed\n @param amount      amount of base asset borrowed*"
            },
            "functionSelector": "59a8ab58",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowBase",
            "nameLocation": "6156:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "6175:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "6167:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6167:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6190:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "6182:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6182:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6166:31:0"
            },
            "returnParameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6207:0:0"
            },
            "scope": 567,
            "src": "6147:540:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "6997:1574:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 427,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "7049:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "307830",
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7066:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0x0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7058:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 428,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7058:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7058:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7049:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 433,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "7074:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7083:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7074:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7049:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265706179696e672062617365203a20496e76616c6964",
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7086:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e16f45ca0b8574ba9a0f101e7dde34ccb7c3ffff9b592faacbc2b34b38c771",
                          "typeString": "literal_string \"Repaying base : Invalid\""
                        },
                        "value": "Repaying base : Invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e16f45ca0b8574ba9a0f101e7dde34ccb7c3ffff9b592faacbc2b34b38c771",
                          "typeString": "literal_string \"Repaying base : Invalid\""
                        }
                      ],
                      "id": 426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7041:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7041:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "7041:71:0"
                },
                {
                  "assignments": [
                    441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 441,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "7181:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 565,
                      "src": "7173:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 440,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7173:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 449,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 442,
                          "name": "guarantees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "7194:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                          }
                        },
                        "id": 445,
                        "indexExpression": {
                          "expression": {
                            "id": 443,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7205:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7209:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7205:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7194:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$",
                          "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                        }
                      },
                      "id": 447,
                      "indexExpression": {
                        "id": 446,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "7217:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7194:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$1362_storage",
                        "typeString": "struct RWA.Collateral storage ref"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7224:10:0",
                    "memberName": "collateral",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1357,
                    "src": "7194:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7173:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 451,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "7252:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7274:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7266:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 452,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7266:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7266:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7252:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265706179696e672062617365203a20496e76616c6964206173736574",
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7280:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e61ebccde49c8c0954cc71125a1488a73aaf4b8a1ca76a62e1dae9ffd56e5f08",
                          "typeString": "literal_string \"Repaying base : Invalid asset\""
                        },
                        "value": "Repaying base : Invalid asset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e61ebccde49c8c0954cc71125a1488a73aaf4b8a1ca76a62e1dae9ffd56e5f08",
                          "typeString": "literal_string \"Repaying base : Invalid asset\""
                        }
                      ],
                      "id": 450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7244:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7244:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "7244:68:0"
                },
                {
                  "assignments": [
                    461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 461,
                      "mutability": "mutable",
                      "name": "baseToken",
                      "nameLocation": "7361:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 565,
                      "src": "7353:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 460,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7353:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 465,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 462,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "7373:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1251",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7379:9:0",
                      "memberName": "baseToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1115,
                      "src": "7373:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7373:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7353:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 469,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7417:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7421:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7417:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 471,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7429:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7433:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7429:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 473,
                        "name": "baseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "7441:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 474,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "7452:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 466,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "7400:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1251",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7406:10:0",
                      "memberName": "supplyFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 852,
                      "src": "7400:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7400:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "7400:59:0"
                },
                {
                  "expression": {
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 477,
                            "name": "guarantees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "7511:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                            }
                          },
                          "id": 481,
                          "indexExpression": {
                            "expression": {
                              "id": 478,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7522:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7526:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7522:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7511:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$",
                            "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                          }
                        },
                        "id": 482,
                        "indexExpression": {
                          "id": 480,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "7534:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7511:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$1362_storage",
                          "typeString": "struct RWA.Collateral storage ref"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7541:8:0",
                      "memberName": "borrowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "7511:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 484,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "7553:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7511:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "7511:48:0"
                },
                {
                  "assignments": [
                    491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 491,
                      "mutability": "mutable",
                      "name": "collateralInfo",
                      "nameLocation": "7702:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 565,
                      "src": "7679:37:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssetInfo_$716_memory_ptr",
                        "typeString": "struct Comet.AssetInfo"
                      },
                      "typeName": {
                        "id": 490,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 489,
                          "name": "Comet.AssetInfo",
                          "nameLocations": [
                            "7679:5:0",
                            "7685:9:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 716,
                          "src": "7679:15:0"
                        },
                        "referencedDeclaration": 716,
                        "src": "7679:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetInfo_$716_storage_ptr",
                          "typeString": "struct Comet.AssetInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 494,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "7760:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 492,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "7719:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1251",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7725:21:0",
                      "memberName": "getAssetInfoByAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 979,
                      "src": "7719:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_AssetInfo_$716_memory_ptr_$",
                        "typeString": "function (address) view external returns (struct Comet.AssetInfo memory)"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7719:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetInfo_$716_memory_ptr",
                      "typeString": "struct Comet.AssetInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7679:101:0"
                },
                {
                  "assignments": [
                    498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 498,
                      "mutability": "mutable",
                      "name": "collateralToWithdrawInBase",
                      "nameLocation": "7798:26:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 565,
                      "src": "7790:34:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 497,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7790:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 506,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 499,
                              "name": "collateralInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "7828:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AssetInfo_$716_memory_ptr",
                                "typeString": "struct Comet.AssetInfo memory"
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7856:22:0",
                            "memberName": "borrowCollateralFactor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 709,
                            "src": "7828:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 501,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "7881:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7828:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 503,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7827:61:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7891:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "7827:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7790:105:0"
                },
                {
                  "assignments": [
                    508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 508,
                      "mutability": "mutable",
                      "name": "baseScale",
                      "nameLocation": "7913:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 565,
                      "src": "7905:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7905:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 512,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 509,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "7925:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1251",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7931:9:0",
                      "memberName": "baseScale",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1185,
                      "src": "7925:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7925:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7905:37:0"
                },
                {
                  "assignments": [
                    515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 515,
                      "mutability": "mutable",
                      "name": "collateralContract",
                      "nameLocation": "7959:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 565,
                      "src": "7952:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1344",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 514,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 513,
                          "name": "IERC20",
                          "nameLocations": [
                            "7952:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1344,
                          "src": "7952:6:0"
                        },
                        "referencedDeclaration": 1344,
                        "src": "7952:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 519,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 517,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "7987:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 516,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1344,
                      "src": "7980:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1344_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7980:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1344",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7952:46:0"
                },
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "collateralDecmals",
                      "nameLocation": "8014:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 565,
                      "src": "8008:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "8008:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 525,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 522,
                        "name": "collateralContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "8034:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8053:8:0",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1275,
                      "src": "8034:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8034:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8008:55:0"
                },
                {
                  "assignments": [
                    527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 527,
                      "mutability": "mutable",
                      "name": "collateralToWithdraw",
                      "nameLocation": "8081:20:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 565,
                      "src": "8073:28:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8073:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 536,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 528,
                            "name": "collateralToWithdrawInBase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "8105:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8146:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 530,
                              "name": "collateralDecmals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 521,
                              "src": "8152:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "8146:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8105:64:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 533,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8104:66:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 534,
                      "name": "baseScale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "8173:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8104:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8073:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 540,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8330:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8334:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8330:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 542,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8354:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8358:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8354:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 544,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "8378:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 545,
                        "name": "collateralToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "8402:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 537,
                        "name": "comet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "8298:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comet_$1251",
                          "typeString": "contract Comet"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8304:12:0",
                      "memberName": "withdrawFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 919,
                      "src": "8298:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8298:134:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "8298:134:0"
                },
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 548,
                            "name": "guarantees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "8442:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct RWA.Collateral storage ref))"
                            }
                          },
                          "id": 552,
                          "indexExpression": {
                            "expression": {
                              "id": 549,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8453:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8457:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8453:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8442:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Collateral_$1362_storage_$",
                            "typeString": "mapping(address => struct RWA.Collateral storage ref)"
                          }
                        },
                        "id": 553,
                        "indexExpression": {
                          "id": 551,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "8465:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8442:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$1362_storage",
                          "typeString": "struct RWA.Collateral storage ref"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8472:16:0",
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1359,
                      "src": "8442:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 555,
                      "name": "collateralToWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "8492:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8442:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "8442:70:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 559,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8534:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8538:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8534:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 561,
                        "name": "baseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "8546:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 562,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "8557:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 558,
                      "name": "Repaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "8527:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8527:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "EmitStatement",
                  "src": "8522:42:0"
                }
              ]
            },
            "documentation": {
              "id": 419,
              "nodeType": "StructuredDocumentation",
              "src": "6693:240:0",
              "text": " @notice Called by RWA issuer to repay base asset to Compound and withdraw collateral posted earlier\n @param asset       RWA for which base asset is paid back\n @param amount      amount of base asset paid back*"
            },
            "functionSelector": "2511e8a0",
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBase",
            "nameLocation": "6947:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "6965:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "6957:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6957:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6980:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "6972:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6972:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6956:31:0"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6997:0:0"
            },
            "scope": 567,
            "src": "6938:1633:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 568,
        "src": "385:8188:0",
        "usedErrors": []
      }
    ],
    "src": "37:8537:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {
    "84532": {
      "events": {},
      "links": {},
      "address": "0x593cF24a170aE5359E14507EC2776D66f8494D40",
      "transactionHash": "0x469ee17893ce7441914ded6d55a23c8beb6b5dd3efc81f72b43a82abc530ef54"
    },
    "11155111": {
      "events": {},
      "links": {},
      "address": "0xaebfd463cc3B42c7fBC8FB42376CEC1cB63a0A48",
      "transactionHash": "0x2edd99a1afb56a5b5ca9481b08d1b05b557cde6b83f517e719b6113aa3cafdad"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-09-02T17:16:14.363Z",
  "devdoc": {
    "author": "Kallol Borah",
    "kind": "dev",
    "methods": {
      "borrowBase(address,uint256)": {
        "params": {
          "amount": "amount of base asset borrowed*",
          "asset": "RWA for which base asset is borrowed"
        }
      },
      "constructor": {
        "params": {
          "comet_": "The Comet contract.*"
        }
      },
      "postCollateral(address,address,uint256)": {
        "params": {
          "amount": "amount of collateral posted*",
          "asset": "RWA for which collateral is posted",
          "collateral": "collateral used to buy bond issued by RWA issuer(must not be baseToken and must be accepted by comet)"
        }
      },
      "repayBase(address,uint256)": {
        "params": {
          "amount": "amount of base asset paid back*",
          "asset": "RWA for which base asset is paid back"
        }
      },
      "submitNewRWA(address,address,uint256,string,uint256)": {
        "params": {
          "apy": "interest rate paid on bond",
          "asset": "RWA for which bond is issued",
          "bond": "bond token that is issued",
          "faceValue": "par value of bond after discounting it with interest rate*",
          "issuingDocs": "ipfs reference for RWA docs"
        }
      }
    },
    "title": "Verified Markets",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "borrowBase(address,uint256)": {
        "notice": "Called by RWA issuer to to borrow base asset from Compound"
      },
      "comet()": {
        "notice": "The Comet contract"
      },
      "constructor": {
        "notice": "Construct a new operator."
      },
      "postCollateral(address,address,uint256)": {
        "notice": "Used by RWA issuer to post collateral used to buy bonds issued by it to borrow from Compound"
      },
      "repayBase(address,uint256)": {
        "notice": "Called by RWA issuer to repay base asset to Compound and withdraw collateral posted earlier"
      },
      "submitNewRWA(address,address,uint256,string,uint256)": {
        "notice": "RWA issuer submits asset details and bond issued that can be purchased to provide collateral to the RWA issuer"
      }
    },
    "notice": "A Compound III operator to enable staking of collateral for real world assets to Compound.",
    "version": 1
  }
}